:root {
  --qni-semantic-spacing-qpu-operation-border-gap: theme('spacing[0.5]');
  --qni-semantic-border-color-default: theme(colors.transparent);
  --qni-semantic-border-color-qpu-operation-outline-hovered: theme(colors.zinc.300);
  --qni-semantic-border-color-qpu-operation-outline-active: theme(colors.purple.500);

  --qni-semantic-radius-qpu-operation-outline: theme(borderRadius.md);
  --qni-semantic-border-width-0: theme(borderWidth.0);
  --qni-semantic-border-width-qpu-operation-outline: theme(borderWidth.2);
}

qft-gate {
  @apply operation;
  @apply operation-disableable;
  @apply operation-draggable;
  @apply operation-grabbable;
  @apply operation-ifable;
  @apply operation-square;

  /* Outlineable */
  &[data-hoverable]::after {
    border-radius: var(--qni-semantic-radius-qpu-operation-outline);
    border-width: var(--qni-semantic-border-width-0);
    border-color: var(--qni-semantic-border-color-default);

    top: calc(
      -1 * (var(--qni-semantic-spacing-qpu-operation-border-gap) +
            var(--qni-semantic-border-width-qpu-operation-outline))
    );
    right: calc(
      -1 * (var(--qni-semantic-spacing-qpu-operation-border-gap) +
            var(--qni-semantic-border-width-qpu-operation-outline))
    );
    bottom: calc(
      -1 * (var(--qni-semantic-spacing-qpu-operation-border-gap) +
            var(--qni-semantic-border-width-qpu-operation-outline))
    );
    left: calc(
      -1 * (var(--qni-semantic-spacing-qpu-operation-border-gap) +
            var(--qni-semantic-border-width-qpu-operation-outline))
    );

    @screen sm {
      border-width: var(--qni-semantic-border-width-qpu-operation-outline);
    }
  }

  /* hover */
  palette-dropzone &[data-hoverable]:hover::after,
  quantum-circuit:not([data-editing]) &[data-hoverable]:not([data-active]):hover::after {
    border-color: var(--qni-semantic-border-color-qpu-operation-outline-hovered);
  }

  /* active */
  &[data-active]::after {
    border-color: var(--qni-semantic-border-color-qpu-operation-outline-active);
  }
}
