{
  "version": 3,
  "sources": ["../../node_modules/fp-ts/lib/number.js", "../../node_modules/fp-ts/lib/function.js", "../../node_modules/fp-ts/lib/Apply.js", "../../node_modules/fp-ts/lib/Chain.js", "../../node_modules/fp-ts/lib/internal.js", "../../node_modules/fp-ts/lib/FromEither.js", "../../node_modules/fp-ts/lib/Functor.js", "../../node_modules/fp-ts/lib/Eq.js", "../../node_modules/fp-ts/lib/Ord.js", "../../node_modules/fp-ts/lib/Magma.js", "../../node_modules/fp-ts/lib/Semigroup.js", "../../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js", "../../node_modules/fp-ts/lib/NonEmptyArray.js", "../../node_modules/fp-ts/lib/Separated.js", "../../node_modules/fp-ts/lib/Witherable.js", "../../node_modules/fp-ts/lib/Zero.js", "../../node_modules/fp-ts/lib/ReadonlyArray.js", "../../node_modules/fp-ts/lib/Array.js", "../../node_modules/fraction.js/fraction.js", "../../node_modules/fraction.js/fraction.js", "../../packages/common/src/angle-parser.ts", "../../packages/common/src/describe.ts", "../../packages/common/src/detailed-error.ts", "../../packages/common/src/format.ts", "../../packages/common/src/util.ts", "../../packages/common/src/complex.ts", "../../packages/common/src/config.ts", "../../packages/common/src/emit-event.ts", "../../packages/common/src/equate.ts", "../../packages/common/src/anti-control-gate.ts", "../../packages/common/src/bloch-display.ts", "../../packages/common/src/control-gate.ts", "../../packages/common/src/h-gate.ts", "../../packages/common/src/measurement-gate.ts", "../../packages/common/src/phase-gate.ts", "../../packages/common/src/qft-dagger-gate.ts", "../../packages/common/src/qft-gate.ts", "../../packages/common/src/rnot-gate.ts", "../../packages/common/src/rx-gate.ts", "../../packages/common/src/ry-gate.ts", "../../packages/common/src/rz-gate.ts", "../../packages/common/src/swap-gate.ts", "../../packages/common/src/t-gate.ts", "../../packages/common/src/write-gate.ts", "../../packages/common/src/x-gate.ts", "../../packages/common/src/y-gate.ts", "../../packages/common/src/z-gate.ts", "../../packages/simulator/src/matrix.ts", "../../packages/simulator/src/state-vector.ts", "../../packages/simulator/src/util.ts", "../../packages/simulator/src/simulator.ts", "../../packages/common/src/angle-parser.ts", "../../packages/common/src/describe.ts", "../../packages/common/src/detailed-error.ts", "../../packages/common/src/format.ts", "../../packages/common/src/util.ts", "../../packages/common/src/complex.ts", "../../packages/common/src/config.ts", "../../packages/common/src/emit-event.ts", "../../packages/common/src/equate.ts", "../../packages/common/src/anti-control-gate.ts", "../../packages/common/src/bloch-display.ts", "../../packages/common/src/control-gate.ts", "../../packages/common/src/h-gate.ts", "../../packages/common/src/measurement-gate.ts", "../../packages/common/src/phase-gate.ts", "../../packages/common/src/qft-dagger-gate.ts", "../../packages/common/src/qft-gate.ts", "../../packages/common/src/rnot-gate.ts", "../../packages/common/src/rx-gate.ts", "../../packages/common/src/ry-gate.ts", "../../packages/common/src/rz-gate.ts", "../../packages/common/src/swap-gate.ts", "../../packages/common/src/t-gate.ts", "../../packages/common/src/write-gate.ts", "../../packages/common/src/x-gate.ts", "../../packages/common/src/y-gate.ts", "../../packages/common/src/z-gate.ts", "src/serviceworker.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.MagmaSub = exports.Show = exports.Bounded = exports.Ord = exports.Eq = exports.isNumber = void 0;\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nvar isNumber = function (u) { return typeof u === 'number'; };\nexports.isNumber = isNumber;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bounded = {\n    equals: exports.Eq.equals,\n    compare: exports.Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidSum = {\n    concat: exports.SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidProduct = {\n    concat: exports.SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Field = {\n    add: exports.SemigroupSum.concat,\n    zero: 0,\n    mul: exports.SemigroupProduct.concat,\n    one: 1,\n    sub: exports.MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) { return function (f) { return f(a); }; };\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nfunction ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n", "\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return function_1.flow(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return function_1.flow(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\nexports.filterOrElse = filterOrElse;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return exports.fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return exports.fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return exports.fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: exports.equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return exports.fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (O) { return exports.fromCompare(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return exports.fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.fromCompare(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: \n    /*#__PURE__*/\n    function_1.constant(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = exports.min(O);\n    var maxO = exports.max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = exports.lt(O);\n    var gtO = exports.gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = \n/*#__PURE__*/\nfunction_1.pipe(exports.ordNumber, \n/*#__PURE__*/\nexports.contramap(function (date) { return date.valueOf(); }));\n", "\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\nexports.filterFirst = filterFirst;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\nexports.filterSecond = filterSecond;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\nexports.concatAll = concatAll;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = exports.constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = exports.concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.uncons = exports.filterWithIndex = exports.filter = exports.groupSort = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return as;\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return as;\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return exports.isNonEmpty(as) ? _.some(as) : _.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return exports.fromReadonlyArray(as.slice()); };\nexports.fromArray = fromArray;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) { return (exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as))); }; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) { return function_1.pipe(as, concatW(that())); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (as) { return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return exports.chainWithIndex(function (_, a) { return f(a); }); };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) {\n    return exports.mapWithIndex(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (S) { return function (f) { return function (as) {\n    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (as) {\n    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function_1.SK); };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexports.extract = _.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) {\n    return f(exports.head(as), exports.tail(as));\n}; };\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, concat([end])); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.filterWithIndex = exports.filter = exports.groupSort = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = exports.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    var xs = exports.fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return exports.copy(as);\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return exports.copy;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return exports.copy(as);\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromArray = function (as) { return (exports.isNonEmpty(as) ? _.some(as) : _.none); };\nexports.fromArray = fromArray;\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return __spreadArray([exports.last(as)], as.slice(0, -1).reverse()); };\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : exports.copy(as);\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = exports.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [exports.copy(as), []] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) {\n    return function_1.pipe(as, concatW(that()));\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (as) {\n    return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) {\n    return exports.chainWithIndex(function (_, a) { return f(a); });\n};\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return exports.mapWithIndex(function (_, a) { return f(a); }); };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexports.extract = RNEA.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.0.0\n */\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) { return f(exports.head(as), exports.tail(as)); }; };\nexports.matchLeft = matchLeft;\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, exports.append(end)); };\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.nonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return function_1.pipe(fa, exports.bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.separated(exports.left(fa), f(exports.right(fa)));\n}; };\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), exports.right(fa));\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));\n}; };\nexports.bimap = bimap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = void 0;\nfunction guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\nexports.guard = guard;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports._chainRecBreadthFirst = exports._chainRecDepthFirst = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = void 0;\nexports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.Witherable = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.some = exports.every = exports.empty = exports.fromArray = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar N = __importStar(require(\"./number\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : exports.empty); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? exports.empty : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? exports.empty : [e.right]); };\nexports.fromEither = fromEither;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty()); }; };\nexports.matchW = matchW;\n/**\n * @category destructors\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };\nexports.matchLeftW = matchLeftW;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };\nexports.matchRightW = matchRightW;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    if (exports.isEmpty(as)) {\n        return exports.empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : exports.isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return (exports.isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return (exports.isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return exports.isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return exports.isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeLeft = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n}; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n    };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.fromOption(f.apply(void 0, a));\n}; };\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(RNEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar concatW = function (second) { return function (first) {\n    return exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second);\n}; };\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(second)(first) : exports.isNonEmpty(first) ? first : second;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nvar _chainRecDepthFirst = function (a, f) { return function_1.pipe(a, exports.chainRecDepthFirst(f)); };\nexports._chainRecDepthFirst = _chainRecDepthFirst;\n/** @internal */\nvar _chainRecBreadthFirst = function (a, f) { return function_1.pipe(a, exports.chainRecBreadthFirst(f)); };\nexports._chainRecBreadthFirst = _chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return fa.concat(that());\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) { return function (f) { return function (fa) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return (exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: exports.empty\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nvar chainRecDepthFirst = function (f) { return function (a) {\n    var todo = __spreadArray([], f(a));\n    var out = [];\n    while (todo.length > 0) {\n        var e = todo.shift();\n        if (_.isLeft(e)) {\n            todo.unshift.apply(todo, f(e.left));\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    return out;\n}; };\nexports.chainRecDepthFirst = chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: exports._chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nvar chainRecBreadthFirst = function (f) { return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n    function go(e) {\n        if (_.isLeft(e)) {\n            f(e.left).forEach(function (v) { return todo.push(v); });\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n        var e = initial_1[_i];\n        go(e);\n    }\n    while (todo.length > 0) {\n        go(todo.shift());\n    }\n    return out;\n}; };\nexports.chainRecBreadthFirst = chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: exports._chainRecBreadthFirst\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexports.filterE = \n/*#__PURE__*/\nWitherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (exports.isEmpty(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar every = function (predicate) { return function (as) { return as.every(predicate); }; };\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) {\n    return as.some(predicate);\n}; };\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = void 0;\nexports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\nexports.fromEither = fromEither;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n}; };\nexports.matchW = matchW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty()); }; };\nexports.matchLeftW = matchLeftW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty()); }; };\nexports.matchRightW = matchRightW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar tail = function (as) { return (exports.isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar init = function (as) { return (exports.isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeLeft = function (n) { return function (as) { return (exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n)); }; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\nexports.findFirst = findFirst;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\nexports.findLast = findLast;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return exports.modifyAt(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return (exports.isEmpty(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.fromOption(f.apply(void 0, a));\n}; };\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(NEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar concatW = function (second) { return function (first) {\n    return exports.isEmpty(first) ? exports.copy(second) : exports.isEmpty(second) ? exports.copy(first) : first.concat(second);\n}; };\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second)\n            ? unionE(second)(first)\n            : exports.isNonEmpty(first)\n                ? exports.copy(first)\n                : exports.copy(second);\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"\uD83D\uDE00\", \"\uD83D\uDE2B\", \"\uD83D\uDE0E\"])), [\n *   \"a1\uD83D\uDE00\", \"a1\uD83D\uDE2B\", \"a1\uD83D\uDE0E\",\n *   \"a2\uD83D\uDE00\", \"a2\uD83D\uDE2B\", \"a2\uD83D\uDE0E\",\n *   \"b1\uD83D\uDE00\", \"b1\uD83D\uDE2B\", \"b1\uD83D\uDE0E\",\n *   \"b2\uD83D\uDE00\", \"b2\uD83D\uDE2B\", \"b2\uD83D\uDE0E\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"\uD83D\uDE00\", \"\uD83D\uDE2B\", \"\uD83D\uDE0E\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"\uD83D\uDE00\", \"\uD83D\uDE2B\", \"\uD83D\uDE0E\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\nexports.filter = filter;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = as[i];\n        if (predicateWithIndex(i, b)) {\n            right.push(b);\n        }\n        else {\n            left.push(b);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return exports.partitionMapWithIndex(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return fa.concat(that()); }; };\nexports.altW = altW;\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: []\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexports.chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexports.chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexports.filterE = \n/*#__PURE__*/\nWitherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "/**\n * @license Fraction.js v4.2.0 05/03/2022\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throw Fraction['InvalidParameter'];\n    }\n    return n * s;\n  }\n\n  // Creates a new Fraction internally without the need of the bulky constructor\n  function newFraction(n, d) {\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    var f = Object.create(Fraction.prototype);\n    f[\"s\"] = n < 0 ? -1 : 1;\n\n    n = n < 0 ? -n : n;\n\n    var a = gcd(n, d);\n\n    f[\"n\"] = n / a;\n    f[\"d\"] = d / a;\n    return f;\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n/= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s+= 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n        factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n\n      if (n % 1 !== 0 || d % 1 !== 0) {\n        throw Fraction['NonIntegerParameter'];\n      }\n\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n*= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throw Fraction['InvalidParameter'];\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1/= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A+= C;\n                    B+= D;\n                  } else {\n                    C+= A;\n                    D+= B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n*= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throw Fraction['InvalidParameter'];\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A+= 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A+= 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A+= 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throw Fraction['InvalidParameter'];\n      }\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d/= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d/= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a%= b;\n      if (!a)\n        return b;\n      b%= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    parse(a, b);\n\n    if (this instanceof Fraction) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse variable a\n      this[\"s\"] = P[\"s\"];\n      this[\"n\"] = P[\"n\"] / a;\n      this[\"d\"] = P[\"d\"] / a;\n    } else {\n      return newFraction(P['s'] * P['n'], P['d']);\n    }\n  }\n\n  Fraction['DivisionByZero'] = new Error(\"Division by Zero\");\n  Fraction['InvalidParameter'] = new Error(\"Invalid argument\");\n  Fraction['NonIntegerParameter'] = new Error(\"Parameters must be integer\");\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return newFraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return newFraction(this['s'] * this['n'], this['d']);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        throw Fraction['DivisionByZero'];\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return newFraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return newFraction(0, 1);\n      }\n      return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return newFraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return newFraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180\u00B0\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return newFraction(d, n);\n      }\n      return newFraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      eps = eps || 0.001;\n\n      var thisABS = this['abs']();\n      var cont = thisABS['toContinued']();\n\n      for (var i = 1; i < cont.length; i++) {\n\n        var s = newFraction(cont[i - 1], 1);\n        for (var k = i - 2; k >= 0; k--) {\n          s = s['inverse']()['add'](cont[k]);\n        }\n\n        if (s['sub'](thisABS)['abs']().valueOf() < eps) {\n          return s['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction(true) => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          str+= \" \";\n          n%= d;\n        }\n\n        str+= n;\n        str+= '/';\n        str+= d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          n%= d;\n        }\n\n        str+= \"\\\\frac{\";\n        str+= n;\n        str+= '}{';\n        str+= d;\n        str+= '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] < 0 ? \"-\" : \"\";\n\n      str+= N / D | 0;\n\n      N%= D;\n      N*= 10;\n\n      if (N)\n        str+= \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \"(\";\n        for (var i = cycLen; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n", "/**\n * @license Fraction.js v4.2.0 05/03/2022\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throw Fraction['InvalidParameter'];\n    }\n    return n * s;\n  }\n\n  // Creates a new Fraction internally without the need of the bulky constructor\n  function newFraction(n, d) {\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    var f = Object.create(Fraction.prototype);\n    f[\"s\"] = n < 0 ? -1 : 1;\n\n    n = n < 0 ? -n : n;\n\n    var a = gcd(n, d);\n\n    f[\"n\"] = n / a;\n    f[\"d\"] = d / a;\n    return f;\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n/= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s+= 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n        factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n\n      if (n % 1 !== 0 || d % 1 !== 0) {\n        throw Fraction['NonIntegerParameter'];\n      }\n\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n*= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throw Fraction['InvalidParameter'];\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1/= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A+= C;\n                    B+= D;\n                  } else {\n                    C+= A;\n                    D+= B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n*= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throw Fraction['InvalidParameter'];\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A+= 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A+= 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A+= 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throw Fraction['InvalidParameter'];\n      }\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d/= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d/= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a%= b;\n      if (!a)\n        return b;\n      b%= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    parse(a, b);\n\n    if (this instanceof Fraction) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse variable a\n      this[\"s\"] = P[\"s\"];\n      this[\"n\"] = P[\"n\"] / a;\n      this[\"d\"] = P[\"d\"] / a;\n    } else {\n      return newFraction(P['s'] * P['n'], P['d']);\n    }\n  }\n\n  Fraction['DivisionByZero'] = new Error(\"Division by Zero\");\n  Fraction['InvalidParameter'] = new Error(\"Invalid argument\");\n  Fraction['NonIntegerParameter'] = new Error(\"Parameters must be integer\");\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return newFraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return newFraction(this['s'] * this['n'], this['d']);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        throw Fraction['DivisionByZero'];\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return newFraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return newFraction(0, 1);\n      }\n      return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return newFraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return newFraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180\u00B0\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return newFraction(d, n);\n      }\n      return newFraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      eps = eps || 0.001;\n\n      var thisABS = this['abs']();\n      var cont = thisABS['toContinued']();\n\n      for (var i = 1; i < cont.length; i++) {\n\n        var s = newFraction(cont[i - 1], 1);\n        for (var k = i - 2; k >= 0; k--) {\n          s = s['inverse']()['add'](cont[k]);\n        }\n\n        if (s['sub'](thisABS)['abs']().valueOf() < eps) {\n          return s['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction(true) => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          str+= \" \";\n          n%= d;\n        }\n\n        str+= n;\n        str+= '/';\n        str+= d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          n%= d;\n        }\n\n        str+= \"\\\\frac{\";\n        str+= n;\n        str+= '}{';\n        str+= d;\n        str+= '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] < 0 ? \"-\" : \"\";\n\n      str+= N / D | 0;\n\n      N%= D;\n      N*= 10;\n\n      if (N)\n        str+= \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \"(\";\n        for (var i = cycLen; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n", "import Fraction from 'fraction.js'\n\nexport function radian(angle: string): number {\n  const coefficient = piCoefficient(angle)\n  const fraction = new Fraction(coefficient).valueOf()\n\n  return fraction * Math.PI\n}\n\nexport function angleDenominator(angle: string): number {\n  const coefficient = piCoefficient(angle)\n  const split = coefficient.split('/')\n\n  if (split.length === 1) {\n    return 1\n  } else if (split.length === 2) {\n    return parseInt(split[1])\n  } else {\n    throw new Error(`Failed to parse angle '${angle}'`)\n  }\n}\n\nexport function angleNumerator(angle: string): number {\n  const coefficient = piCoefficient(angle)\n  const split = coefficient.split('/')\n\n  if (split.length === 1) {\n    return parseInt(split[0])\n  } else if (split.length === 2) {\n    return parseInt(split[0])\n  } else {\n    throw new Error(`Failed to parse angle '${angle}'`)\n  }\n}\n\nexport function isAngleLessThan(angle: string, other: string): boolean {\n  return new Fraction(piCoefficient(angle)).valueOf() < new Fraction(piCoefficient(other)).valueOf()\n}\n\nexport function isAngleGreaterThan(angle: string, other: string): boolean {\n  return new Fraction(piCoefficient(angle)).valueOf() > new Fraction(piCoefficient(other)).valueOf()\n}\n\nexport function isValidAngle(angle: string): boolean {\n  if (angle === '0') return true\n  if (!/\u03C0/.test(angle)) return false\n\n  try {\n    const coefficient = piCoefficient(angle)\n    new Fraction(coefficient).valueOf()\n\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport function piCoefficient(angle: string): string {\n  return angle.replace(/(\\d+)\u03C0/g, '$1').replace(/\u03C0/g, '1')\n}\n\nexport function reduceAngle(angle: string): string {\n  try {\n    const coefficient = piCoefficient(angle)\n    const reduced = new Fraction(coefficient).toFraction()\n    const split = reduced.split('/')\n\n    let numerator: string\n    if (split[0] === '0') {\n      numerator = '0'\n    } else if (split[0] === '1') {\n      numerator = `\u03C0`\n    } else if (split[0] === '-1') {\n      numerator = `-\u03C0`\n    } else {\n      numerator = `${split[0]}\u03C0`\n    }\n\n    if (split.length === 1) {\n      return numerator\n    } else {\n      return `${numerator}/${split[1]}`\n    }\n  } catch (e) {\n    throw new Error(`Failed to parse angle '${angle}'`)\n  }\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst COLLECTION_CUTOFF = 1000\nconst BAD_TO_STRING_RESULT = Object.prototype.toString.call({})\nconst RECURSE_LIMIT_DESCRIPTION = '!recursion-limit!'\nconst DEFAULT_RECURSION_LIMIT = 10\n\n// Attempts to give a useful and unambiguous description of the given value.\nexport function describe(value: unknown, recursionLimit = DEFAULT_RECURSION_LIMIT): string {\n  return (\n    tryDescribeAtomic(value) || tryDescribeCollection(value, recursionLimit) || describeFallback(value, recursionLimit)\n  )\n}\n\nfunction tryDescribeAtomic(value: unknown) {\n  if (value === null) return 'null'\n  if (value === undefined) return 'undefined'\n  if (typeof value === 'string') return `\"${value}\"`\n  if (typeof value === 'number') return String(value)\n\n  return undefined\n}\n\nfunction tryDescribeCollection(value: unknown, recursionLimit: number) {\n  if (recursionLimit === 0) return RECURSE_LIMIT_DESCRIPTION\n  if (value instanceof Map) return describeMap(value, recursionLimit)\n  if (value instanceof Set) return describeSet(value, recursionLimit)\n  const isIterable = (v: unknown): v is Iterable<unknown> => {\n    if ((v as Iterable<unknown>)[Symbol.iterator] !== undefined) {\n      return true\n    }\n    return false\n  }\n  if (isIterable(value)) return describeIterable(value, recursionLimit)\n\n  return undefined\n}\n\nfunction describeFallback(value: unknown, recursionLimit: number) {\n  const defaultString = String(value)\n  if (defaultString !== BAD_TO_STRING_RESULT) return defaultString\n\n  return describeObject(value, recursionLimit)\n}\n\nfunction describeMap(map: Map<unknown, unknown>, limit: number) {\n  const entries = []\n  for (const [k, v] of map.entries()) {\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    const keyDesc = describe(k, limit - 1)\n    const valDesc = describe(v, limit - 1)\n    entries.push(`${keyDesc}: ${valDesc}`)\n  }\n  return `Map{${entries.join(', ')}}`\n}\n\nfunction describeSet(set: Set<unknown>, limit: number) {\n  const entries = []\n  for (const e of set) {\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    entries.push(describe(e, limit - 1))\n  }\n  return `Set{${entries.join(', ')}}`\n}\n\nfunction describeIterable(seq: Iterable<unknown>, limit: number): string {\n  const entries = []\n  for (const e of seq) {\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    entries.push(describe(e, limit - 1))\n  }\n  const prefix = Array.isArray(seq) ? '' : seq.constructor.name\n  return `${prefix}[${entries.join(', ')}]`\n}\n\nfunction describeObject(value: unknown, limit: number) {\n  const entries = []\n  for (const k in value as Record<string, unknown>) {\n    if (!Object.prototype.hasOwnProperty.call(value, k)) {\n      continue\n    }\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    const v = (value as Record<string, unknown>)[k]\n    const keyDesc = describe(k, limit - 1)\n    const valDesc = describe(v, limit - 1)\n    entries.push(`${keyDesc}: ${valDesc}`)\n  }\n\n  const typeName = (value as Record<string, unknown>).constructor.name\n  const prefix = typeName === {}.constructor.name ? '' : `(Type: ${typeName})`\n  return `${prefix}{${entries.join(', ')}}`\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {describe} from './describe'\n\nlet CONSTRUCTOR_CALLS_NESTING = 0\n\nexport class DetailedError extends Error {\n  public details: string | undefined\n  private detailsObj: unknown\n\n  constructor(message: string, detailsObj: unknown) {\n    super(message)\n\n    this.detailsObj = detailsObj\n    this.name = 'Error'\n    this.message = message\n    this.stack = new Error().stack\n    if (this.stack !== undefined) {\n      this.stack = this.stack.replace(/^Error\\n\\s+at new DetailedError (\\S+)\\s?\\n\\s+at /, '\\n    ')\n    }\n\n    CONSTRUCTOR_CALLS_NESTING++\n    try {\n      this.details =\n        CONSTRUCTOR_CALLS_NESTING === 1\n          ? describe(this.detailsObj)\n          : '(failed to describe detailsObj due to possibly re-entrancy)'\n    } catch (ex) {\n      // eslint-disable-next-line no-console\n      console.error(ex)\n      this.details = '(failed to describe detailsObj, see the console for details)'\n    } finally {\n      CONSTRUCTOR_CALLS_NESTING--\n    }\n  }\n}\n", "type UnicodeFraction = {character: string; ref: string; value: number}\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const UNICODE_FRACTIONS = [\n  {character: '\\u00BD', ref: '\u00BD', expanded: '1/2', value: 1 / 2},\n  {character: '\\u00BC', ref: '\u00BC', expanded: '1/4', value: 1 / 4},\n  {character: '\\u00BE', ref: '\u00BE', expanded: '3/4', value: 3 / 4},\n  {character: '\\u2153', ref: '\u2153', expanded: '1/3', value: 1 / 3},\n  {character: '\\u2154', ref: '\u2154', expanded: '2/3', value: 2 / 3},\n  {character: '\\u2155', ref: '\u2155', expanded: '1/5', value: 1 / 5},\n  {character: '\\u2156', ref: '\u2156', expanded: '2/5', value: 2 / 5},\n  {character: '\\u2157', ref: '\u2157', expanded: '3/5', value: 3 / 5},\n  {character: '\\u2158', ref: '\u2158', expanded: '4/5', value: 4 / 5},\n  {character: '\\u2159', ref: '\u2159', expanded: '1/6', value: 1 / 6},\n  {character: '\\u215A', ref: '\u215A', expanded: '5/6', value: 5 / 6},\n  {character: '\\u2150', ref: '\u2150', expanded: '1/7', value: 1 / 7},\n  {character: '\\u215B', ref: '\u215B', expanded: '1/8', value: 1 / 8},\n  {character: '\\u215C', ref: '\u215C', expanded: '3/8', value: 3 / 8},\n  {character: '\\u215D', ref: '\u215D', expanded: '5/8', value: 5 / 8},\n  {character: '\\u215E', ref: '\u215E', expanded: '7/8', value: 7 / 8},\n  {character: '\\u2151', ref: '\u2151', expanded: '1/9', value: 1 / 9},\n  {character: '\\u2152', ref: '\u2152', expanded: '1/10', value: 1 / 10}\n]\n\n/**\n * Stores formatting options, for determining what string output should look\n * like.\n */\nexport class Format {\n  /**\n   * Returns an approximated result, but with the constraint that when it\n   * changes slightly it should \"look the same\". (It should look good when\n   * varying and animated.)\n   */\n  static readonly CONSISTENT = new Format(false, 0, 2, ', ')\n\n  /**\n   * Returns an accurate result, but favoring looking nice over being small.\n   */\n  static readonly EXACT = new Format(true, 0, undefined, ', ')\n\n  /**\n   * Returns an accurate result, favoring being small over looking nice.\n   */\n  static readonly MINIFIED = new Format(true, 0, undefined, ',')\n\n  /**\n   * Returns an approximated result, strongly favoring looking nice.\n   */\n  static readonly SIMPLIFIED = new Format(true, 0.0005, 3, ', ')\n\n  /**\n   * Parses the given text into a float. Works for text created by\n   * [[formatFloat]].\n   */\n  static parseFloat(text: string): number {\n    if (text.length === 0) {\n      throw new Error(`Not a number: '${text}'`)\n    }\n    if (text[0] === '-') {\n      return -Format.parseFloat(text.substr(1))\n    }\n    if (text[0] === '\\u221A') {\n      return Math.sqrt(Format.parseFloat(text.substr(1)))\n    }\n\n    const fraction = Format.matchUnicodeFraction(e => e.character === text)\n    if (fraction !== undefined) {\n      return fraction.value\n    }\n\n    const result = parseFloat(text)\n    if (isNaN(result)) {\n      throw new Error(`Not a number: '${text}'`)\n    }\n    return result\n  }\n\n  /**\n   * Corrects a value to a nearby simple fraction or root thereof, such as\n   * sqrt(1/2), so it can be printed compactly.\n   *\n   * @param value  The value to round.\n   * @param epsilon  The maximum offset error introduced by the rounding.\n   */\n  static simplifyByRounding(value: number, epsilon: number): number {\n    if (value < 0) {\n      return -Format.simplifyByRounding(-value, epsilon)\n    }\n\n    const r = value % 1\n    if (r <= epsilon || 1 - r <= epsilon) {\n      return Math.round(value)\n    }\n\n    const fraction = Format.matchUnicodeFraction(e => Math.abs(e.value - value) <= epsilon)\n    if (fraction !== undefined) {\n      return fraction.value\n    }\n\n    const rootFraction = Format.matchUnicodeFraction(e => Math.abs(Math.sqrt(e.value) - value) <= epsilon)\n    if (rootFraction !== undefined) {\n      return Math.sqrt(rootFraction.value)\n    }\n\n    return value\n  }\n\n  /**\n   * Returns the first element of an array matching the given predicate, or else\n   * returns undefined.\n   *\n   * @hidden\n   */\n  static matchUnicodeFraction(predicate: (arrayItem: UnicodeFraction) => boolean): UnicodeFraction | undefined {\n    for (const each of UNICODE_FRACTIONS) {\n      if (predicate(each)) return each\n    }\n    return undefined\n  }\n\n  public allowAbbreviation: boolean\n  public maxAbbreviationError: number\n  public fixedDigits: number | undefined\n  public itemSeparator: string\n\n  /**\n   * @param allowAbbreviation  Should outputs be shortened, if possible?\n   * @param maxAbbreviationError  How much error is abbreviating allowed to introduce?\n   * @param fixedDigits  Use toFixed? How many digits?\n   * @param itemSeparator  What should list items be separated by?\n   */\n  constructor(\n    allowAbbreviation: boolean,\n    maxAbbreviationError: number,\n    fixedDigits: number | undefined,\n    itemSeparator: string\n  ) {\n    this.allowAbbreviation = allowAbbreviation\n    this.maxAbbreviationError = maxAbbreviationError\n    this.fixedDigits = fixedDigits\n    this.itemSeparator = itemSeparator\n  }\n\n  formatFloat(f: number): string {\n    if (this.allowAbbreviation) {\n      return this.abbreviateFloat(f, this.maxAbbreviationError, this.fixedDigits)\n    }\n    if (this.fixedDigits !== undefined) {\n      return f.toFixed(this.fixedDigits)\n    }\n    return String(f)\n  }\n\n  /**\n   * Returns a string representation of a float, taking advantage of unicode\n   * fractions and square roots.\n   *\n   * @param value  The value to represent as a string.\n   * @param epsilon  The maximum error introduced by using an expression.\n   * @param digits  digits The number of digits to use if no expression matches.\n   */\n  private abbreviateFloat(value: number, epsilon = 0, digits: number | undefined = undefined): string {\n    if (Math.abs(value) < epsilon) return '0'\n    if (value < 0) return `-${this.abbreviateFloat(-value, epsilon, digits)}`\n\n    const fraction = Format.matchUnicodeFraction(e => Math.abs(e.value - value) <= epsilon)\n    if (fraction !== undefined) {\n      return fraction.character\n    }\n\n    const rootFraction = Format.matchUnicodeFraction(e => Math.abs(Math.sqrt(e.value) - value) <= epsilon)\n    if (rootFraction !== undefined) {\n      return `\\u221A${rootFraction.character}`\n    }\n\n    if (value % 1 !== 0 && digits !== undefined) {\n      return value.toFixed(digits)\n    }\n\n    return value.toString()\n  }\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Util {\n  static need(expression: boolean, message: string, args?: unknown[]): asserts expression {\n    if (expression !== true) {\n      const argDesc = args === undefined ? '(not provided)' : `[${Array.prototype.slice.call(args).join(', ')}]`\n      const msgDesc = message === undefined ? '(not provided)' : message\n      const msg = `Precondition failed\\n\\nMessage: ${msgDesc}\\n\\nArgs: ${argDesc}`\n      throw new Error(msg)\n    }\n  }\n\n  static notNull<T>(v: T): asserts v is NonNullable<T> {\n    Util.need(v !== null && v !== undefined, 'notNull')\n  }\n\n  static snappedCosSin(radians: number): number[] {\n    const unit = Math.PI / 4\n    const i = Math.round(radians / unit)\n    if (i * unit === radians) {\n      const s = Math.sqrt(0.5)\n      const snaps = [\n        [1, 0],\n        [s, s],\n        [0, 1],\n        [-s, s],\n        [-1, 0],\n        [-s, -s],\n        [0, -1],\n        [s, -s]\n      ]\n      return snaps[i & 7]\n    }\n    return [Math.cos(radians), Math.sin(radians)]\n  }\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DetailedError} from './detailed-error'\nimport {Format} from './format'\nimport {Util} from './util'\n\nexport class Complex {\n  static readonly ZERO = new Complex(0, 0)\n  static readonly ONE = new Complex(1, 0)\n  static readonly I = new Complex(0, 1)\n\n  public real: number\n  public imag: number\n\n  static from(v: number | Complex): Complex {\n    if (v instanceof Complex) {\n      return v\n    }\n    if (typeof v === 'number') {\n      return new Complex(v, 0)\n    }\n    throw new DetailedError('Unrecognized value type.', {v})\n  }\n\n  static polar(magnitude: number, phase: number): Complex {\n    const [cos, sin] = Util.snappedCosSin(phase)\n    return new Complex(magnitude * cos, magnitude * sin)\n  }\n\n  static realPartOf(v: number | Complex): number {\n    if (v instanceof Complex) {\n      return v.real\n    }\n    if (typeof v === 'number') {\n      return v\n    }\n    throw new DetailedError('Unrecognized value type.', {v})\n  }\n\n  static imagPartOf(v: number | Complex): number {\n    if (v instanceof Complex) {\n      return v.imag\n    }\n    if (typeof v === 'number') {\n      return 0\n    }\n    throw new DetailedError('Unrecognized value type.', {v})\n  }\n\n  constructor(real: number, imag: number) {\n    this.real = real\n    this.imag = imag\n  }\n\n  static rootsOfQuadratic(a: number | Complex, b: number | Complex, c: number | Complex): Complex[] {\n    a = Complex.from(a)\n    b = Complex.from(b)\n    c = Complex.from(c)\n\n    if (a.isEqualTo(0)) {\n      if (!b.isEqualTo(0)) {\n        return [c.times(-1).dividedBy(b)]\n      }\n      if (!c.isEqualTo(0)) {\n        return []\n      }\n      throw Error('Degenerate')\n    }\n\n    const difs = b.times(b).minus(a.times(c).times(4)).sqrts()\n    const mid = b.times(-1)\n    const denom = a.times(2)\n    return difs.map(d => mid.minus(d).dividedBy(denom))\n  }\n\n  isEqualTo(other: unknown): boolean {\n    if (other instanceof Complex) {\n      return this.real === other.real && this.imag === other.imag\n    }\n    if (typeof other === 'number') {\n      return this.real === other && this.imag === 0\n    }\n    return false\n  }\n\n  isApproximatelyEqualTo(other: number | Complex | unknown, epsilon: number): boolean {\n    if (other instanceof Complex || typeof other === 'number') {\n      const d = this.minus(Complex.from(other))\n      return Math.abs(d.real) <= epsilon && Math.abs(d.imag) <= epsilon && d.abs() <= epsilon\n    }\n    return false\n  }\n\n  norm2(): number {\n    return this.real * this.real + this.imag * this.imag\n  }\n\n  abs(): number {\n    return Math.sqrt(this.norm2())\n  }\n\n  unit(): Complex {\n    const m = this.norm2()\n    if (m < 0.00001) {\n      return Complex.polar(1, this.phase())\n    }\n    return this.dividedBy(Math.sqrt(m))\n  }\n\n  plus(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    return new Complex(this.real + c.real, this.imag + c.imag)\n  }\n\n  minus(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    return new Complex(this.real - c.real, this.imag - c.imag)\n  }\n\n  times(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    return new Complex(this.real * c.real - this.imag * c.imag, this.real * c.imag + this.imag * c.real)\n  }\n\n  dividedBy(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    const d = c.norm2()\n    if (d === 0) {\n      throw new Error('Division by Zero')\n    }\n\n    const n = this.times(c.conjugate())\n    return new Complex(n.real / d, n.imag / d)\n  }\n\n  sqrts(): [Complex] | [Complex, Complex] {\n    const [r, i] = [this.real, this.imag]\n    const m = Math.sqrt(Math.sqrt(r * r + i * i))\n    if (m === 0) {\n      return [Complex.ZERO]\n    }\n    if (i === 0 && r < 0) {\n      return [new Complex(0, m), new Complex(0, -m)]\n    }\n\n    const a = this.phase() / 2\n    const c = Complex.polar(m, a)\n    return [c, c.times(-1)]\n  }\n\n  conjugate(): Complex {\n    return new Complex(this.real, -this.imag)\n  }\n\n  toString(format?: Format): string {\n    format = format || Format.EXACT\n    return format.allowAbbreviation ? this.toStringAllowSingleValue(format) : this.toStringBothValues(format)\n  }\n\n  neg(): Complex {\n    return new Complex(-this.real, -this.imag)\n  }\n\n  raisedTo(exponent: number | Complex): Complex {\n    if (exponent === 0.5 && this.imag === 0 && this.real >= 0) {\n      return new Complex(Math.sqrt(this.real), 0)\n    }\n    if (Complex.ZERO.isEqualTo(exponent)) {\n      return Complex.ONE\n    }\n    if (this.isEqualTo(Complex.ZERO)) {\n      return Complex.ZERO\n    }\n    return this.ln().times(Complex.from(exponent)).exp()\n  }\n\n  exp(): Complex {\n    return Complex.polar(Math.exp(this.real), this.imag)\n  }\n\n  cos(): Complex {\n    const z = this.times(Complex.I)\n    return z.exp().plus(z.neg().exp()).times(0.5)\n  }\n\n  sin(): Complex {\n    const z = this.times(Complex.I)\n    return z.exp().minus(z.neg().exp()).dividedBy(new Complex(0, 2))\n  }\n\n  tan(): Complex {\n    return this.sin().dividedBy(this.cos())\n  }\n\n  ln(): Complex {\n    return new Complex(Math.log(this.abs()), this.phase())\n  }\n\n  phase(): number {\n    return Math.atan2(this.imag, this.real)\n  }\n\n  private toStringAllowSingleValue(format: Format): string {\n    if (Math.abs(this.imag) <= format.maxAbbreviationError) {\n      return format.formatFloat(this.real)\n    }\n    if (Math.abs(this.real) <= format.maxAbbreviationError) {\n      if (Math.abs(this.imag - 1) <= format.maxAbbreviationError) {\n        return 'i'\n      }\n      if (Math.abs(this.imag + 1) <= format.maxAbbreviationError) {\n        return '-i'\n      }\n      return `${format.formatFloat(this.imag)}i`\n    }\n\n    return this.toStringBothValues(format)\n  }\n\n  private toStringBothValues(format: Format): string {\n    const separator = this.imag >= 0 ? '+' : '-'\n    const imagFactor =\n      format.allowAbbreviation && Math.abs(Math.abs(this.imag) - 1) <= format.maxAbbreviationError\n        ? ''\n        : format.formatFloat(Math.abs(this.imag))\n    const prefix = format.allowAbbreviation || format.fixedDigits === undefined || this.real < 0 ? '' : '+'\n    return `${prefix + format.formatFloat(this.real) + separator + imagFactor}i`\n  }\n}\n", "export const Config = {\n  MAX_QUBIT_COUNT: 16\n} as const\n", "/**\n * Emit a custom event\n *\n * @param type    The event type\n * @param detail  Any details to pass along with the event\n * @param element The element to attach the event to\n */\nexport function emitEvent(type: string, detail = {}, element: Node = document): boolean {\n  const event = new CustomEvent(type, {\n    bubbles: true,\n    cancelable: true,\n    detail\n  })\n\n  return element.dispatchEvent(event)\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function hasOwnProperty<K extends PropertyKey>(obj: unknown, key: K): obj is Record<K, unknown> {\n  return obj !== null && obj !== undefined && key in (obj as Record<string, unknown>)\n}\n\nexport type ArrayIsh =\n  | unknown[]\n  | Float32Array\n  | Float64Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Uint8Array\n  | Uint16Array\n  | Uint32Array\n  | Uint8ClampedArray\n\nconst GENERIC_ARRAY_TYPES = [\n  Float32Array,\n  Float64Array,\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray\n]\n\nexport function equate(subject: unknown, other: unknown): boolean {\n  if (subject === other || (isExactlyNaN(subject) && isExactlyNaN(other))) {\n    return true\n  }\n\n  const customEquality = tryEquateCustom(subject, other)\n  if (customEquality !== undefined) {\n    return customEquality\n  }\n  if (isAtomic(subject) || isAtomic(other) || !eqType(subject, other)) {\n    return false\n  }\n\n  if (subject instanceof Map && other instanceof Map) {\n    return equateMaps(subject, other)\n  }\n  if (subject instanceof Set && other instanceof Set) {\n    return equateSets(subject, other)\n  }\n  if (isIndexable(subject) && isIndexable(other)) {\n    return equateIndexables(subject, other)\n  }\n\n  return equateObjects(subject, other)\n}\n\nfunction isIndexable(value: unknown): value is ArrayIsh {\n  return Array.isArray(value) || !GENERIC_ARRAY_TYPES.every(t => !(value instanceof t))\n}\n\nfunction isExactlyNaN(v: unknown) {\n  return typeof v === 'number' && isNaN(v)\n}\n\nfunction tryEquateCustom(subject: unknown, other: unknown): boolean | undefined {\n  if (!isAtomic(subject) && hasOwnProperty(subject, 'isEqualTo') && typeof subject.isEqualTo === 'function') {\n    return subject.isEqualTo(other) as boolean\n  }\n  if (!isAtomic(other) && hasOwnProperty(other, 'isEqualTo') && typeof other.isEqualTo === 'function') {\n    return other.isEqualTo(subject) as boolean\n  }\n  return undefined\n}\n\ntype Atomic = null | undefined | string | number | boolean\n\nfunction isAtomic(value: unknown): value is Atomic {\n  return (\n    value === null ||\n    value === undefined ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\nfunction equateMaps(subject: Map<unknown, unknown>, other: Map<unknown, unknown>) {\n  if (subject.size !== other.size) {\n    return false\n  }\n  for (const [k, v] of subject) {\n    if (!other.has(k)) {\n      return false\n    }\n    const otherV = other.get(k)\n    if (!equate(v, otherV)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction equateSets(subject: Set<unknown>, other: Set<unknown>) {\n  if (subject.size !== other.size) {\n    return false\n  }\n  for (const k of subject) {\n    if (!other.has(k)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction eqType(subject: unknown, other: unknown): boolean {\n  return typeof subject === typeof other\n}\n\nfunction equateIndexables(subject: ArrayIsh, other: ArrayIsh) {\n  if (subject.length !== other.length) {\n    return false\n  }\n  for (let i = 0; i < subject.length; i++) {\n    if (!equate(subject[i], other[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction objectKeys(obj: unknown) {\n  const result = new Set<PropertyKey>()\n  for (const k in obj as Record<PropertyKey, unknown>) {\n    if (hasOwnProperty(obj, k)) {\n      result.add(k)\n    }\n  }\n  return result\n}\n\nfunction equateObjects(subject: unknown, other: unknown) {\n  const keys = objectKeys(subject)\n  if (!equateSets(keys, objectKeys(other))) {\n    return false\n  }\n\n  for (const k of keys) {\n    if (k === Symbol.iterator) {\n      continue\n    }\n    if (!equate((subject as Record<string, unknown>)[k as string], (other as Record<string, unknown>)[k as string])) {\n      return false\n    }\n  }\n\n  const hasSubjectIter = hasOwnProperty(subject, Symbol.iterator)\n  const hasOtherIter = hasOwnProperty(other, Symbol.iterator)\n  if (hasSubjectIter !== hasOtherIter) {\n    return false\n  }\n  if (hasSubjectIter && hasOtherIter) {\n    if (!equateIterables(subject as Iterable<unknown>, other as Iterable<unknown>)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction equateIterables(subject: Iterable<unknown>, other: Iterable<unknown>) {\n  const otherIter = other[Symbol.iterator]()\n  for (const subjectItem of subject) {\n    const otherItemDone = otherIter.next()\n    if (otherItemDone.done || !equate(subjectItem, otherItemDone.value)) {\n      return false\n    }\n  }\n  return otherIter.next().done\n}\n", "export const SerializedAntiControlGateType = '\u25E6'\n\nexport type SerializedAntiControlGate = {\n  type: typeof SerializedAntiControlGateType\n  targets: number[]\n}\n", "export const SerializedBlochDisplayType = 'Bloch'\n\nexport type SerializedBlochDisplay = {\n  type: typeof SerializedBlochDisplayType\n  targets: number[]\n}\n", "export const SerializedControlGateType = '\u2022'\n\nexport type SerializedControlGate = {\n  type: typeof SerializedControlGateType\n  targets: number[]\n}\n", "export const SerializedHGateType = 'H'\n\nexport type SerializedHGate = {\n  type: typeof SerializedHGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "export const SerializedMeasurementGateType = 'Measure'\n\nexport type SerializedMeasurementGate = {\n  type: typeof SerializedMeasurementGateType\n  targets: number[]\n  flag?: string\n}\n", "export const SerializedPhaseGateType = 'P'\n\nexport type SerializedPhaseGate = {\n  type: typeof SerializedPhaseGateType\n  angle?: string\n  targets: number[]\n  controls?: number[]\n  if?: string\n}\n", "import {ResizeableSpan} from './numeric-range'\n\nexport const SerializedQftDaggerGateType = 'QFT\u2020'\n\nexport type SerializedQftDaggerGate = {\n  type: typeof SerializedQftDaggerGateType\n  span: ResizeableSpan\n  targets: number[]\n}\n", "import {ResizeableSpan} from './numeric-range'\n\nexport const SerializedQftGateType = 'QFT'\n\nexport type SerializedQftGate = {\n  type: typeof SerializedQftGateType\n  span: ResizeableSpan\n  targets: number[]\n}\n", "export const SerializedRnotGateType = 'X^\u00BD'\n\nexport type SerializedRnotGate = {\n  type: typeof SerializedRnotGateType\n  targets: number[]\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedRxGateType = 'Rx'\n\nexport type SerializedRxGate = {\n  type: typeof SerializedRxGateType\n  targets: number[]\n  angle?: string\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedRyGateType = 'Ry'\n\nexport type SerializedRyGate = {\n  type: typeof SerializedRyGateType\n  targets: number[]\n  angle?: string\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedRzGateType = 'Rz'\n\nexport type SerializedRzGate = {\n  type: typeof SerializedRzGateType\n  targets: number[]\n  angle?: string\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedSwapGateType = 'Swap'\n\nexport type SerializedSwapGate = {\n  type: typeof SerializedSwapGateType\n  targets: [number, number]\n  controls?: number[]\n}\n", "export const SerializedTGateType = 'T'\n\nexport type SerializedTGate = {\n  type: typeof SerializedTGateType\n  targets: number[]\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedWrite0GateType = '|0>'\nexport const SerializedWrite1GateType = '|1>'\n\nexport type SerializedWriteGate = {\n  type: typeof SerializedWrite0GateType | typeof SerializedWrite1GateType\n  targets: number[]\n}\n", "export const SerializedXGateType = 'X'\n\nexport type SerializedXGate = {\n  type: typeof SerializedXGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "export const SerializedYGateType = 'Y'\n\nexport type SerializedYGate = {\n  type: typeof SerializedYGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "export const SerializedZGateType = 'Z'\n\nexport type SerializedZGate = {\n  type: typeof SerializedZGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "import {Complex, DetailedError, Format, Util, radian} from '@qni/common'\nimport {Eq} from 'fp-ts/number'\nimport {isNonEmpty} from 'fp-ts/lib/Array'\nimport {range} from 'fp-ts/NonEmptyArray'\nimport {uniq} from 'fp-ts/lib/ReadonlyNonEmptyArray'\n\nexport class Matrix {\n  static readonly H = Matrix.square(1, 1, 1, -1).times(Math.sqrt(0.5))\n  static readonly PAULI_X = Matrix.square(0, 1, 1, 0)\n  static readonly PAULI_Y = Matrix.square(0, new Complex(0, -1), Complex.I, 0)\n  static readonly PAULI_Z = Matrix.square(1, 0, 0, -1)\n  static readonly T = Matrix.square(1, 0, 0, Complex.from(Math.E).raisedTo(Complex.I.times(Math.PI / 4)))\n\n  static PHASE(phi: string): Matrix {\n    const \u03C6 = radian(phi)\n    const e = Complex.from(Math.E)\n\n    return Matrix.square(1, 0, 0, e.raisedTo(Complex.I.times(\u03C6)))\n  }\n\n  static get RNOT(): Matrix {\n    const i = Complex.I\n    const mi = i.neg()\n\n    return Matrix.square(i.plus(1), mi.plus(1), mi.plus(1), i.plus(1)).times(0.5)\n  }\n\n  static RX(theta: string): Matrix {\n    const \u03B8 = radian(theta)\n    const mi = Complex.I.neg()\n    const cos\u03B82 = Math.cos(\u03B8 / 2)\n    const sin\u03B82 = Math.sin(\u03B8 / 2)\n\n    return Matrix.square(cos\u03B82, mi.times(sin\u03B82), mi.times(sin\u03B82), cos\u03B82)\n  }\n\n  static RY(theta: string): Matrix {\n    const \u03B8 = radian(theta)\n    const cos\u03B82 = Math.cos(\u03B8 / 2)\n    const sin\u03B82 = Math.sin(\u03B8 / 2)\n\n    return Matrix.square(cos\u03B82, -sin\u03B82, sin\u03B82, cos\u03B82)\n  }\n\n  static RZ(theta: string): Matrix {\n    const \u03B8 = radian(theta)\n    const e = Complex.from(Math.E)\n    const i = Complex.I\n\n    return Matrix.square(e.raisedTo(i.neg().times(\u03B8 / 2)), 0, 0, e.raisedTo(i.times(\u03B8 / 2)))\n  }\n\n  static fromRows(rows: Complex[][]): Matrix {\n    const h = rows.length\n    const rowWidths = rows.map(e => e.length)\n    if (!isNonEmpty(rowWidths)) throw new DetailedError('Zero height', {rows})\n\n    const ws = uniq(Eq)(rowWidths)\n    if (ws.length !== 1) throw new DetailedError('Inconsistent row widths.', {rows})\n    const w = ws[0]\n\n    const buffer = new Float64Array(w * h * 2)\n    let i = 0\n    for (const row of rows) {\n      for (const cell of row) {\n        buffer[i] = Complex.realPartOf(cell)\n        buffer[i + 1] = Complex.imagPartOf(cell)\n        i += 2\n      }\n    }\n    return new Matrix(w, h, buffer)\n  }\n\n  static generate(\n    width: number,\n    height: number,\n    coefficientRowColGenerator: (row: number, col: number) => number | Complex\n  ): Matrix {\n    const buf = new Float64Array(width * height * 2)\n    for (let r = 0; r < height; r++) {\n      for (let c = 0; c < width; c++) {\n        const k = (r * width + c) * 2\n        const v = coefficientRowColGenerator(r, c)\n        buf[k] = Complex.realPartOf(v)\n        buf[k + 1] = Complex.imagPartOf(v)\n      }\n    }\n    return new Matrix(width, height, buf)\n  }\n\n  static solo(coef: number | Complex): Matrix {\n    return new Matrix(1, 1, new Float64Array([Complex.realPartOf(coef), Complex.imagPartOf(coef)]))\n  }\n\n  static square(...coefs: Array<number | Complex>): Matrix {\n    Util.need(Array.isArray(coefs), 'Array.isArray(coefs)', coefs)\n    const n = Math.round(Math.sqrt(coefs.length))\n    Util.need(n * n === coefs.length, 'Matrix.square: non-square number of arguments')\n    return Matrix.generate(n, n, (r, c) => coefs[r * n + c])\n  }\n\n  static col(...coefs: Array<number | Complex>): Matrix {\n    Util.need(Array.isArray(coefs), 'Array.isArray(coefs)', coefs)\n    return Matrix.generate(1, coefs.length, r => coefs[r])\n  }\n\n  static row(...coefs: Array<number | Complex>): Matrix {\n    Util.need(Array.isArray(coefs), 'Array.isArray(coefs)', coefs)\n    return Matrix.generate(coefs.length, 1, (r, c) => coefs[c])\n  }\n\n  static identity(size: number): Matrix {\n    if (!Number.isInteger(size) || size <= 0) {\n      throw new DetailedError('Bad size', {size})\n    }\n    const buf = new Float64Array(size * size * 2)\n    for (let k = 0; k < size; k++) {\n      buf[k * (size + 1) * 2] = 1\n    }\n    return new Matrix(size, size, buf)\n  }\n\n  static zero(width: number, height: number): Matrix {\n    return new Matrix(width, height, new Float64Array(width * height * 2))\n  }\n\n  public width: number\n  public height: number\n  public buffer: Float64Array | Float32Array\n\n  constructor(width: number, height: number, buffer: Float64Array | Float32Array) {\n    if (width * height * 2 !== buffer.length) {\n      throw new DetailedError('width*height*2 !== buffer.length', {\n        width,\n        height,\n        len: buffer.length\n      })\n    }\n    this.width = width\n    this.height = height\n    this.buffer = buffer\n  }\n\n  columnAt(colIndex: number): Complex[] {\n    Util.need(colIndex >= 0 && colIndex <= this.width, 'colIndex >= 0 && colIndex <= this.width')\n    const col = []\n    for (let r = 0; r < this.height; r++) {\n      col.push(this.cell(colIndex, r))\n    }\n    return col\n  }\n\n  adjoint(): Matrix {\n    const w = this.height\n    const h = this.width\n    const newBuf = new Float64Array(w * h * 2)\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        const kIn = (c * this.width + r) * 2\n        const kOut = (r * w + c) * 2\n        newBuf[kOut] = this.buffer[kIn]\n        newBuf[kOut + 1] = -this.buffer[kIn + 1]\n      }\n    }\n    return new Matrix(w, h, newBuf)\n  }\n\n  times(other: Matrix | number | Complex): Matrix {\n    return other instanceof Matrix ? this.timesMatrix(other) : this.timesScalar(other)\n  }\n\n  private timesMatrix(other: Matrix): Matrix {\n    if (this.width !== other.height) {\n      throw new DetailedError('Incompatible sizes.', {this: this, other})\n    }\n    const w = other.width\n    const h = this.height\n    const n = this.width\n    const newBuffer = new Float64Array(w * h * 2)\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        const k3 = (r * w + c) * 2\n        for (let k = 0; k < n; k++) {\n          const k1 = (r * n + k) * 2\n          const k2 = (k * w + c) * 2\n          const r1 = this.buffer[k1]\n          const i1 = this.buffer[k1 + 1]\n          const r2 = other.buffer[k2]\n          const i2 = other.buffer[k2 + 1]\n          const r3 = r1 * r2 - i1 * i2\n          const i3 = r1 * i2 + r2 * i1\n          newBuffer[k3] += r3\n          newBuffer[k3 + 1] += i3\n        }\n      }\n    }\n    return new Matrix(w, h, newBuffer)\n  }\n\n  private timesScalar(v: number | Complex): Matrix {\n    const newBuffer = new Float64Array(this.buffer.length)\n    const sr = Complex.realPartOf(v)\n    const si = Complex.imagPartOf(v)\n    for (let i = 0; i < newBuffer.length; i += 2) {\n      const vr = this.buffer[i]\n      const vi = this.buffer[i + 1]\n      newBuffer[i] = vr * sr - vi * si\n      newBuffer[i + 1] = vr * si + vi * sr\n    }\n    return new Matrix(this.width, this.height, newBuffer)\n  }\n\n  isEqualTo(obj: Matrix | unknown): boolean {\n    if (this === obj) return true\n    if (!(obj instanceof Matrix)) return false\n\n    const other = obj\n    return (\n      this.width === other.width &&\n      this.height === other.height &&\n      range(0, this.buffer.length - 1).every(i => this.buffer[i] === other.buffer[i])\n    )\n  }\n\n  isApproximatelyEqualTo(other: Matrix | unknown, epsilon: number): boolean {\n    return (\n      other instanceof Matrix &&\n      this.width === other.width &&\n      this.height === other.height &&\n      Math.sqrt(this.minus(other).norm2()) <= epsilon\n    )\n  }\n\n  minus(other: Matrix): Matrix {\n    const {width: w, height: h, buffer: b1} = this\n    const b2 = other.buffer\n    Util.need(other.width === w && other.height === h, 'Matrix.minus: compatible sizes')\n\n    const newBuffer = new Float64Array(this.buffer.length)\n    for (let i = 0; i < newBuffer.length; i++) {\n      newBuffer[i] = b1[i] - b2[i]\n    }\n    return new Matrix(w, h, newBuffer)\n  }\n\n  norm2(): number {\n    let t = 0\n    for (const e of this.buffer) {\n      t += e * e\n    }\n    return t\n  }\n\n  toString(format = Format.EXACT): string {\n    const data = this.rows()\n      .map(row => row.map(e => e.toString(format)).join(format.itemSeparator))\n      .join(`}${format.itemSeparator}{`)\n    return `{{${data}}}`\n  }\n\n  rows(): Complex[][] {\n    return range(0, this.height - 1).map<Complex[]>(row =>\n      range(0, this.width - 1).map<Complex>(col => this.cell(col, row))\n    )\n  }\n\n  cell(col: number, row: number): Complex {\n    if (col < 0 || row < 0 || col >= this.width || row >= this.height) {\n      throw new DetailedError('Cell out of range', {\n        col,\n        row,\n        width: this.width,\n        height: this.height\n      })\n    }\n    const i = (this.width * row + col) * 2\n    return new Complex(this.buffer[i], this.buffer[i + 1])\n  }\n\n  set(col: number, row: number, value: Complex): void {\n    if (col < 0 || row < 0 || col >= this.width || row >= this.height) {\n      throw new DetailedError('Cell out of range', {\n        col,\n        row,\n        width: this.width,\n        height: this.height\n      })\n    }\n    const i = (this.width * row + col) * 2\n    this.buffer[i] = value.real\n    this.buffer[i + 1] = value.imag\n  }\n\n  isApproximatelyHermitian(epsilon: number): boolean {\n    if (this.width !== this.height) {\n      return false\n    }\n    for (let c = 0; c < this.width; c++) {\n      for (let r = 0; r < this.height; r++) {\n        const i = (this.width * r + c) * 2\n        const j = (this.width * c + r) * 2\n        if (Math.abs(this.buffer[i] - this.buffer[j]) > epsilon) {\n          return false\n        }\n        if (Math.abs(this.buffer[i + 1] + this.buffer[j + 1]) > epsilon) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  plus(other: Matrix): Matrix {\n    const {width: w, height: h, buffer: b1} = this\n    const b2 = other.buffer\n    Util.need(other.width === w && other.height === h, 'Matrix.plus: compatible sizes')\n\n    const newBuffer = new Float64Array(this.buffer.length)\n    for (let i = 0; i < newBuffer.length; i++) {\n      newBuffer[i] = b1[i] + b2[i]\n    }\n    return new Matrix(w, h, newBuffer)\n  }\n\n  tensorProduct(other: Matrix): Matrix {\n    const w1 = this.width\n    const h1 = this.height\n    const w2 = other.width\n    const h2 = other.height\n    const w = w1 * w2\n    const h = h1 * h2\n    const newBuffer = new Float64Array(w * h * 2)\n    for (let r1 = 0; r1 < h1; r1++) {\n      for (let r2 = 0; r2 < h2; r2++) {\n        for (let c1 = 0; c1 < w1; c1++) {\n          for (let c2 = 0; c2 < w2; c2++) {\n            const k1 = (r1 * w1 + c1) * 2\n            const k2 = (r2 * w2 + c2) * 2\n            const k3 = ((r1 * h2 + r2) * w + (c1 * w2 + c2)) * 2\n            const cr1 = this.buffer[k1]\n            const ci1 = this.buffer[k1 + 1]\n            const cr2 = other.buffer[k2]\n            const ci2 = other.buffer[k2 + 1]\n            const cr3 = cr1 * cr2 - ci1 * ci2\n            const ci3 = cr1 * ci2 + ci1 * cr2\n            newBuffer[k3] = cr3\n            newBuffer[k3 + 1] = ci3\n          }\n        }\n      }\n    }\n    return new Matrix(w, h, newBuffer)\n  }\n\n  timesQubitOperation(operation2x2: Matrix, qubitIndex: number, controlMask: number, desiredValueMask: number): Matrix {\n    Util.need((controlMask & (1 << qubitIndex)) === 0, 'Matrix.timesQubitOperation: self-controlled')\n    Util.need(operation2x2.width === 2 && operation2x2.height === 2, 'Matrix.timesQubitOperation: not 2x2')\n\n    const {width: w, height: h, buffer: old} = this\n    const [ar, ai, br, bi, cr, ci, dr, di] = operation2x2.buffer\n\n    Util.need(h >= 2 << qubitIndex, 'Matrix.timesQubitOperation: qubit index out of range')\n\n    const buf = new Float64Array(old)\n    let i = 0\n    for (let r = 0; r < h; r++) {\n      const isControlled = ((controlMask & r) ^ desiredValueMask) !== 0\n      const qubitVal = (r & (1 << qubitIndex)) !== 0\n      for (let c = 0; c < w; c++) {\n        if (!isControlled && !qubitVal) {\n          const j = i + (1 << qubitIndex) * 2 * w\n          const xr = buf[i]\n          const xi = buf[i + 1]\n          const yr = buf[j]\n          const yi = buf[j + 1]\n\n          buf[i] = xr * ar - xi * ai + yr * br - yi * bi\n          buf[i + 1] = xr * ai + xi * ar + yr * bi + yi * br\n          buf[j] = xr * cr - xi * ci + yr * dr - yi * di\n          buf[j + 1] = xr * ci + xi * cr + yr * di + yi * dr\n        }\n        i += 2\n      }\n    }\n    return new Matrix(w, h, buf)\n  }\n\n  trace(): Complex {\n    let total_r = 0\n    let total_i = 0\n    const d = this.width * 2 + 2\n    for (let i = 0; i < this.buffer.length; i += d) {\n      total_r += this.buffer[i]\n      total_i += this.buffer[i + 1]\n    }\n    return new Complex(total_r, total_i)\n  }\n\n  qubitDensityMatrixToBlochVector(): [number, number, number] {\n    if (this.width !== 2 || this.height !== 2) {\n      throw new DetailedError('Need a 2x2 density matrix.', this)\n    }\n    if (!this.isApproximatelyHermitian(0.01)) {\n      throw new DetailedError('Density matrix should be Hermitian.', this)\n    }\n    if (!this.trace().isApproximatelyEqualTo(1, 0.01)) {\n      throw new DetailedError('Density matrix should have unit trace.', this)\n    }\n\n    // Density matrix from bloch vector equation: M = 1/2 (I + v\u03C3)\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [ar, ai, br, bi, cr, ci, dr, di] = this.buffer\n    const x = cr + br\n    const y = ci - bi\n    const z = ar - dr\n    return [x, y, z]\n  }\n\n  clone(): Matrix {\n    return new Matrix(this.width, this.height, this.buffer.slice())\n  }\n}\n", "import {Complex, DetailedError} from '@qni/common'\nimport {Matrix} from './matrix'\n\nexport class StateVector {\n  public matrix: Matrix\n  public size: number\n  public nqubit: number\n\n  get bra(): Matrix {\n    return this.matrix.adjoint()\n  }\n\n  get ket(): Matrix {\n    return this.matrix\n  }\n\n  constructor(bits: string | Matrix) {\n    if ('string' === typeof bits) {\n      this.matrix = this.bitstringToMatrix(bits)\n    } else {\n      this.matrix = bits\n    }\n\n    this.size = this.matrix.height\n    this.nqubit = Math.log2(this.size)\n  }\n\n  amplifier(index: number): Complex {\n    return this.matrix.cell(0, index)\n  }\n\n  setAmplifier(index: number, value: Complex): void {\n    this.matrix.set(0, index, value)\n  }\n\n  blochVector(bit: number): [number, number, number] {\n    return this.qubitDensityMatrix(bit).qubitDensityMatrixToBlochVector()\n  }\n\n  isApproximatelyEqualTo(other: StateVector | unknown, epsilon: number): boolean {\n    return other instanceof StateVector && this.matrix.isApproximatelyEqualTo(other.matrix, epsilon)\n  }\n\n  timesQubitOperation(operation2x2: Matrix, qubitIndex: number, controlMask: number): void {\n    this.matrix = this.matrix.timesQubitOperation(operation2x2, qubitIndex, controlMask, controlMask)\n  }\n\n  toString(): string {\n    return this.matrix.toString()\n  }\n\n  private bitstringToMatrix(bitString: string): Matrix {\n    let paren = false\n    let parenToken = ''\n    const kets = []\n    const invalidBitStringError = new DetailedError('Invalid StateVector bit string', bitString)\n\n    for (const char of bitString.split('')) {\n      switch (char) {\n        case '0': {\n          if (paren) throw invalidBitStringError\n          kets.push(Matrix.col(1, 0))\n          break\n        }\n        case '1': {\n          if (paren) throw invalidBitStringError\n          kets.push(Matrix.col(0, 1))\n          break\n        }\n        case '+': {\n          if (paren) throw invalidBitStringError\n          kets.push(Matrix.col(1, 1).times(Math.sqrt(0.5)))\n          break\n        }\n        case '-': {\n          if (paren) {\n            parenToken += '-'\n          } else {\n            kets.push(Matrix.col(1, -1).times(Math.sqrt(0.5)))\n          }\n          break\n        }\n        case 'i': {\n          if (paren) {\n            parenToken += 'i'\n          } else {\n            kets.push(Matrix.col(1, new Complex(0, 1)).times(Math.sqrt(0.5)))\n          }\n          break\n        }\n        case '(': {\n          if (paren) throw invalidBitStringError\n          paren = true\n          parenToken = ''\n          break\n        }\n        case ')': {\n          if (!paren) throw invalidBitStringError\n          if (parenToken !== '-i') throw invalidBitStringError\n          kets.push(Matrix.col(1, new Complex(0, -1)).times(Math.sqrt(0.5)))\n          paren = false\n          break\n        }\n        default:\n          throw invalidBitStringError\n      }\n    }\n\n    if (kets.length === 0) throw invalidBitStringError\n    return kets.reduce((result, each) => result.tensorProduct(each))\n  }\n\n  qubitDensityMatrix(qubitIndex: number): Matrix {\n    if (qubitIndex < 0 || qubitIndex >= this.nqubit) {\n      throw new DetailedError('Qubit index out of range', qubitIndex)\n    }\n\n    const traceBits = [...Array(Math.log2(this.matrix.height)).keys()].filter(each => each !== qubitIndex)\n    const removeBits = (num: number, bits: number[]) => {\n      return bits\n        .sort()\n        .reverse()\n        .reduce((result, each) => {\n          let mask = result >> (each + 1)\n          mask = mask << each\n          const right = ((1 << each) - 1) & result\n\n          return mask | right\n        }, num)\n    }\n\n    let densityMatrix = Matrix.zero(2, 2)\n\n    for (let bra = 0; bra < this.matrix.height; bra++) {\n      for (let ket = 0; ket < this.matrix.height; ket++) {\n        const survived = traceBits.every(b => {\n          return ((bra >> b) & 1) === ((ket >> b) & 1)\n        })\n        if (!survived) continue\n\n        const amp = this.matrix.cell(0, ket).times(this.matrix.cell(0, bra).conjugate())\n        if (amp.isEqualTo(0)) continue\n\n        const ketMat = removeBits(ket, traceBits) === 0 ? Matrix.col(1, 0) : Matrix.col(0, 1)\n        const braMat = removeBits(bra, traceBits) === 0 ? Matrix.row(1, 0) : Matrix.row(0, 1)\n        const ketBra = ketMat.times(braMat)\n\n        densityMatrix = densityMatrix.plus(ketBra.times(amp))\n      }\n    }\n\n    return densityMatrix\n  }\n}\n", "export function round(n: number, decimal: number): number {\n  return Math.round(n * Math.pow(10, decimal)) / Math.pow(10, decimal)\n}\n", "import {\n  Complex,\n  ResizeableSpan,\n  SerializedBlochDisplayType,\n  SerializedCircuitStep,\n  SerializedControlGateType,\n  SerializedHGateType,\n  SerializedMeasurementGateType,\n  SerializedPhaseGateType,\n  SerializedQftDaggerGateType,\n  SerializedQftGateType,\n  SerializedRnotGateType,\n  SerializedRxGateType,\n  SerializedRyGateType,\n  SerializedRzGateType,\n  SerializedSwapGateType,\n  SerializedTGateType,\n  SerializedWrite0GateType,\n  SerializedWrite1GateType,\n  SerializedXGateType,\n  SerializedYGateType,\n  SerializedZGateType\n} from '@qni/common'\nimport {Matrix} from './matrix'\nimport {StateVector} from './state-vector'\nimport {round} from './util'\n\nexport class Simulator {\n  public state: StateVector\n  public blochVectors!: {[bit: number]: [number, number, number]}\n  public measuredBits: {[bit: number]: number}\n  public flags: {[key: string]: boolean}\n\n  constructor(bits: string | StateVector) {\n    if ('string' === typeof bits) {\n      this.state = new StateVector(bits)\n    } else {\n      this.state = bits\n    }\n\n    this.measuredBits = {}\n    this.flags = {}\n  }\n\n  runStep(operations: SerializedCircuitStep): Simulator {\n    this.blochVectors = {}\n\n    for (const each of operations) {\n      switch (each.type) {\n        case SerializedWrite0GateType:\n          this.write(0, ...each.targets)\n          break\n        case SerializedWrite1GateType:\n          this.write(1, ...each.targets)\n          break\n        case SerializedBlochDisplayType:\n          for (const target of each.targets) {\n            this.blochVectors[target] = this.state.blochVector(target)\n          }\n          break\n        case SerializedHGateType:\n          if (each.if && !this.flags[each.if]) break\n          if ((each.controls && each.controls.length > 0) || (each.antiControls && each.antiControls.length > 0)) {\n            this.ach(each.controls || [], each.antiControls || [], ...each.targets)\n          } else {\n            this.h(...each.targets)\n          }\n          break\n        case SerializedXGateType:\n          if (each.if && !this.flags[each.if]) break\n          if ((each.controls && each.controls.length > 0) || (each.antiControls && each.antiControls.length > 0)) {\n            this.acnot(each.controls || [], each.antiControls || [], ...each.targets)\n          } else {\n            this.x(...each.targets)\n          }\n          break\n        case SerializedYGateType:\n          if (each.if && !this.flags[each.if]) break\n          if ((each.controls && each.controls.length > 0) || (each.antiControls && each.antiControls.length > 0)) {\n            this.acy(each.controls || [], each.antiControls || [], ...each.targets)\n          } else {\n            this.y(...each.targets)\n          }\n          break\n        case SerializedZGateType:\n          if (each.if && !this.flags[each.if]) break\n          if ((each.controls && each.controls.length > 0) || (each.antiControls && each.antiControls.length > 0)) {\n            this.acz(each.controls || [], each.antiControls || [], ...each.targets)\n          } else {\n            this.z(...each.targets)\n          }\n          break\n        case SerializedPhaseGateType: {\n          if (!each.angle) break\n\n          if (each.controls && each.controls.length > 0) {\n            this.cphase(each.controls, each.angle, each.targets[0])\n          } else {\n            this.cphase(each.targets.slice(1), each.angle, each.targets[0])\n          }\n          break\n        }\n        case SerializedTGateType: {\n          if (each.if && !this.flags[each.if]) break\n          if (each.controls && each.controls.length > 0) {\n            this.ct(each.controls, ...each.targets)\n          } else {\n            this.t(...each.targets)\n          }\n          break\n        }\n        case SerializedQftGateType:\n          this.qft(each.span, ...each.targets)\n          break\n        case SerializedQftDaggerGateType:\n          this.qftDagger(each.span, ...each.targets)\n          break\n        case SerializedControlGateType: {\n          this.cz(each.targets.slice(1), each.targets[0])\n          break\n        }\n        case SerializedSwapGateType: {\n          // TODO: controls \u304C\u8907\u6570\u306E\u5834\u5408\u306B\u3082\u5BFE\u5FDC\n          if (each.controls && each.controls.length === 1) {\n            this.cswap(each.controls[0], each.targets[0], each.targets[1])\n          } else {\n            this.swap(each.targets[0], each.targets[1])\n          }\n          break\n        }\n        case SerializedRnotGateType:\n          if (each.if && !this.flags[each.if]) break\n          if (each.controls && each.controls.length > 0) {\n            this.crnot(each.controls, ...each.targets)\n          } else {\n            this.rnot(...each.targets)\n          }\n          break\n        case SerializedRxGateType:\n          if (each.if && !this.flags[each.if]) break\n          if (!each.angle) break\n          if (each.controls && each.controls.length > 0) {\n            this.crx(each.controls, each.angle, ...each.targets)\n          } else {\n            this.rx(each.angle, ...each.targets)\n          }\n          break\n        case SerializedRyGateType:\n          if (each.if && !this.flags[each.if]) break\n          if (!each.angle) break\n          if (each.controls && each.controls.length > 0) {\n            this.cry(each.controls, each.angle, ...each.targets)\n          } else {\n            this.ry(each.angle, ...each.targets)\n          }\n          break\n        case SerializedRzGateType:\n          if (each.if && !this.flags[each.if]) break\n          if (!each.angle) break\n          if (each.controls && each.controls.length > 0) {\n            this.crz(each.controls, each.angle, ...each.targets)\n          } else {\n            this.rz(each.angle, ...each.targets)\n          }\n          break\n        case SerializedMeasurementGateType:\n          for (const target of each.targets) {\n            this.measure(target)\n            if (each.flag) this.flags[each.flag] = this.measuredBits[target] === 1\n          }\n          break\n        default:\n          throw new Error('Unknown instruction')\n      }\n    }\n\n    return this\n  }\n\n  write(value: number, ...targets: number[]): Simulator {\n    for (const t of targets) {\n      const pZero = round(this.pZero(t), 5)\n\n      if ((value === 0 && pZero === 0) || (value === 1 && pZero === 1)) {\n        this.x(t)\n      }\n    }\n    return this\n  }\n\n  h(...targets: number[]): Simulator {\n    this.u(Matrix.H, ...targets)\n    return this\n  }\n\n  ch(controls: number | number[], ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.H, ...targets)\n    return this\n  }\n\n  ach(controls: number | number[], antiControls: number[], ...targets: number[]): Simulator {\n    let allControls\n    if (typeof controls === 'number') {\n      allControls = [controls].concat(antiControls)\n    } else {\n      allControls = controls.concat(antiControls)\n    }\n\n    this.x(...antiControls)\n    this.cu(allControls, Matrix.H, ...targets)\n    this.x(...antiControls)\n    return this\n  }\n\n  x(...targets: number[]): Simulator {\n    this.u(Matrix.PAULI_X, ...targets)\n    return this\n  }\n\n  cnot(controls: number | number[], ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.PAULI_X, ...targets)\n\n    return this\n  }\n\n  acnot(controls: number | number[], antiControls: number[], ...targets: number[]): Simulator {\n    let allControls\n    if (typeof controls === 'number') {\n      allControls = [controls].concat(antiControls)\n    } else {\n      allControls = controls.concat(antiControls)\n    }\n\n    this.x(...antiControls)\n    this.cu(allControls, Matrix.PAULI_X, ...targets)\n    this.x(...antiControls)\n\n    return this\n  }\n\n  y(...targets: number[]): Simulator {\n    this.u(Matrix.PAULI_Y, ...targets)\n    return this\n  }\n\n  cy(controls: number | number[], ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.PAULI_Y, ...targets)\n    return this\n  }\n\n  acy(controls: number | number[], antiControls: number[], ...targets: number[]): Simulator {\n    let allControls\n    if (typeof controls === 'number') {\n      allControls = [controls].concat(antiControls)\n    } else {\n      allControls = controls.concat(antiControls)\n    }\n\n    this.x(...antiControls)\n    this.cu(allControls, Matrix.PAULI_Y, ...targets)\n    this.x(...antiControls)\n    return this\n  }\n\n  z(...targets: number[]): Simulator {\n    this.u(Matrix.PAULI_Z, ...targets)\n    return this\n  }\n\n  cz(controls: number | number[], ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.PAULI_Z, ...targets)\n    return this\n  }\n\n  acz(controls: number | number[], antiControls: number[], ...targets: number[]): Simulator {\n    let allControls\n    if (typeof controls === 'number') {\n      allControls = [controls].concat(antiControls)\n    } else {\n      allControls = controls.concat(antiControls)\n    }\n\n    this.x(...antiControls)\n    this.cu(controls, Matrix.PAULI_Z, ...targets)\n    this.x(...antiControls)\n    return this\n  }\n\n  phase(phi: string, ...targets: number[]): Simulator {\n    this.u(Matrix.PHASE(phi), ...targets)\n    return this\n  }\n\n  cphase(controls: number | number[], phi: string, ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.PHASE(phi), ...targets)\n    return this\n  }\n\n  t(...targets: number[]): Simulator {\n    this.u(Matrix.T, ...targets)\n    return this\n  }\n\n  ct(controls: number | number[], ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.T, ...targets)\n    return this\n  }\n\n  swap(target0: number, target1: number): Simulator {\n    this.cnot(target0, target1).cnot(target1, target0).cnot(target0, target1)\n    return this\n  }\n\n  cswap(control: number, target0: number, target1: number): Simulator {\n    this.cnot([control, target0], target1).cnot([control, target1], target0).cnot([control, target0], target1)\n    return this\n  }\n\n  rnot(...targets: number[]): Simulator {\n    this.u(Matrix.RNOT, ...targets)\n    return this\n  }\n\n  crnot(controls: number | number[], ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.RNOT, ...targets)\n    return this\n  }\n\n  rx(theta: string, ...targets: number[]): Simulator {\n    this.u(Matrix.RX(theta), ...targets)\n    return this\n  }\n\n  crx(controls: number | number[], theta: string, ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.RX(theta), ...targets)\n    return this\n  }\n\n  ry(theta: string, ...targets: number[]): Simulator {\n    this.u(Matrix.RY(theta), ...targets)\n    return this\n  }\n\n  cry(controls: number | number[], theta: string, ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.RY(theta), ...targets)\n    return this\n  }\n\n  rz(theta: string, ...targets: number[]): Simulator {\n    this.u(Matrix.RZ(theta), ...targets)\n    return this\n  }\n\n  crz(controls: number | number[], theta: string, ...targets: number[]): Simulator {\n    this.cu(controls, Matrix.RZ(theta), ...targets)\n    return this\n  }\n\n  qft(span: ResizeableSpan, ...targets: number[]): Simulator {\n    for (const each of targets) {\n      this.qftSingleTargetBit(span, each)\n    }\n    return this\n  }\n\n  private qftSingleTargetBit(span: ResizeableSpan, target: number): Simulator {\n    switch (span) {\n      case 1: {\n        this.h(target)\n        break\n      }\n      case 2: {\n        this.swap(target, target + 1)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .h(target + 1)\n        break\n      }\n      case 3: {\n        this.swap(target, target + 2)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .h(target + 2)\n        break\n      }\n      case 4: {\n        this.swap(target, target + 3)\n          .swap(target + 1, target + 2)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .h(target + 3)\n        break\n      }\n      case 5: {\n        this.swap(target, target + 4)\n          .swap(target + 1, target + 3)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .h(target + 4)\n        break\n      }\n      case 6: {\n        this.swap(target, target + 5)\n          .swap(target + 1, target + 4)\n          .swap(target + 2, target + 3)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .h(target + 5)\n        break\n      }\n      case 7: {\n        this.swap(target, target + 6)\n          .swap(target + 1, target + 5)\n          .swap(target + 2, target + 4)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .h(target + 6)\n        break\n      }\n      case 8: {\n        this.swap(target, target + 7)\n          .swap(target + 1, target + 6)\n          .swap(target + 2, target + 5)\n          .swap(target + 3, target + 4)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .h(target + 7)\n        break\n      }\n      case 9: {\n        this.swap(target, target + 8)\n          .swap(target + 1, target + 7)\n          .swap(target + 2, target + 6)\n          .swap(target + 3, target + 5)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .h(target + 8)\n        break\n      }\n      case 10: {\n        this.swap(target, target + 9)\n          .swap(target + 1, target + 8)\n          .swap(target + 2, target + 7)\n          .swap(target + 3, target + 6)\n          .swap(target + 4, target + 5)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .h(target + 9)\n        break\n      }\n      case 11: {\n        this.swap(target, target + 10)\n          .swap(target + 1, target + 9)\n          .swap(target + 2, target + 8)\n          .swap(target + 3, target + 7)\n          .swap(target + 4, target + 6)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .cphase(target + 10, '\u03C0/1024', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .cphase(target + 10, '\u03C0/512', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .cphase(target + 10, '\u03C0/256', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .cphase(target + 10, '\u03C0/128', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .cphase(target + 10, '\u03C0/64', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .cphase(target + 10, '\u03C0/32', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .cphase(target + 10, '\u03C0/16', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .cphase(target + 10, '\u03C0/8', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .cphase(target + 10, '\u03C0/4', target + 8)\n          .h(target + 9)\n          .cphase(target + 10, '\u03C0/2', target + 8)\n          .h(target + 10)\n        break\n      }\n      case 12: {\n        this.swap(target, target + 11)\n          .swap(target + 1, target + 10)\n          .swap(target + 2, target + 9)\n          .swap(target + 3, target + 8)\n          .swap(target + 4, target + 7)\n          .swap(target + 5, target + 6)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .cphase(target + 10, '\u03C0/1024', target)\n          .cphase(target + 11, '\u03C0/2048', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .cphase(target + 10, '\u03C0/512', target + 1)\n          .cphase(target + 11, '\u03C0/1024', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .cphase(target + 10, '\u03C0/256', target + 2)\n          .cphase(target + 11, '\u03C0/512', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .cphase(target + 10, '\u03C0/128', target + 3)\n          .cphase(target + 11, '\u03C0/256', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .cphase(target + 10, '\u03C0/64', target + 4)\n          .cphase(target + 11, '\u03C0/128', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .cphase(target + 10, '\u03C0/32', target + 5)\n          .cphase(target + 11, '\u03C0/64', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .cphase(target + 10, '\u03C0/16', target + 6)\n          .cphase(target + 11, '\u03C0/32', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .cphase(target + 10, '\u03C0/8', target + 7)\n          .cphase(target + 11, '\u03C0/16', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .cphase(target + 10, '\u03C0/4', target + 8)\n          .cphase(target + 11, '\u03C0/8', target + 8)\n          .h(target + 9)\n          .cphase(target + 10, '\u03C0/2', target + 8)\n          .cphase(target + 11, '\u03C0/4', target + 8)\n          .h(target + 10)\n          .cphase(target + 11, '\u03C0/2', target + 9)\n          .h(target + 11)\n        break\n      }\n      case 13: {\n        this.swap(target, target + 12)\n          .swap(target + 1, target + 11)\n          .swap(target + 2, target + 10)\n          .swap(target + 3, target + 9)\n          .swap(target + 4, target + 8)\n          .swap(target + 5, target + 7)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .cphase(target + 10, '\u03C0/1024', target)\n          .cphase(target + 11, '\u03C0/2048', target)\n          .cphase(target + 12, '\u03C0/4096', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .cphase(target + 10, '\u03C0/512', target + 1)\n          .cphase(target + 11, '\u03C0/1024', target + 1)\n          .cphase(target + 12, '\u03C0/2048', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .cphase(target + 10, '\u03C0/256', target + 2)\n          .cphase(target + 11, '\u03C0/512', target + 2)\n          .cphase(target + 12, '\u03C0/1024', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .cphase(target + 10, '\u03C0/128', target + 3)\n          .cphase(target + 11, '\u03C0/256', target + 3)\n          .cphase(target + 12, '\u03C0/512', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .cphase(target + 10, '\u03C0/64', target + 4)\n          .cphase(target + 11, '\u03C0/128', target + 4)\n          .cphase(target + 12, '\u03C0/256', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .cphase(target + 10, '\u03C0/32', target + 5)\n          .cphase(target + 11, '\u03C0/64', target + 5)\n          .cphase(target + 12, '\u03C0/128', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .cphase(target + 10, '\u03C0/16', target + 6)\n          .cphase(target + 11, '\u03C0/32', target + 6)\n          .cphase(target + 12, '\u03C0/64', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .cphase(target + 10, '\u03C0/8', target + 7)\n          .cphase(target + 11, '\u03C0/16', target + 7)\n          .cphase(target + 12, '\u03C0/32', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .cphase(target + 10, '\u03C0/4', target + 8)\n          .cphase(target + 11, '\u03C0/8', target + 8)\n          .cphase(target + 12, '\u03C0/16', target + 8)\n          .h(target + 9)\n          .cphase(target + 10, '\u03C0/2', target + 8)\n          .cphase(target + 11, '\u03C0/4', target + 8)\n          .cphase(target + 12, '\u03C0/8', target + 8)\n          .h(target + 10)\n          .cphase(target + 11, '\u03C0/2', target + 9)\n          .cphase(target + 12, '\u03C0/4', target + 9)\n          .h(target + 11)\n          .cphase(target + 13, '\u03C0/2', target + 10)\n          .h(target + 12)\n        break\n      }\n      case 14: {\n        this.swap(target, target + 13)\n          .swap(target + 1, target + 12)\n          .swap(target + 2, target + 11)\n          .swap(target + 3, target + 10)\n          .swap(target + 4, target + 9)\n          .swap(target + 5, target + 8)\n          .swap(target + 6, target + 7)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .cphase(target + 10, '\u03C0/1024', target)\n          .cphase(target + 11, '\u03C0/2048', target)\n          .cphase(target + 12, '\u03C0/4096', target)\n          .cphase(target + 13, '\u03C0/8192', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .cphase(target + 10, '\u03C0/512', target + 1)\n          .cphase(target + 11, '\u03C0/1024', target + 1)\n          .cphase(target + 12, '\u03C0/2048', target + 1)\n          .cphase(target + 13, '\u03C0/4096', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .cphase(target + 10, '\u03C0/256', target + 2)\n          .cphase(target + 11, '\u03C0/512', target + 2)\n          .cphase(target + 12, '\u03C0/1024', target + 2)\n          .cphase(target + 13, '\u03C0/2048', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .cphase(target + 10, '\u03C0/128', target + 3)\n          .cphase(target + 11, '\u03C0/256', target + 3)\n          .cphase(target + 12, '\u03C0/512', target + 3)\n          .cphase(target + 13, '\u03C0/1024', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .cphase(target + 10, '\u03C0/64', target + 4)\n          .cphase(target + 11, '\u03C0/128', target + 4)\n          .cphase(target + 12, '\u03C0/256', target + 4)\n          .cphase(target + 13, '\u03C0/512', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .cphase(target + 10, '\u03C0/32', target + 5)\n          .cphase(target + 11, '\u03C0/64', target + 5)\n          .cphase(target + 12, '\u03C0/128', target + 5)\n          .cphase(target + 13, '\u03C0/256', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .cphase(target + 10, '\u03C0/16', target + 6)\n          .cphase(target + 11, '\u03C0/32', target + 6)\n          .cphase(target + 12, '\u03C0/64', target + 6)\n          .cphase(target + 13, '\u03C0/128', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .cphase(target + 10, '\u03C0/8', target + 7)\n          .cphase(target + 11, '\u03C0/16', target + 7)\n          .cphase(target + 12, '\u03C0/32', target + 7)\n          .cphase(target + 13, '\u03C0/64', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .cphase(target + 10, '\u03C0/4', target + 8)\n          .cphase(target + 11, '\u03C0/8', target + 8)\n          .cphase(target + 12, '\u03C0/16', target + 8)\n          .cphase(target + 13, '\u03C0/32', target + 8)\n          .h(target + 9)\n          .cphase(target + 10, '\u03C0/2', target + 8)\n          .cphase(target + 11, '\u03C0/4', target + 8)\n          .cphase(target + 12, '\u03C0/8', target + 8)\n          .cphase(target + 13, '\u03C0/16', target + 8)\n          .h(target + 10)\n          .cphase(target + 11, '\u03C0/2', target + 9)\n          .cphase(target + 12, '\u03C0/4', target + 9)\n          .cphase(target + 13, '\u03C0/8', target + 9)\n          .h(target + 11)\n          .cphase(target + 13, '\u03C0/2', target + 10)\n          .cphase(target + 14, '\u03C0/4', target + 10)\n          .h(target + 12)\n          .cphase(target + 14, '\u03C0/2', target + 11)\n          .h(target + 13)\n        break\n      }\n      case 15: {\n        this.swap(target, target + 14)\n          .swap(target + 1, target + 13)\n          .swap(target + 2, target + 12)\n          .swap(target + 3, target + 11)\n          .swap(target + 4, target + 10)\n          .swap(target + 5, target + 9)\n          .swap(target + 6, target + 8)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .cphase(target + 10, '\u03C0/1024', target)\n          .cphase(target + 11, '\u03C0/2048', target)\n          .cphase(target + 12, '\u03C0/4096', target)\n          .cphase(target + 13, '\u03C0/8192', target)\n          .cphase(target + 14, '\u03C0/16384', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .cphase(target + 10, '\u03C0/512', target + 1)\n          .cphase(target + 11, '\u03C0/1024', target + 1)\n          .cphase(target + 12, '\u03C0/2048', target + 1)\n          .cphase(target + 13, '\u03C0/4096', target + 1)\n          .cphase(target + 14, '\u03C0/8192', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .cphase(target + 10, '\u03C0/256', target + 2)\n          .cphase(target + 11, '\u03C0/512', target + 2)\n          .cphase(target + 12, '\u03C0/1024', target + 2)\n          .cphase(target + 13, '\u03C0/2048', target + 2)\n          .cphase(target + 14, '\u03C0/4096', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .cphase(target + 10, '\u03C0/128', target + 3)\n          .cphase(target + 11, '\u03C0/256', target + 3)\n          .cphase(target + 12, '\u03C0/512', target + 3)\n          .cphase(target + 13, '\u03C0/1024', target + 3)\n          .cphase(target + 14, '\u03C0/2048', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .cphase(target + 10, '\u03C0/64', target + 4)\n          .cphase(target + 11, '\u03C0/128', target + 4)\n          .cphase(target + 12, '\u03C0/256', target + 4)\n          .cphase(target + 13, '\u03C0/512', target + 4)\n          .cphase(target + 14, '\u03C0/1024', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .cphase(target + 10, '\u03C0/32', target + 5)\n          .cphase(target + 11, '\u03C0/64', target + 5)\n          .cphase(target + 12, '\u03C0/128', target + 5)\n          .cphase(target + 13, '\u03C0/256', target + 5)\n          .cphase(target + 14, '\u03C0/512', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .cphase(target + 10, '\u03C0/16', target + 6)\n          .cphase(target + 11, '\u03C0/32', target + 6)\n          .cphase(target + 12, '\u03C0/64', target + 6)\n          .cphase(target + 13, '\u03C0/128', target + 6)\n          .cphase(target + 14, '\u03C0/256', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .cphase(target + 10, '\u03C0/8', target + 7)\n          .cphase(target + 11, '\u03C0/16', target + 7)\n          .cphase(target + 12, '\u03C0/32', target + 7)\n          .cphase(target + 13, '\u03C0/64', target + 7)\n          .cphase(target + 14, '\u03C0/128', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .cphase(target + 10, '\u03C0/4', target + 8)\n          .cphase(target + 11, '\u03C0/8', target + 8)\n          .cphase(target + 12, '\u03C0/16', target + 8)\n          .cphase(target + 13, '\u03C0/32', target + 8)\n          .cphase(target + 14, '\u03C0/64', target + 8)\n          .h(target + 9)\n          .cphase(target + 10, '\u03C0/2', target + 8)\n          .cphase(target + 11, '\u03C0/4', target + 8)\n          .cphase(target + 12, '\u03C0/8', target + 8)\n          .cphase(target + 13, '\u03C0/16', target + 8)\n          .cphase(target + 14, '\u03C0/32', target + 8)\n          .h(target + 10)\n          .cphase(target + 11, '\u03C0/2', target + 9)\n          .cphase(target + 12, '\u03C0/4', target + 9)\n          .cphase(target + 13, '\u03C0/8', target + 9)\n          .cphase(target + 14, '\u03C0/16', target + 9)\n          .h(target + 11)\n          .cphase(target + 13, '\u03C0/2', target + 10)\n          .cphase(target + 14, '\u03C0/4', target + 10)\n          .cphase(target + 15, '\u03C0/8', target + 10)\n          .h(target + 12)\n          .cphase(target + 14, '\u03C0/2', target + 11)\n          .cphase(target + 15, '\u03C0/4', target + 11)\n          .h(target + 13)\n          .cphase(target + 15, '\u03C0/2', target + 12)\n          .h(target + 14)\n        break\n      }\n      case 16: {\n        this.swap(target, target + 15)\n          .swap(target + 1, target + 14)\n          .swap(target + 2, target + 13)\n          .swap(target + 3, target + 12)\n          .swap(target + 4, target + 11)\n          .swap(target + 5, target + 10)\n          .swap(target + 6, target + 9)\n          .swap(target + 7, target + 8)\n          .h(target)\n          .cphase(target + 1, '\u03C0/2', target)\n          .cphase(target + 2, '\u03C0/4', target)\n          .cphase(target + 3, '\u03C0/8', target)\n          .cphase(target + 4, '\u03C0/16', target)\n          .cphase(target + 5, '\u03C0/32', target)\n          .cphase(target + 6, '\u03C0/64', target)\n          .cphase(target + 7, '\u03C0/128', target)\n          .cphase(target + 8, '\u03C0/256', target)\n          .cphase(target + 9, '\u03C0/512', target)\n          .cphase(target + 10, '\u03C0/1024', target)\n          .cphase(target + 11, '\u03C0/2048', target)\n          .cphase(target + 12, '\u03C0/4096', target)\n          .cphase(target + 13, '\u03C0/8192', target)\n          .cphase(target + 14, '\u03C0/16384', target)\n          .cphase(target + 15, '\u03C0/32768', target)\n          .h(target + 1)\n          .cphase(target + 2, '\u03C0/2', target + 1)\n          .cphase(target + 3, '\u03C0/4', target + 1)\n          .cphase(target + 4, '\u03C0/8', target + 1)\n          .cphase(target + 5, '\u03C0/16', target + 1)\n          .cphase(target + 6, '\u03C0/32', target + 1)\n          .cphase(target + 7, '\u03C0/64', target + 1)\n          .cphase(target + 8, '\u03C0/128', target + 1)\n          .cphase(target + 9, '\u03C0/256', target + 1)\n          .cphase(target + 10, '\u03C0/512', target + 1)\n          .cphase(target + 11, '\u03C0/1024', target + 1)\n          .cphase(target + 12, '\u03C0/2048', target + 1)\n          .cphase(target + 13, '\u03C0/4096', target + 1)\n          .cphase(target + 14, '\u03C0/8192', target + 1)\n          .cphase(target + 15, '\u03C0/16384', target + 1)\n          .h(target + 2)\n          .cphase(target + 3, '\u03C0/2', target + 2)\n          .cphase(target + 4, '\u03C0/4', target + 2)\n          .cphase(target + 5, '\u03C0/8', target + 2)\n          .cphase(target + 6, '\u03C0/16', target + 2)\n          .cphase(target + 7, '\u03C0/32', target + 2)\n          .cphase(target + 8, '\u03C0/64', target + 2)\n          .cphase(target + 9, '\u03C0/128', target + 2)\n          .cphase(target + 10, '\u03C0/256', target + 2)\n          .cphase(target + 11, '\u03C0/512', target + 2)\n          .cphase(target + 12, '\u03C0/1024', target + 2)\n          .cphase(target + 13, '\u03C0/2048', target + 2)\n          .cphase(target + 14, '\u03C0/4096', target + 2)\n          .cphase(target + 15, '\u03C0/8192', target + 2)\n          .h(target + 3)\n          .cphase(target + 4, '\u03C0/2', target + 3)\n          .cphase(target + 5, '\u03C0/4', target + 3)\n          .cphase(target + 6, '\u03C0/8', target + 3)\n          .cphase(target + 7, '\u03C0/16', target + 3)\n          .cphase(target + 8, '\u03C0/32', target + 3)\n          .cphase(target + 9, '\u03C0/64', target + 3)\n          .cphase(target + 10, '\u03C0/128', target + 3)\n          .cphase(target + 11, '\u03C0/256', target + 3)\n          .cphase(target + 12, '\u03C0/512', target + 3)\n          .cphase(target + 13, '\u03C0/1024', target + 3)\n          .cphase(target + 14, '\u03C0/2048', target + 3)\n          .cphase(target + 15, '\u03C0/4096', target + 3)\n          .h(target + 4)\n          .cphase(target + 5, '\u03C0/2', target + 4)\n          .cphase(target + 6, '\u03C0/4', target + 4)\n          .cphase(target + 7, '\u03C0/8', target + 4)\n          .cphase(target + 8, '\u03C0/16', target + 4)\n          .cphase(target + 9, '\u03C0/32', target + 4)\n          .cphase(target + 10, '\u03C0/64', target + 4)\n          .cphase(target + 11, '\u03C0/128', target + 4)\n          .cphase(target + 12, '\u03C0/256', target + 4)\n          .cphase(target + 13, '\u03C0/512', target + 4)\n          .cphase(target + 14, '\u03C0/1024', target + 4)\n          .cphase(target + 15, '\u03C0/2048', target + 4)\n          .h(target + 5)\n          .cphase(target + 6, '\u03C0/2', target + 5)\n          .cphase(target + 7, '\u03C0/4', target + 5)\n          .cphase(target + 8, '\u03C0/8', target + 5)\n          .cphase(target + 9, '\u03C0/16', target + 5)\n          .cphase(target + 10, '\u03C0/32', target + 5)\n          .cphase(target + 11, '\u03C0/64', target + 5)\n          .cphase(target + 12, '\u03C0/128', target + 5)\n          .cphase(target + 13, '\u03C0/256', target + 5)\n          .cphase(target + 14, '\u03C0/512', target + 5)\n          .cphase(target + 15, '\u03C0/1024', target + 5)\n          .h(target + 6)\n          .cphase(target + 7, '\u03C0/2', target + 6)\n          .cphase(target + 8, '\u03C0/4', target + 6)\n          .cphase(target + 9, '\u03C0/8', target + 6)\n          .cphase(target + 10, '\u03C0/16', target + 6)\n          .cphase(target + 11, '\u03C0/32', target + 6)\n          .cphase(target + 12, '\u03C0/64', target + 6)\n          .cphase(target + 13, '\u03C0/128', target + 6)\n          .cphase(target + 14, '\u03C0/256', target + 6)\n          .cphase(target + 15, '\u03C0/512', target + 6)\n          .h(target + 7)\n          .cphase(target + 8, '\u03C0/2', target + 7)\n          .cphase(target + 9, '\u03C0/4', target + 7)\n          .cphase(target + 10, '\u03C0/8', target + 7)\n          .cphase(target + 11, '\u03C0/16', target + 7)\n          .cphase(target + 12, '\u03C0/32', target + 7)\n          .cphase(target + 13, '\u03C0/64', target + 7)\n          .cphase(target + 14, '\u03C0/128', target + 7)\n          .cphase(target + 15, '\u03C0/256', target + 7)\n          .h(target + 8)\n          .cphase(target + 9, '\u03C0/2', target + 8)\n          .cphase(target + 10, '\u03C0/4', target + 8)\n          .cphase(target + 11, '\u03C0/8', target + 8)\n          .cphase(target + 12, '\u03C0/16', target + 8)\n          .cphase(target + 13, '\u03C0/32', target + 8)\n          .cphase(target + 14, '\u03C0/64', target + 8)\n          .cphase(target + 15, '\u03C0/128', target + 8)\n          .h(target + 9)\n          .cphase(target + 10, '\u03C0/2', target + 8)\n          .cphase(target + 11, '\u03C0/4', target + 8)\n          .cphase(target + 12, '\u03C0/8', target + 8)\n          .cphase(target + 13, '\u03C0/16', target + 8)\n          .cphase(target + 14, '\u03C0/32', target + 8)\n          .cphase(target + 15, '\u03C0/64', target + 8)\n          .h(target + 10)\n          .cphase(target + 11, '\u03C0/2', target + 9)\n          .cphase(target + 12, '\u03C0/4', target + 9)\n          .cphase(target + 13, '\u03C0/8', target + 9)\n          .cphase(target + 14, '\u03C0/16', target + 9)\n          .cphase(target + 15, '\u03C0/32', target + 9)\n          .h(target + 11)\n          .cphase(target + 13, '\u03C0/2', target + 10)\n          .cphase(target + 14, '\u03C0/4', target + 10)\n          .cphase(target + 15, '\u03C0/8', target + 10)\n          .cphase(target + 16, '\u03C0/16', target + 10)\n          .h(target + 12)\n          .cphase(target + 14, '\u03C0/2', target + 11)\n          .cphase(target + 15, '\u03C0/4', target + 11)\n          .cphase(target + 16, '\u03C0/8', target + 11)\n          .h(target + 13)\n          .cphase(target + 15, '\u03C0/2', target + 12)\n          .cphase(target + 16, '\u03C0/4', target + 12)\n          .h(target + 14)\n          .cphase(target + 16, '\u03C0/2', target + 13)\n          .h(target + 15)\n        break\n      }\n      default: {\n        throw new Error(`Invalid span: ${span}`)\n      }\n    }\n    return this\n  }\n\n  qftDagger(span: ResizeableSpan, ...targets: number[]): Simulator {\n    for (const each of targets) {\n      this.qftDaggerSingleTargetBit(span, each)\n    }\n    return this\n  }\n\n  private qftDaggerSingleTargetBit(span: ResizeableSpan, target: number): Simulator {\n    switch (span) {\n      case 1: {\n        this.h(target)\n        break\n      }\n      case 2: {\n        this.h(target + 1)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 1)\n        break\n      }\n      case 3: {\n        this.h(target + 2)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 2)\n        break\n      }\n      case 4: {\n        this.h(target + 3)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 3)\n          .swap(target + 1, target + 2)\n        break\n      }\n      case 5: {\n        this.h(target + 4)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 4)\n          .swap(target + 1, target + 3)\n        break\n      }\n      case 6: {\n        this.h(target + 5)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 5)\n          .swap(target + 1, target + 4)\n          .swap(target + 2, target + 3)\n        break\n      }\n      case 7: {\n        this.h(target + 6)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 6)\n          .swap(target + 1, target + 5)\n          .swap(target + 2, target + 4)\n        break\n      }\n      case 8: {\n        this.h(target + 7)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 7)\n          .swap(target + 1, target + 6)\n          .swap(target + 2, target + 5)\n          .swap(target + 3, target + 4)\n        break\n      }\n      case 9: {\n        this.h(target + 8)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 8)\n          .swap(target + 1, target + 7)\n          .swap(target + 2, target + 6)\n          .swap(target + 3, target + 5)\n        break\n      }\n      case 10: {\n        this.h(target + 9)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 9)\n          .swap(target + 1, target + 8)\n          .swap(target + 2, target + 7)\n          .swap(target + 3, target + 6)\n          .swap(target + 4, target + 5)\n        break\n      }\n      case 11: {\n        this.h(target + 10)\n          .cphase(target + 10, '-\u03C0/2', target + 9)\n          .h(target + 9)\n          .cphase(target + 10, '-\u03C0/4', target + 8)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 10, '-\u03C0/8', target + 7)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 10, '-\u03C0/16', target + 6)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 10, '-\u03C0/32', target + 5)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 10, '-\u03C0/64', target + 4)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 10, '-\u03C0/128', target + 3)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 10, '-\u03C0/256', target + 2)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 10, '-\u03C0/512', target + 1)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 10, '-\u03C0/1024', target)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 10)\n          .swap(target + 1, target + 9)\n          .swap(target + 2, target + 8)\n          .swap(target + 3, target + 7)\n          .swap(target + 4, target + 6)\n        break\n      }\n      case 12: {\n        this.h(target + 11)\n          .cphase(target + 11, '-\u03C0/2', target + 10)\n          .h(target + 10)\n          .cphase(target + 11, '-\u03C0/4', target + 9)\n          .cphase(target + 10, '-\u03C0/2', target + 9)\n          .h(target + 9)\n          .cphase(target + 11, '-\u03C0/8', target + 8)\n          .cphase(target + 10, '-\u03C0/4', target + 8)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 11, '-\u03C0/16', target + 7)\n          .cphase(target + 10, '-\u03C0/8', target + 7)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 11, '-\u03C0/32', target + 6)\n          .cphase(target + 10, '-\u03C0/16', target + 6)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 11, '-\u03C0/64', target + 5)\n          .cphase(target + 10, '-\u03C0/32', target + 5)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 11, '-\u03C0/128', target + 4)\n          .cphase(target + 10, '-\u03C0/64', target + 4)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 11, '-\u03C0/256', target + 3)\n          .cphase(target + 10, '-\u03C0/128', target + 3)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 11, '-\u03C0/512', target + 2)\n          .cphase(target + 10, '-\u03C0/256', target + 2)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 11, '-\u03C0/1024', target + 1)\n          .cphase(target + 10, '-\u03C0/512', target + 1)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 11, '-\u03C0/2048', target)\n          .cphase(target + 10, '-\u03C0/1024', target)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 11)\n          .swap(target + 1, target + 10)\n          .swap(target + 2, target + 9)\n          .swap(target + 3, target + 8)\n          .swap(target + 4, target + 7)\n          .swap(target + 5, target + 6)\n        break\n      }\n      case 13: {\n        this.h(target + 12)\n          .cphase(target + 12, '-\u03C0/2', target + 11)\n          .h(target + 11)\n          .cphase(target + 12, '-\u03C0/4', target + 10)\n          .cphase(target + 11, '-\u03C0/2', target + 10)\n          .h(target + 10)\n          .cphase(target + 12, '-\u03C0/8', target + 9)\n          .cphase(target + 11, '-\u03C0/4', target + 9)\n          .cphase(target + 10, '-\u03C0/2', target + 9)\n          .h(target + 9)\n          .cphase(target + 12, '-\u03C0/16', target + 8)\n          .cphase(target + 11, '-\u03C0/8', target + 8)\n          .cphase(target + 10, '-\u03C0/4', target + 8)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 12, '-\u03C0/32', target + 7)\n          .cphase(target + 11, '-\u03C0/16', target + 7)\n          .cphase(target + 10, '-\u03C0/8', target + 7)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 12, '-\u03C0/64', target + 6)\n          .cphase(target + 11, '-\u03C0/32', target + 6)\n          .cphase(target + 10, '-\u03C0/16', target + 6)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 12, '-\u03C0/128', target + 5)\n          .cphase(target + 11, '-\u03C0/64', target + 5)\n          .cphase(target + 10, '-\u03C0/32', target + 5)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 12, '-\u03C0/256', target + 4)\n          .cphase(target + 11, '-\u03C0/128', target + 4)\n          .cphase(target + 10, '-\u03C0/64', target + 4)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 12, '-\u03C0/512', target + 3)\n          .cphase(target + 11, '-\u03C0/256', target + 3)\n          .cphase(target + 10, '-\u03C0/128', target + 3)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 12, '-\u03C0/1024', target + 2)\n          .cphase(target + 11, '-\u03C0/512', target + 2)\n          .cphase(target + 10, '-\u03C0/256', target + 2)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 12, '-\u03C0/2048', target + 1)\n          .cphase(target + 11, '-\u03C0/1024', target + 1)\n          .cphase(target + 10, '-\u03C0/512', target + 1)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 12, '-\u03C0/4096', target)\n          .cphase(target + 11, '-\u03C0/2048', target)\n          .cphase(target + 10, '-\u03C0/1024', target)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 12)\n          .swap(target + 1, target + 11)\n          .swap(target + 2, target + 10)\n          .swap(target + 3, target + 9)\n          .swap(target + 4, target + 8)\n          .swap(target + 5, target + 7)\n        break\n      }\n      case 14: {\n        this.h(target + 13)\n          .cphase(target + 13, '-\u03C0/2', target + 12)\n          .h(target + 12)\n          .cphase(target + 13, '-\u03C0/4', target + 11)\n          .cphase(target + 12, '-\u03C0/2', target + 11)\n          .h(target + 11)\n          .cphase(target + 13, '-\u03C0/8', target + 10)\n          .cphase(target + 12, '-\u03C0/4', target + 10)\n          .cphase(target + 11, '-\u03C0/2', target)\n          .h(target + 10)\n          .cphase(target + 13, '-\u03C0/16', target + 9)\n          .cphase(target + 12, '-\u03C0/8', target + 9)\n          .cphase(target + 11, '-\u03C0/4', target + 9)\n          .cphase(target + 10, '-\u03C0/2', target + 9)\n          .h(target + 9)\n          .cphase(target + 13, '-\u03C0/32', target + 8)\n          .cphase(target + 12, '-\u03C0/16', target + 8)\n          .cphase(target + 11, '-\u03C0/8', target + 8)\n          .cphase(target + 10, '-\u03C0/4', target + 8)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 13, '-\u03C0/64', target + 7)\n          .cphase(target + 12, '-\u03C0/32', target + 7)\n          .cphase(target + 11, '-\u03C0/16', target + 7)\n          .cphase(target + 10, '-\u03C0/8', target + 7)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 13, '-\u03C0/128', target + 6)\n          .cphase(target + 12, '-\u03C0/64', target + 6)\n          .cphase(target + 11, '-\u03C0/32', target + 6)\n          .cphase(target + 10, '-\u03C0/16', target + 6)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 13, '-\u03C0/256', target + 5)\n          .cphase(target + 12, '-\u03C0/128', target + 5)\n          .cphase(target + 11, '-\u03C0/64', target + 5)\n          .cphase(target + 10, '-\u03C0/32', target + 5)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 13, '-\u03C0/512', target + 4)\n          .cphase(target + 12, '-\u03C0/256', target + 4)\n          .cphase(target + 11, '-\u03C0/128', target + 4)\n          .cphase(target + 10, '-\u03C0/64', target + 4)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 13, '-\u03C0/1024', target + 3)\n          .cphase(target + 12, '-\u03C0/512', target + 3)\n          .cphase(target + 11, '-\u03C0/256', target + 3)\n          .cphase(target + 10, '-\u03C0/128', target + 3)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 13, '-\u03C0/2048', target + 2)\n          .cphase(target + 12, '-\u03C0/1024', target + 2)\n          .cphase(target + 11, '-\u03C0/512', target + 2)\n          .cphase(target + 10, '-\u03C0/256', target + 2)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 13, '-\u03C0/4096', target + 1)\n          .cphase(target + 12, '-\u03C0/2048', target + 1)\n          .cphase(target + 11, '-\u03C0/1024', target + 1)\n          .cphase(target + 10, '-\u03C0/512', target + 1)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 13, '-\u03C0/8192', target)\n          .cphase(target + 12, '-\u03C0/4096', target)\n          .cphase(target + 11, '-\u03C0/2048', target)\n          .cphase(target + 10, '-\u03C0/1024', target)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 13)\n          .swap(target + 1, target + 12)\n          .swap(target + 2, target + 11)\n          .swap(target + 3, target + 10)\n          .swap(target + 4, target + 9)\n          .swap(target + 5, target + 8)\n          .swap(target + 6, target + 7)\n        break\n      }\n      case 15: {\n        this.h(target + 14)\n          .cphase(target + 14, '-\u03C0/2', target + 13)\n          .h(target + 13)\n          .cphase(target + 14, '-\u03C0/4', target + 12)\n          .cphase(target + 13, '-\u03C0/2', target + 12)\n          .h(target + 12)\n          .cphase(target + 14, '-\u03C0/8', target + 11)\n          .cphase(target + 13, '-\u03C0/4', target + 11)\n          .cphase(target + 12, '-\u03C0/2', target + 11)\n          .h(target + 11)\n          .cphase(target + 14, '-\u03C0/16', target + 10)\n          .cphase(target + 13, '-\u03C0/8', target + 10)\n          .cphase(target + 12, '-\u03C0/4', target + 10)\n          .cphase(target + 11, '-\u03C0/2', target + 10)\n          .h(target + 10)\n          .cphase(target + 14, '-\u03C0/32', target + 9)\n          .cphase(target + 13, '-\u03C0/16', target + 9)\n          .cphase(target + 12, '-\u03C0/8', target + 9)\n          .cphase(target + 11, '-\u03C0/4', target + 9)\n          .cphase(target + 10, '-\u03C0/2', target + 9)\n          .h(target + 9)\n          .cphase(target + 14, '-\u03C0/64', target + 8)\n          .cphase(target + 13, '-\u03C0/32', target + 8)\n          .cphase(target + 12, '-\u03C0/16', target + 8)\n          .cphase(target + 11, '-\u03C0/8', target + 8)\n          .cphase(target + 10, '-\u03C0/4', target + 8)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 14, '-\u03C0/128', target + 7)\n          .cphase(target + 13, '-\u03C0/64', target + 7)\n          .cphase(target + 12, '-\u03C0/32', target + 7)\n          .cphase(target + 11, '-\u03C0/16', target + 7)\n          .cphase(target + 10, '-\u03C0/8', target + 7)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 14, '-\u03C0/256', target + 6)\n          .cphase(target + 13, '-\u03C0/128', target + 6)\n          .cphase(target + 12, '-\u03C0/64', target + 6)\n          .cphase(target + 11, '-\u03C0/32', target + 6)\n          .cphase(target + 10, '-\u03C0/16', target + 6)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 14, '-\u03C0/512', target + 5)\n          .cphase(target + 13, '-\u03C0/256', target + 5)\n          .cphase(target + 12, '-\u03C0/128', target + 5)\n          .cphase(target + 11, '-\u03C0/64', target + 5)\n          .cphase(target + 10, '-\u03C0/32', target + 5)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 14, '-\u03C0/1024', target + 4)\n          .cphase(target + 13, '-\u03C0/512', target + 4)\n          .cphase(target + 12, '-\u03C0/256', target + 4)\n          .cphase(target + 11, '-\u03C0/128', target + 4)\n          .cphase(target + 10, '-\u03C0/64', target + 4)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 14, '-\u03C0/2048', target + 3)\n          .cphase(target + 13, '-\u03C0/1024', target + 3)\n          .cphase(target + 12, '-\u03C0/512', target + 3)\n          .cphase(target + 11, '-\u03C0/256', target + 3)\n          .cphase(target + 10, '-\u03C0/128', target + 3)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 14, '-\u03C0/4096', target + 2)\n          .cphase(target + 13, '-\u03C0/2048', target + 2)\n          .cphase(target + 12, '-\u03C0/1024', target + 2)\n          .cphase(target + 11, '-\u03C0/512', target + 2)\n          .cphase(target + 10, '-\u03C0/256', target + 2)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 14, '-\u03C0/8192', target + 1)\n          .cphase(target + 13, '-\u03C0/4096', target + 1)\n          .cphase(target + 12, '-\u03C0/2048', target + 1)\n          .cphase(target + 11, '-\u03C0/1024', target + 1)\n          .cphase(target + 10, '-\u03C0/512', target + 1)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 14, '-\u03C0/16384', target)\n          .cphase(target + 13, '-\u03C0/8192', target)\n          .cphase(target + 12, '-\u03C0/4096', target)\n          .cphase(target + 11, '-\u03C0/2048', target)\n          .cphase(target + 10, '-\u03C0/1024', target)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target, target + 14)\n          .swap(target + 1, target + 13)\n          .swap(target + 2, target + 12)\n          .swap(target + 3, target + 11)\n          .swap(target + 4, target + 10)\n          .swap(target + 5, target + 9)\n          .swap(target + 6, target + 8)\n        break\n      }\n      case 16: {\n        this.h(target + 15)\n          .cphase(target + 15, '-\u03C0/2', target + 14)\n          .h(target + 14)\n          .cphase(target + 15, '-\u03C0/4', target + 13)\n          .cphase(target + 14, '-\u03C0/4', target + 13)\n          .h(target + 13)\n          .cphase(target + 15, '-\u03C0/8', target + 12)\n          .cphase(target + 14, '-\u03C0/4', target + 12)\n          .cphase(target + 13, '-\u03C0/2', target + 12)\n          .h(target + 12)\n          .cphase(target + 15, '-\u03C0/16', target + 11)\n          .cphase(target + 14, '-\u03C0/8', target + 11)\n          .cphase(target + 13, '-\u03C0/4', target + 11)\n          .cphase(target + 12, '-\u03C0/2', target + 11)\n          .h(target + 11)\n          .cphase(target + 15, '-\u03C0/32', target + 10)\n          .cphase(target + 14, '-\u03C0/16', target + 10)\n          .cphase(target + 13, '-\u03C0/8', target + 10)\n          .cphase(target + 12, '-\u03C0/4', target + 10)\n          .cphase(target + 11, '-\u03C0/2', target + 10)\n          .h(target + 10)\n          .cphase(target + 15, '-\u03C0/64', target + 9)\n          .cphase(target + 14, '-\u03C0/32', target + 9)\n          .cphase(target + 13, '-\u03C0/16', target + 9)\n          .cphase(target + 12, '-\u03C0/8', target + 9)\n          .cphase(target + 11, '-\u03C0/4', target + 9)\n          .cphase(target + 10, '-\u03C0/2', target + 9)\n          .h(target + 9)\n          .cphase(target + 15, '-\u03C0/128', target + 8)\n          .cphase(target + 14, '-\u03C0/64', target + 8)\n          .cphase(target + 13, '-\u03C0/32', target + 8)\n          .cphase(target + 12, '-\u03C0/16', target + 8)\n          .cphase(target + 11, '-\u03C0/8', target + 8)\n          .cphase(target + 10, '-\u03C0/4', target + 8)\n          .cphase(target + 9, '-\u03C0/2', target + 8)\n          .h(target + 8)\n          .cphase(target + 15, '-\u03C0/256', target + 7)\n          .cphase(target + 14, '-\u03C0/128', target + 7)\n          .cphase(target + 13, '-\u03C0/64', target + 7)\n          .cphase(target + 12, '-\u03C0/32', target + 7)\n          .cphase(target + 11, '-\u03C0/16', target + 7)\n          .cphase(target + 10, '-\u03C0/8', target + 7)\n          .cphase(target + 9, '-\u03C0/4', target + 7)\n          .cphase(target + 8, '-\u03C0/2', target + 7)\n          .h(target + 7)\n          .cphase(target + 15, '-\u03C0/512', target + 6)\n          .cphase(target + 14, '-\u03C0/256', target + 6)\n          .cphase(target + 13, '-\u03C0/128', target + 6)\n          .cphase(target + 12, '-\u03C0/64', target + 6)\n          .cphase(target + 11, '-\u03C0/32', target + 6)\n          .cphase(target + 10, '-\u03C0/16', target + 6)\n          .cphase(target + 9, '-\u03C0/8', target + 6)\n          .cphase(target + 8, '-\u03C0/4', target + 6)\n          .cphase(target + 7, '-\u03C0/2', target + 6)\n          .h(target + 6)\n          .cphase(target + 15, '-\u03C0/1024', target + 5)\n          .cphase(target + 14, '-\u03C0/512', target + 5)\n          .cphase(target + 13, '-\u03C0/256', target + 5)\n          .cphase(target + 12, '-\u03C0/128', target + 5)\n          .cphase(target + 11, '-\u03C0/64', target + 5)\n          .cphase(target + 10, '-\u03C0/32', target + 5)\n          .cphase(target + 9, '-\u03C0/16', target + 5)\n          .cphase(target + 8, '-\u03C0/8', target + 5)\n          .cphase(target + 7, '-\u03C0/4', target + 5)\n          .cphase(target + 6, '-\u03C0/2', target + 5)\n          .h(target + 5)\n          .cphase(target + 15, '-\u03C0/2048', target + 4)\n          .cphase(target + 14, '-\u03C0/1024', target + 4)\n          .cphase(target + 13, '-\u03C0/512', target + 4)\n          .cphase(target + 12, '-\u03C0/256', target + 4)\n          .cphase(target + 11, '-\u03C0/128', target + 4)\n          .cphase(target + 10, '-\u03C0/64', target + 4)\n          .cphase(target + 9, '-\u03C0/32', target + 4)\n          .cphase(target + 8, '-\u03C0/16', target + 4)\n          .cphase(target + 7, '-\u03C0/8', target + 4)\n          .cphase(target + 6, '-\u03C0/4', target + 4)\n          .cphase(target + 5, '-\u03C0/2', target + 4)\n          .h(target + 4)\n          .cphase(target + 15, '-\u03C0/4096', target + 3)\n          .cphase(target + 14, '-\u03C0/2048', target + 3)\n          .cphase(target + 13, '-\u03C0/1024', target + 3)\n          .cphase(target + 12, '-\u03C0/512', target + 3)\n          .cphase(target + 11, '-\u03C0/256', target + 3)\n          .cphase(target + 10, '-\u03C0/128', target + 3)\n          .cphase(target + 9, '-\u03C0/64', target + 3)\n          .cphase(target + 8, '-\u03C0/32', target + 3)\n          .cphase(target + 7, '-\u03C0/16', target + 3)\n          .cphase(target + 6, '-\u03C0/8', target + 3)\n          .cphase(target + 5, '-\u03C0/4', target + 3)\n          .cphase(target + 4, '-\u03C0/2', target + 3)\n          .h(target + 3)\n          .cphase(target + 15, '-\u03C0/8192', target + 2)\n          .cphase(target + 14, '-\u03C0/4096', target + 2)\n          .cphase(target + 13, '-\u03C0/2048', target + 2)\n          .cphase(target + 12, '-\u03C0/1024', target + 2)\n          .cphase(target + 11, '-\u03C0/512', target + 2)\n          .cphase(target + 10, '-\u03C0/256', target + 2)\n          .cphase(target + 9, '-\u03C0/128', target + 2)\n          .cphase(target + 8, '-\u03C0/64', target + 2)\n          .cphase(target + 7, '-\u03C0/32', target + 2)\n          .cphase(target + 6, '-\u03C0/16', target + 2)\n          .cphase(target + 5, '-\u03C0/8', target + 2)\n          .cphase(target + 4, '-\u03C0/4', target + 2)\n          .cphase(target + 3, '-\u03C0/2', target + 2)\n          .h(target + 2)\n          .cphase(target + 15, '-\u03C0/16384', target + 1)\n          .cphase(target + 14, '-\u03C0/8192', target + 1)\n          .cphase(target + 13, '-\u03C0/4096', target + 1)\n          .cphase(target + 12, '-\u03C0/2048', target + 1)\n          .cphase(target + 11, '-\u03C0/1024', target + 1)\n          .cphase(target + 10, '-\u03C0/512', target + 1)\n          .cphase(target + 9, '-\u03C0/256', target + 1)\n          .cphase(target + 8, '-\u03C0/128', target + 1)\n          .cphase(target + 7, '-\u03C0/64', target + 1)\n          .cphase(target + 6, '-\u03C0/32', target + 1)\n          .cphase(target + 5, '-\u03C0/16', target + 1)\n          .cphase(target + 4, '-\u03C0/8', target + 1)\n          .cphase(target + 3, '-\u03C0/4', target + 1)\n          .cphase(target + 2, '-\u03C0/2', target + 1)\n          .h(target + 1)\n          .cphase(target + 15, '-\u03C0/32768', target)\n          .cphase(target + 14, '-\u03C0/16384', target)\n          .cphase(target + 13, '-\u03C0/8192', target)\n          .cphase(target + 12, '-\u03C0/4096', target)\n          .cphase(target + 11, '-\u03C0/2048', target)\n          .cphase(target + 10, '-\u03C0/1024', target)\n          .cphase(target + 9, '-\u03C0/512', target)\n          .cphase(target + 8, '-\u03C0/256', target)\n          .cphase(target + 7, '-\u03C0/128', target)\n          .cphase(target + 6, '-\u03C0/64', target)\n          .cphase(target + 5, '-\u03C0/32', target)\n          .cphase(target + 4, '-\u03C0/16', target)\n          .cphase(target + 3, '-\u03C0/8', target)\n          .cphase(target + 2, '-\u03C0/4', target)\n          .cphase(target + 1, '-\u03C0/2', target)\n          .h(target)\n          .swap(target + 1, target + 15)\n          .swap(target + 2, target + 14)\n          .swap(target + 3, target + 13)\n          .swap(target + 4, target + 12)\n          .swap(target + 5, target + 11)\n          .swap(target + 6, target + 10)\n          .swap(target + 7, target + 9)\n          .swap(target + 8, target + 8)\n          .swap(target + 9, target + 7)\n          .swap(target + 10, target + 6)\n        break\n      }\n      default: {\n        throw new Error(`Invalid span: ${span}`)\n      }\n    }\n    return this\n  }\n\n  measure(...targets: number[]): Simulator {\n    for (const t of targets) {\n      const pZero = this.pZero(t)\n      const rand = Math.random()\n\n      if (rand <= pZero) {\n        for (let bit = 0; bit < 1 << this.state.nqubit; bit++) {\n          if ((bit & (1 << t)) !== 0) this.state.setAmplifier(bit, Complex.ZERO)\n          this.state.setAmplifier(bit, this.state.amplifier(bit).dividedBy(Math.sqrt(pZero)))\n        }\n        this.measuredBits[t] = 0\n      } else {\n        for (let bit = 0; bit < 1 << this.state.nqubit; bit++) {\n          if ((bit & (1 << t)) === 0) this.state.setAmplifier(bit, Complex.ZERO)\n          this.state.setAmplifier(bit, this.state.amplifier(bit).dividedBy(Math.sqrt(1 - pZero)))\n        }\n        this.measuredBits[t] = 1\n      }\n    }\n    return this\n  }\n\n  amplitudes(): Complex[] {\n    return this.state.matrix.columnAt(0)\n  }\n\n  private u(u: Matrix, ...targets: number[]): void {\n    for (const t of targets) {\n      this.state.timesQubitOperation(u, t, 0)\n    }\n  }\n\n  private cu(controls: number | number[], u: Matrix, ...targets: number[]): void {\n    const cs = typeof controls === 'number' ? [controls] : controls\n    const controlMask = cs.reduce((result, each) => {\n      return result | (1 << each)\n    }, 0)\n\n    for (const t of targets) {\n      this.state.timesQubitOperation(u, t, controlMask)\n    }\n  }\n\n  private pZero(target: number): number {\n    let p = 0\n    for (let bit = 0; bit < 1 << this.state.nqubit; bit++) {\n      if ((bit & (1 << target)) === 0) {\n        p += Math.pow(this.state.amplifier(bit).abs(), 2)\n      }\n    }\n    return p\n  }\n}\n", "import Fraction from 'fraction.js'\n\nexport function radian(angle: string): number {\n  const coefficient = piCoefficient(angle)\n  const fraction = new Fraction(coefficient).valueOf()\n\n  return fraction * Math.PI\n}\n\nexport function angleDenominator(angle: string): number {\n  const coefficient = piCoefficient(angle)\n  const split = coefficient.split('/')\n\n  if (split.length === 1) {\n    return 1\n  } else if (split.length === 2) {\n    return parseInt(split[1])\n  } else {\n    throw new Error(`Failed to parse angle '${angle}'`)\n  }\n}\n\nexport function angleNumerator(angle: string): number {\n  const coefficient = piCoefficient(angle)\n  const split = coefficient.split('/')\n\n  if (split.length === 1) {\n    return parseInt(split[0])\n  } else if (split.length === 2) {\n    return parseInt(split[0])\n  } else {\n    throw new Error(`Failed to parse angle '${angle}'`)\n  }\n}\n\nexport function isAngleLessThan(angle: string, other: string): boolean {\n  return new Fraction(piCoefficient(angle)).valueOf() < new Fraction(piCoefficient(other)).valueOf()\n}\n\nexport function isAngleGreaterThan(angle: string, other: string): boolean {\n  return new Fraction(piCoefficient(angle)).valueOf() > new Fraction(piCoefficient(other)).valueOf()\n}\n\nexport function isValidAngle(angle: string): boolean {\n  if (angle === '0') return true\n  if (!/\u03C0/.test(angle)) return false\n\n  try {\n    const coefficient = piCoefficient(angle)\n    new Fraction(coefficient).valueOf()\n\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport function piCoefficient(angle: string): string {\n  return angle.replace(/(\\d+)\u03C0/g, '$1').replace(/\u03C0/g, '1')\n}\n\nexport function reduceAngle(angle: string): string {\n  try {\n    const coefficient = piCoefficient(angle)\n    const reduced = new Fraction(coefficient).toFraction()\n    const split = reduced.split('/')\n\n    let numerator: string\n    if (split[0] === '0') {\n      numerator = '0'\n    } else if (split[0] === '1') {\n      numerator = `\u03C0`\n    } else if (split[0] === '-1') {\n      numerator = `-\u03C0`\n    } else {\n      numerator = `${split[0]}\u03C0`\n    }\n\n    if (split.length === 1) {\n      return numerator\n    } else {\n      return `${numerator}/${split[1]}`\n    }\n  } catch (e) {\n    throw new Error(`Failed to parse angle '${angle}'`)\n  }\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst COLLECTION_CUTOFF = 1000\nconst BAD_TO_STRING_RESULT = Object.prototype.toString.call({})\nconst RECURSE_LIMIT_DESCRIPTION = '!recursion-limit!'\nconst DEFAULT_RECURSION_LIMIT = 10\n\n// Attempts to give a useful and unambiguous description of the given value.\nexport function describe(value: unknown, recursionLimit = DEFAULT_RECURSION_LIMIT): string {\n  return (\n    tryDescribeAtomic(value) || tryDescribeCollection(value, recursionLimit) || describeFallback(value, recursionLimit)\n  )\n}\n\nfunction tryDescribeAtomic(value: unknown) {\n  if (value === null) return 'null'\n  if (value === undefined) return 'undefined'\n  if (typeof value === 'string') return `\"${value}\"`\n  if (typeof value === 'number') return String(value)\n\n  return undefined\n}\n\nfunction tryDescribeCollection(value: unknown, recursionLimit: number) {\n  if (recursionLimit === 0) return RECURSE_LIMIT_DESCRIPTION\n  if (value instanceof Map) return describeMap(value, recursionLimit)\n  if (value instanceof Set) return describeSet(value, recursionLimit)\n  const isIterable = (v: unknown): v is Iterable<unknown> => {\n    if ((v as Iterable<unknown>)[Symbol.iterator] !== undefined) {\n      return true\n    }\n    return false\n  }\n  if (isIterable(value)) return describeIterable(value, recursionLimit)\n\n  return undefined\n}\n\nfunction describeFallback(value: unknown, recursionLimit: number) {\n  const defaultString = String(value)\n  if (defaultString !== BAD_TO_STRING_RESULT) return defaultString\n\n  return describeObject(value, recursionLimit)\n}\n\nfunction describeMap(map: Map<unknown, unknown>, limit: number) {\n  const entries = []\n  for (const [k, v] of map.entries()) {\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    const keyDesc = describe(k, limit - 1)\n    const valDesc = describe(v, limit - 1)\n    entries.push(`${keyDesc}: ${valDesc}`)\n  }\n  return `Map{${entries.join(', ')}}`\n}\n\nfunction describeSet(set: Set<unknown>, limit: number) {\n  const entries = []\n  for (const e of set) {\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    entries.push(describe(e, limit - 1))\n  }\n  return `Set{${entries.join(', ')}}`\n}\n\nfunction describeIterable(seq: Iterable<unknown>, limit: number): string {\n  const entries = []\n  for (const e of seq) {\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    entries.push(describe(e, limit - 1))\n  }\n  const prefix = Array.isArray(seq) ? '' : seq.constructor.name\n  return `${prefix}[${entries.join(', ')}]`\n}\n\nfunction describeObject(value: unknown, limit: number) {\n  const entries = []\n  for (const k in value as Record<string, unknown>) {\n    if (!Object.prototype.hasOwnProperty.call(value, k)) {\n      continue\n    }\n    if (entries.length > COLLECTION_CUTOFF) {\n      entries.push('[...]')\n      break\n    }\n    const v = (value as Record<string, unknown>)[k]\n    const keyDesc = describe(k, limit - 1)\n    const valDesc = describe(v, limit - 1)\n    entries.push(`${keyDesc}: ${valDesc}`)\n  }\n\n  const typeName = (value as Record<string, unknown>).constructor.name\n  const prefix = typeName === {}.constructor.name ? '' : `(Type: ${typeName})`\n  return `${prefix}{${entries.join(', ')}}`\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {describe} from './describe'\n\nlet CONSTRUCTOR_CALLS_NESTING = 0\n\nexport class DetailedError extends Error {\n  public details: string | undefined\n  private detailsObj: unknown\n\n  constructor(message: string, detailsObj: unknown) {\n    super(message)\n\n    this.detailsObj = detailsObj\n    this.name = 'Error'\n    this.message = message\n    this.stack = new Error().stack\n    if (this.stack !== undefined) {\n      this.stack = this.stack.replace(/^Error\\n\\s+at new DetailedError (\\S+)\\s?\\n\\s+at /, '\\n    ')\n    }\n\n    CONSTRUCTOR_CALLS_NESTING++\n    try {\n      this.details =\n        CONSTRUCTOR_CALLS_NESTING === 1\n          ? describe(this.detailsObj)\n          : '(failed to describe detailsObj due to possibly re-entrancy)'\n    } catch (ex) {\n      // eslint-disable-next-line no-console\n      console.error(ex)\n      this.details = '(failed to describe detailsObj, see the console for details)'\n    } finally {\n      CONSTRUCTOR_CALLS_NESTING--\n    }\n  }\n}\n", "type UnicodeFraction = {character: string; ref: string; value: number}\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const UNICODE_FRACTIONS = [\n  {character: '\\u00BD', ref: '\u00BD', expanded: '1/2', value: 1 / 2},\n  {character: '\\u00BC', ref: '\u00BC', expanded: '1/4', value: 1 / 4},\n  {character: '\\u00BE', ref: '\u00BE', expanded: '3/4', value: 3 / 4},\n  {character: '\\u2153', ref: '\u2153', expanded: '1/3', value: 1 / 3},\n  {character: '\\u2154', ref: '\u2154', expanded: '2/3', value: 2 / 3},\n  {character: '\\u2155', ref: '\u2155', expanded: '1/5', value: 1 / 5},\n  {character: '\\u2156', ref: '\u2156', expanded: '2/5', value: 2 / 5},\n  {character: '\\u2157', ref: '\u2157', expanded: '3/5', value: 3 / 5},\n  {character: '\\u2158', ref: '\u2158', expanded: '4/5', value: 4 / 5},\n  {character: '\\u2159', ref: '\u2159', expanded: '1/6', value: 1 / 6},\n  {character: '\\u215A', ref: '\u215A', expanded: '5/6', value: 5 / 6},\n  {character: '\\u2150', ref: '\u2150', expanded: '1/7', value: 1 / 7},\n  {character: '\\u215B', ref: '\u215B', expanded: '1/8', value: 1 / 8},\n  {character: '\\u215C', ref: '\u215C', expanded: '3/8', value: 3 / 8},\n  {character: '\\u215D', ref: '\u215D', expanded: '5/8', value: 5 / 8},\n  {character: '\\u215E', ref: '\u215E', expanded: '7/8', value: 7 / 8},\n  {character: '\\u2151', ref: '\u2151', expanded: '1/9', value: 1 / 9},\n  {character: '\\u2152', ref: '\u2152', expanded: '1/10', value: 1 / 10}\n]\n\n/**\n * Stores formatting options, for determining what string output should look\n * like.\n */\nexport class Format {\n  /**\n   * Returns an approximated result, but with the constraint that when it\n   * changes slightly it should \"look the same\". (It should look good when\n   * varying and animated.)\n   */\n  static readonly CONSISTENT = new Format(false, 0, 2, ', ')\n\n  /**\n   * Returns an accurate result, but favoring looking nice over being small.\n   */\n  static readonly EXACT = new Format(true, 0, undefined, ', ')\n\n  /**\n   * Returns an accurate result, favoring being small over looking nice.\n   */\n  static readonly MINIFIED = new Format(true, 0, undefined, ',')\n\n  /**\n   * Returns an approximated result, strongly favoring looking nice.\n   */\n  static readonly SIMPLIFIED = new Format(true, 0.0005, 3, ', ')\n\n  /**\n   * Parses the given text into a float. Works for text created by\n   * [[formatFloat]].\n   */\n  static parseFloat(text: string): number {\n    if (text.length === 0) {\n      throw new Error(`Not a number: '${text}'`)\n    }\n    if (text[0] === '-') {\n      return -Format.parseFloat(text.substr(1))\n    }\n    if (text[0] === '\\u221A') {\n      return Math.sqrt(Format.parseFloat(text.substr(1)))\n    }\n\n    const fraction = Format.matchUnicodeFraction(e => e.character === text)\n    if (fraction !== undefined) {\n      return fraction.value\n    }\n\n    const result = parseFloat(text)\n    if (isNaN(result)) {\n      throw new Error(`Not a number: '${text}'`)\n    }\n    return result\n  }\n\n  /**\n   * Corrects a value to a nearby simple fraction or root thereof, such as\n   * sqrt(1/2), so it can be printed compactly.\n   *\n   * @param value  The value to round.\n   * @param epsilon  The maximum offset error introduced by the rounding.\n   */\n  static simplifyByRounding(value: number, epsilon: number): number {\n    if (value < 0) {\n      return -Format.simplifyByRounding(-value, epsilon)\n    }\n\n    const r = value % 1\n    if (r <= epsilon || 1 - r <= epsilon) {\n      return Math.round(value)\n    }\n\n    const fraction = Format.matchUnicodeFraction(e => Math.abs(e.value - value) <= epsilon)\n    if (fraction !== undefined) {\n      return fraction.value\n    }\n\n    const rootFraction = Format.matchUnicodeFraction(e => Math.abs(Math.sqrt(e.value) - value) <= epsilon)\n    if (rootFraction !== undefined) {\n      return Math.sqrt(rootFraction.value)\n    }\n\n    return value\n  }\n\n  /**\n   * Returns the first element of an array matching the given predicate, or else\n   * returns undefined.\n   *\n   * @hidden\n   */\n  static matchUnicodeFraction(predicate: (arrayItem: UnicodeFraction) => boolean): UnicodeFraction | undefined {\n    for (const each of UNICODE_FRACTIONS) {\n      if (predicate(each)) return each\n    }\n    return undefined\n  }\n\n  public allowAbbreviation: boolean\n  public maxAbbreviationError: number\n  public fixedDigits: number | undefined\n  public itemSeparator: string\n\n  /**\n   * @param allowAbbreviation  Should outputs be shortened, if possible?\n   * @param maxAbbreviationError  How much error is abbreviating allowed to introduce?\n   * @param fixedDigits  Use toFixed? How many digits?\n   * @param itemSeparator  What should list items be separated by?\n   */\n  constructor(\n    allowAbbreviation: boolean,\n    maxAbbreviationError: number,\n    fixedDigits: number | undefined,\n    itemSeparator: string\n  ) {\n    this.allowAbbreviation = allowAbbreviation\n    this.maxAbbreviationError = maxAbbreviationError\n    this.fixedDigits = fixedDigits\n    this.itemSeparator = itemSeparator\n  }\n\n  formatFloat(f: number): string {\n    if (this.allowAbbreviation) {\n      return this.abbreviateFloat(f, this.maxAbbreviationError, this.fixedDigits)\n    }\n    if (this.fixedDigits !== undefined) {\n      return f.toFixed(this.fixedDigits)\n    }\n    return String(f)\n  }\n\n  /**\n   * Returns a string representation of a float, taking advantage of unicode\n   * fractions and square roots.\n   *\n   * @param value  The value to represent as a string.\n   * @param epsilon  The maximum error introduced by using an expression.\n   * @param digits  digits The number of digits to use if no expression matches.\n   */\n  private abbreviateFloat(value: number, epsilon = 0, digits: number | undefined = undefined): string {\n    if (Math.abs(value) < epsilon) return '0'\n    if (value < 0) return `-${this.abbreviateFloat(-value, epsilon, digits)}`\n\n    const fraction = Format.matchUnicodeFraction(e => Math.abs(e.value - value) <= epsilon)\n    if (fraction !== undefined) {\n      return fraction.character\n    }\n\n    const rootFraction = Format.matchUnicodeFraction(e => Math.abs(Math.sqrt(e.value) - value) <= epsilon)\n    if (rootFraction !== undefined) {\n      return `\\u221A${rootFraction.character}`\n    }\n\n    if (value % 1 !== 0 && digits !== undefined) {\n      return value.toFixed(digits)\n    }\n\n    return value.toString()\n  }\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Util {\n  static need(expression: boolean, message: string, args?: unknown[]): asserts expression {\n    if (expression !== true) {\n      const argDesc = args === undefined ? '(not provided)' : `[${Array.prototype.slice.call(args).join(', ')}]`\n      const msgDesc = message === undefined ? '(not provided)' : message\n      const msg = `Precondition failed\\n\\nMessage: ${msgDesc}\\n\\nArgs: ${argDesc}`\n      throw new Error(msg)\n    }\n  }\n\n  static notNull<T>(v: T): asserts v is NonNullable<T> {\n    Util.need(v !== null && v !== undefined, 'notNull')\n  }\n\n  static snappedCosSin(radians: number): number[] {\n    const unit = Math.PI / 4\n    const i = Math.round(radians / unit)\n    if (i * unit === radians) {\n      const s = Math.sqrt(0.5)\n      const snaps = [\n        [1, 0],\n        [s, s],\n        [0, 1],\n        [-s, s],\n        [-1, 0],\n        [-s, -s],\n        [0, -1],\n        [s, -s]\n      ]\n      return snaps[i & 7]\n    }\n    return [Math.cos(radians), Math.sin(radians)]\n  }\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DetailedError} from './detailed-error'\nimport {Format} from './format'\nimport {Util} from './util'\n\nexport class Complex {\n  static readonly ZERO = new Complex(0, 0)\n  static readonly ONE = new Complex(1, 0)\n  static readonly I = new Complex(0, 1)\n\n  public real: number\n  public imag: number\n\n  static from(v: number | Complex): Complex {\n    if (v instanceof Complex) {\n      return v\n    }\n    if (typeof v === 'number') {\n      return new Complex(v, 0)\n    }\n    throw new DetailedError('Unrecognized value type.', {v})\n  }\n\n  static polar(magnitude: number, phase: number): Complex {\n    const [cos, sin] = Util.snappedCosSin(phase)\n    return new Complex(magnitude * cos, magnitude * sin)\n  }\n\n  static realPartOf(v: number | Complex): number {\n    if (v instanceof Complex) {\n      return v.real\n    }\n    if (typeof v === 'number') {\n      return v\n    }\n    throw new DetailedError('Unrecognized value type.', {v})\n  }\n\n  static imagPartOf(v: number | Complex): number {\n    if (v instanceof Complex) {\n      return v.imag\n    }\n    if (typeof v === 'number') {\n      return 0\n    }\n    throw new DetailedError('Unrecognized value type.', {v})\n  }\n\n  constructor(real: number, imag: number) {\n    this.real = real\n    this.imag = imag\n  }\n\n  static rootsOfQuadratic(a: number | Complex, b: number | Complex, c: number | Complex): Complex[] {\n    a = Complex.from(a)\n    b = Complex.from(b)\n    c = Complex.from(c)\n\n    if (a.isEqualTo(0)) {\n      if (!b.isEqualTo(0)) {\n        return [c.times(-1).dividedBy(b)]\n      }\n      if (!c.isEqualTo(0)) {\n        return []\n      }\n      throw Error('Degenerate')\n    }\n\n    const difs = b.times(b).minus(a.times(c).times(4)).sqrts()\n    const mid = b.times(-1)\n    const denom = a.times(2)\n    return difs.map(d => mid.minus(d).dividedBy(denom))\n  }\n\n  isEqualTo(other: unknown): boolean {\n    if (other instanceof Complex) {\n      return this.real === other.real && this.imag === other.imag\n    }\n    if (typeof other === 'number') {\n      return this.real === other && this.imag === 0\n    }\n    return false\n  }\n\n  isApproximatelyEqualTo(other: number | Complex | unknown, epsilon: number): boolean {\n    if (other instanceof Complex || typeof other === 'number') {\n      const d = this.minus(Complex.from(other))\n      return Math.abs(d.real) <= epsilon && Math.abs(d.imag) <= epsilon && d.abs() <= epsilon\n    }\n    return false\n  }\n\n  norm2(): number {\n    return this.real * this.real + this.imag * this.imag\n  }\n\n  abs(): number {\n    return Math.sqrt(this.norm2())\n  }\n\n  unit(): Complex {\n    const m = this.norm2()\n    if (m < 0.00001) {\n      return Complex.polar(1, this.phase())\n    }\n    return this.dividedBy(Math.sqrt(m))\n  }\n\n  plus(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    return new Complex(this.real + c.real, this.imag + c.imag)\n  }\n\n  minus(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    return new Complex(this.real - c.real, this.imag - c.imag)\n  }\n\n  times(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    return new Complex(this.real * c.real - this.imag * c.imag, this.real * c.imag + this.imag * c.real)\n  }\n\n  dividedBy(v: number | Complex): Complex {\n    const c = Complex.from(v)\n    const d = c.norm2()\n    if (d === 0) {\n      throw new Error('Division by Zero')\n    }\n\n    const n = this.times(c.conjugate())\n    return new Complex(n.real / d, n.imag / d)\n  }\n\n  sqrts(): [Complex] | [Complex, Complex] {\n    const [r, i] = [this.real, this.imag]\n    const m = Math.sqrt(Math.sqrt(r * r + i * i))\n    if (m === 0) {\n      return [Complex.ZERO]\n    }\n    if (i === 0 && r < 0) {\n      return [new Complex(0, m), new Complex(0, -m)]\n    }\n\n    const a = this.phase() / 2\n    const c = Complex.polar(m, a)\n    return [c, c.times(-1)]\n  }\n\n  conjugate(): Complex {\n    return new Complex(this.real, -this.imag)\n  }\n\n  toString(format?: Format): string {\n    format = format || Format.EXACT\n    return format.allowAbbreviation ? this.toStringAllowSingleValue(format) : this.toStringBothValues(format)\n  }\n\n  neg(): Complex {\n    return new Complex(-this.real, -this.imag)\n  }\n\n  raisedTo(exponent: number | Complex): Complex {\n    if (exponent === 0.5 && this.imag === 0 && this.real >= 0) {\n      return new Complex(Math.sqrt(this.real), 0)\n    }\n    if (Complex.ZERO.isEqualTo(exponent)) {\n      return Complex.ONE\n    }\n    if (this.isEqualTo(Complex.ZERO)) {\n      return Complex.ZERO\n    }\n    return this.ln().times(Complex.from(exponent)).exp()\n  }\n\n  exp(): Complex {\n    return Complex.polar(Math.exp(this.real), this.imag)\n  }\n\n  cos(): Complex {\n    const z = this.times(Complex.I)\n    return z.exp().plus(z.neg().exp()).times(0.5)\n  }\n\n  sin(): Complex {\n    const z = this.times(Complex.I)\n    return z.exp().minus(z.neg().exp()).dividedBy(new Complex(0, 2))\n  }\n\n  tan(): Complex {\n    return this.sin().dividedBy(this.cos())\n  }\n\n  ln(): Complex {\n    return new Complex(Math.log(this.abs()), this.phase())\n  }\n\n  phase(): number {\n    return Math.atan2(this.imag, this.real)\n  }\n\n  private toStringAllowSingleValue(format: Format): string {\n    if (Math.abs(this.imag) <= format.maxAbbreviationError) {\n      return format.formatFloat(this.real)\n    }\n    if (Math.abs(this.real) <= format.maxAbbreviationError) {\n      if (Math.abs(this.imag - 1) <= format.maxAbbreviationError) {\n        return 'i'\n      }\n      if (Math.abs(this.imag + 1) <= format.maxAbbreviationError) {\n        return '-i'\n      }\n      return `${format.formatFloat(this.imag)}i`\n    }\n\n    return this.toStringBothValues(format)\n  }\n\n  private toStringBothValues(format: Format): string {\n    const separator = this.imag >= 0 ? '+' : '-'\n    const imagFactor =\n      format.allowAbbreviation && Math.abs(Math.abs(this.imag) - 1) <= format.maxAbbreviationError\n        ? ''\n        : format.formatFloat(Math.abs(this.imag))\n    const prefix = format.allowAbbreviation || format.fixedDigits === undefined || this.real < 0 ? '' : '+'\n    return `${prefix + format.formatFloat(this.real) + separator + imagFactor}i`\n  }\n}\n", "export const Config = {\n  MAX_QUBIT_COUNT: 16\n} as const\n", "/**\n * Emit a custom event\n *\n * @param type    The event type\n * @param detail  Any details to pass along with the event\n * @param element The element to attach the event to\n */\nexport function emitEvent(type: string, detail = {}, element: Node = document): boolean {\n  const event = new CustomEvent(type, {\n    bubbles: true,\n    cancelable: true,\n    detail\n  })\n\n  return element.dispatchEvent(event)\n}\n", "/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function hasOwnProperty<K extends PropertyKey>(obj: unknown, key: K): obj is Record<K, unknown> {\n  return obj !== null && obj !== undefined && key in (obj as Record<string, unknown>)\n}\n\nexport type ArrayIsh =\n  | unknown[]\n  | Float32Array\n  | Float64Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Uint8Array\n  | Uint16Array\n  | Uint32Array\n  | Uint8ClampedArray\n\nconst GENERIC_ARRAY_TYPES = [\n  Float32Array,\n  Float64Array,\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray\n]\n\nexport function equate(subject: unknown, other: unknown): boolean {\n  if (subject === other || (isExactlyNaN(subject) && isExactlyNaN(other))) {\n    return true\n  }\n\n  const customEquality = tryEquateCustom(subject, other)\n  if (customEquality !== undefined) {\n    return customEquality\n  }\n  if (isAtomic(subject) || isAtomic(other) || !eqType(subject, other)) {\n    return false\n  }\n\n  if (subject instanceof Map && other instanceof Map) {\n    return equateMaps(subject, other)\n  }\n  if (subject instanceof Set && other instanceof Set) {\n    return equateSets(subject, other)\n  }\n  if (isIndexable(subject) && isIndexable(other)) {\n    return equateIndexables(subject, other)\n  }\n\n  return equateObjects(subject, other)\n}\n\nfunction isIndexable(value: unknown): value is ArrayIsh {\n  return Array.isArray(value) || !GENERIC_ARRAY_TYPES.every(t => !(value instanceof t))\n}\n\nfunction isExactlyNaN(v: unknown) {\n  return typeof v === 'number' && isNaN(v)\n}\n\nfunction tryEquateCustom(subject: unknown, other: unknown): boolean | undefined {\n  if (!isAtomic(subject) && hasOwnProperty(subject, 'isEqualTo') && typeof subject.isEqualTo === 'function') {\n    return subject.isEqualTo(other) as boolean\n  }\n  if (!isAtomic(other) && hasOwnProperty(other, 'isEqualTo') && typeof other.isEqualTo === 'function') {\n    return other.isEqualTo(subject) as boolean\n  }\n  return undefined\n}\n\ntype Atomic = null | undefined | string | number | boolean\n\nfunction isAtomic(value: unknown): value is Atomic {\n  return (\n    value === null ||\n    value === undefined ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\nfunction equateMaps(subject: Map<unknown, unknown>, other: Map<unknown, unknown>) {\n  if (subject.size !== other.size) {\n    return false\n  }\n  for (const [k, v] of subject) {\n    if (!other.has(k)) {\n      return false\n    }\n    const otherV = other.get(k)\n    if (!equate(v, otherV)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction equateSets(subject: Set<unknown>, other: Set<unknown>) {\n  if (subject.size !== other.size) {\n    return false\n  }\n  for (const k of subject) {\n    if (!other.has(k)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction eqType(subject: unknown, other: unknown): boolean {\n  return typeof subject === typeof other\n}\n\nfunction equateIndexables(subject: ArrayIsh, other: ArrayIsh) {\n  if (subject.length !== other.length) {\n    return false\n  }\n  for (let i = 0; i < subject.length; i++) {\n    if (!equate(subject[i], other[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction objectKeys(obj: unknown) {\n  const result = new Set<PropertyKey>()\n  for (const k in obj as Record<PropertyKey, unknown>) {\n    if (hasOwnProperty(obj, k)) {\n      result.add(k)\n    }\n  }\n  return result\n}\n\nfunction equateObjects(subject: unknown, other: unknown) {\n  const keys = objectKeys(subject)\n  if (!equateSets(keys, objectKeys(other))) {\n    return false\n  }\n\n  for (const k of keys) {\n    if (k === Symbol.iterator) {\n      continue\n    }\n    if (!equate((subject as Record<string, unknown>)[k as string], (other as Record<string, unknown>)[k as string])) {\n      return false\n    }\n  }\n\n  const hasSubjectIter = hasOwnProperty(subject, Symbol.iterator)\n  const hasOtherIter = hasOwnProperty(other, Symbol.iterator)\n  if (hasSubjectIter !== hasOtherIter) {\n    return false\n  }\n  if (hasSubjectIter && hasOtherIter) {\n    if (!equateIterables(subject as Iterable<unknown>, other as Iterable<unknown>)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction equateIterables(subject: Iterable<unknown>, other: Iterable<unknown>) {\n  const otherIter = other[Symbol.iterator]()\n  for (const subjectItem of subject) {\n    const otherItemDone = otherIter.next()\n    if (otherItemDone.done || !equate(subjectItem, otherItemDone.value)) {\n      return false\n    }\n  }\n  return otherIter.next().done\n}\n", "export const SerializedAntiControlGateType = '\u25E6'\n\nexport type SerializedAntiControlGate = {\n  type: typeof SerializedAntiControlGateType\n  targets: number[]\n}\n", "export const SerializedBlochDisplayType = 'Bloch'\n\nexport type SerializedBlochDisplay = {\n  type: typeof SerializedBlochDisplayType\n  targets: number[]\n}\n", "export const SerializedControlGateType = '\u2022'\n\nexport type SerializedControlGate = {\n  type: typeof SerializedControlGateType\n  targets: number[]\n}\n", "export const SerializedHGateType = 'H'\n\nexport type SerializedHGate = {\n  type: typeof SerializedHGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "export const SerializedMeasurementGateType = 'Measure'\n\nexport type SerializedMeasurementGate = {\n  type: typeof SerializedMeasurementGateType\n  targets: number[]\n  flag?: string\n}\n", "export const SerializedPhaseGateType = 'P'\n\nexport type SerializedPhaseGate = {\n  type: typeof SerializedPhaseGateType\n  angle?: string\n  targets: number[]\n  controls?: number[]\n  if?: string\n}\n", "import {ResizeableSpan} from './numeric-range'\n\nexport const SerializedQftDaggerGateType = 'QFT\u2020'\n\nexport type SerializedQftDaggerGate = {\n  type: typeof SerializedQftDaggerGateType\n  span: ResizeableSpan\n  targets: number[]\n}\n", "import {ResizeableSpan} from './numeric-range'\n\nexport const SerializedQftGateType = 'QFT'\n\nexport type SerializedQftGate = {\n  type: typeof SerializedQftGateType\n  span: ResizeableSpan\n  targets: number[]\n}\n", "export const SerializedRnotGateType = 'X^\u00BD'\n\nexport type SerializedRnotGate = {\n  type: typeof SerializedRnotGateType\n  targets: number[]\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedRxGateType = 'Rx'\n\nexport type SerializedRxGate = {\n  type: typeof SerializedRxGateType\n  targets: number[]\n  angle?: string\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedRyGateType = 'Ry'\n\nexport type SerializedRyGate = {\n  type: typeof SerializedRyGateType\n  targets: number[]\n  angle?: string\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedRzGateType = 'Rz'\n\nexport type SerializedRzGate = {\n  type: typeof SerializedRzGateType\n  targets: number[]\n  angle?: string\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedSwapGateType = 'Swap'\n\nexport type SerializedSwapGate = {\n  type: typeof SerializedSwapGateType\n  targets: [number, number]\n  controls?: number[]\n}\n", "export const SerializedTGateType = 'T'\n\nexport type SerializedTGate = {\n  type: typeof SerializedTGateType\n  targets: number[]\n  controls?: number[]\n  if?: string\n}\n", "export const SerializedWrite0GateType = '|0>'\nexport const SerializedWrite1GateType = '|1>'\n\nexport type SerializedWriteGate = {\n  type: typeof SerializedWrite0GateType | typeof SerializedWrite1GateType\n  targets: number[]\n}\n", "export const SerializedXGateType = 'X'\n\nexport type SerializedXGate = {\n  type: typeof SerializedXGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "export const SerializedYGateType = 'Y'\n\nexport type SerializedYGate = {\n  type: typeof SerializedYGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "export const SerializedZGateType = 'Z'\n\nexport type SerializedZGate = {\n  type: typeof SerializedZGateType\n  targets: number[]\n  controls?: number[]\n  antiControls?: number[]\n  if?: string\n}\n", "import { Simulator } from '@qni/simulator'\nimport { Util } from '@qni/common'\n\nlet resultCache = {}\n\nfunction runSimulator(e) {\n  const circuitJson = e.data.circuitJson\n  const qubitCount = e.data.qubitCount\n  const stepIndex = e.data.stepIndex\n  const steps = e.data.steps\n  const targets = e.data.targets\n  const invalidateCaches = e.data.invalidateCaches\n  const simulator = new Simulator('0'.repeat(qubitCount))\n\n  Util.notNull(qubitCount)\n  Util.notNull(stepIndex)\n  Util.notNull(steps)\n  Util.notNull(targets)\n\n  // const s_time = new Date()\n\n  if (resultCache[circuitJson] === undefined || invalidateCaches) {\n    resultCache = {}\n    resultCache[circuitJson] = {}\n  }\n\n  // let cacheHit = false\n\n  for (const [i, operations] of steps.entries()) {\n    let stepResult = {}\n\n    if (resultCache[circuitJson][i] === undefined) {\n      resultCache[circuitJson][i] = {}\n    }\n    const cachedStepResult = resultCache[circuitJson][i]\n\n    if (\n      cachedStepResult === undefined ||\n      cachedStepResult.targets === undefined ||\n      cachedStepResult.targets.length < targets.length\n    ) {\n      // cacheHit = false\n\n      simulator.runStep(operations)\n\n      const allAmplitudes = simulator.state.matrix.clone()\n      const blochVectors = Object.assign({}, simulator.blochVectors)\n      const measuredBits = Object.assign({}, simulator.measuredBits)\n      const flags = Object.assign({}, simulator.flags)\n\n      resultCache[circuitJson][i] = {\n        type: 'step',\n        step: i,\n        amplitudes: allAmplitudes,\n        targets,\n        blochVectors,\n        measuredBits,\n        flags,\n      }\n\n      if (i === stepIndex) {\n        const amplitudes = pickTargetAmplitudes(targets, allAmplitudes)\n\n        stepResult = {\n          type: 'step',\n          step: i,\n          amplitudes,\n          blochVectors,\n          measuredBits,\n          flags,\n        }\n      } else {\n        stepResult = {\n          type: 'step',\n          step: i,\n          amplitudes: [],\n          blochVectors,\n          measuredBits,\n          flags,\n        }\n      }\n    } else {\n      // cacheHit = true\n\n      stepResult = {\n        type: 'step',\n        step: i,\n        amplitudes: [],\n        blochVectors: cachedStepResult.blochVectors,\n        measuredBits: cachedStepResult.measuredBits,\n        flags: cachedStepResult.flags,\n      }\n\n      if (i === stepIndex) {\n        stepResult.amplitudes = pickTargetAmplitudes(targets, cachedStepResult.amplitudes)\n      }\n    }\n\n    self.postMessage(stepResult)\n  }\n\n  // const e_time = new Date()\n  // const diff = e_time.getTime() - s_time.getTime()\n  // const cacheDesc = cacheHit ? \"\uD83C\uDFAF CACHE HIT\" : \"\uD83D\uDCA6 CACHE MISS\"\n  // console.log(`\u23F1 simulation took ${diff} msec (${cacheDesc})`)\n\n  self.postMessage({ type: 'finish' })\n}\n\nconst pickTargetAmplitudes = (targets, amplitudes) => {\n  return targets.reduce((map, each) => {\n    if (each >= amplitudes.height) {\n      map[each] = [0, 0]\n    } else {\n      const c = amplitudes.cell(0, each)\n      map[each] = [c.real, c.imag]\n    }\n    return map\n  }, {})\n}\n\nself.addEventListener('message', runSimulator)\n"],
  "mappings": "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",
  "names": []
}
