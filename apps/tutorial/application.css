/*
! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: /*!*/ /*!*/ 0 0 0 0px #fff, /*!*/ /*!*/ 0 0 0 calc(1px + 0px) #2563eb, var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple] {
  background-image: none;
  background-image: initial;
  background-position: 0 0;
  background-position: initial;
  background-repeat: repeat;
  background-repeat: initial;
  background-size: auto auto;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: inherit;
          print-color-adjust: inherit;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: /*!*/ /*!*/ 0 0 0 2px #fff, /*!*/ /*!*/ 0 0 0 calc(2px + 2px) #2563eb, var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;
  background: initial;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: inherit;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-neutral {
  --tw-prose-body: #404040;
  --tw-prose-headings: #171717;
  --tw-prose-lead: #525252;
  --tw-prose-links: #171717;
  --tw-prose-bold: #171717;
  --tw-prose-counters: #737373;
  --tw-prose-bullets: #d4d4d4;
  --tw-prose-hr: #e5e5e5;
  --tw-prose-quotes: #171717;
  --tw-prose-quote-borders: #e5e5e5;
  --tw-prose-captions: #737373;
  --tw-prose-code: #171717;
  --tw-prose-pre-code: #e5e5e5;
  --tw-prose-pre-bg: #262626;
  --tw-prose-th-borders: #d4d4d4;
  --tw-prose-td-borders: #e5e5e5;
  --tw-prose-invert-body: #d4d4d4;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #a3a3a3;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #a3a3a3;
  --tw-prose-invert-bullets: #525252;
  --tw-prose-invert-hr: #404040;
  --tw-prose-invert-quotes: #f5f5f5;
  --tw-prose-invert-quote-borders: #404040;
  --tw-prose-invert-captions: #a3a3a3;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d4d4d4;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #525252;
  --tw-prose-invert-td-borders: #404040;
}

/*
! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: /*!*/ /*!*/ 0 0 0 0px #fff, /*!*/ /*!*/ 0 0 0 calc(1px + 0px) #2563eb, var(--tw-shadow);
  box-shadow: var(--tw-empty, ) 0 0 0 0px #fff, var(--tw-empty, ) 0 0 0 calc(1px + 0px) #2563eb, var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
}

[multiple] {
  background-image: none;
  background-image: initial;
  background-position: 0 0;
  background-position: initial;
  background-repeat: repeat;
  background-repeat: initial;
  background-size: auto auto;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: inherit;
  print-color-adjust: inherit;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: /*!*/ /*!*/ 0 0 0 2px #fff, /*!*/ /*!*/ 0 0 0 calc(2px + 2px) #2563eb, var(--tw-shadow);
  box-shadow: var(--tw-empty, ) 0 0 0 2px #fff, var(--tw-empty, ) 0 0 0 calc(2px + 2px) #2563eb, var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;
  background: initial;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: inherit;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

/* top label */

/* top label over wire */

/* bottom label */

/* top label */

/* top label over wire */

/* bottom label */

:root {
  /* Sizing */
  --qni-semantic-size-qpu-operation-base-½: 1rem;
  --qni-semantic-size-qpu-operation-base-¾: 1.5rem;
  --qni-semantic-size-qpu-operation-xs: 1rem;
  --qni-semantic-size-qpu-operation-sm: 1.5rem;
  --qni-semantic-size-qpu-operation-base: 2rem;
  --qni-semantic-size-qpu-operation-lg: 2.5rem;
  --qni-semantic-size-qpu-operation-xl: 3rem;
  --qni-semantic-size-qpu-operation-2xl: 4rem;
  --qni-semantic-size-qpu-operation-1qubit: var(--qni-semantic-size-qpu-operation-base);
  --qni-semantic-size-qpu-operation-2qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 2 + var(--qni-semantic-size-qpu-operation-base-½)
  );
  --qni-semantic-size-qpu-operation-3qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 3 + var(--qni-semantic-size-qpu-operation-base-½) * 2
  );
  --qni-semantic-size-qpu-operation-4qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 4 + var(--qni-semantic-size-qpu-operation-base-½) * 3
  );
  --qni-semantic-size-qpu-operation-5qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 5 + var(--qni-semantic-size-qpu-operation-base-½) * 4
  );
  --qni-semantic-size-qpu-operation-6qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 6 + var(--qni-semantic-size-qpu-operation-base-½) * 5
  );
  --qni-semantic-size-qpu-operation-7qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 7 + var(--qni-semantic-size-qpu-operation-base-½) * 6
  );
  --qni-semantic-size-qpu-operation-8qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 8 + var(--qni-semantic-size-qpu-operation-base-½) * 7
  );
  --qni-semantic-size-qpu-operation-9qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 9 + var(--qni-semantic-size-qpu-operation-base-½) * 8
  );
  --qni-semantic-size-qpu-operation-10qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 10 + var(--qni-semantic-size-qpu-operation-base-½) * 9
  );
  --qni-semantic-size-qpu-operation-11qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 11 + var(--qni-semantic-size-qpu-operation-base-½) * 10
  );
  --qni-semantic-size-qpu-operation-12qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 12 + var(--qni-semantic-size-qpu-operation-base-½) * 11
  );
  --qni-semantic-size-qpu-operation-13qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 13 + var(--qni-semantic-size-qpu-operation-base-½) * 12
  );
  --qni-semantic-size-qpu-operation-14qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 14 + var(--qni-semantic-size-qpu-operation-base-½) * 13
  );
  --qni-semantic-size-qpu-operation-15qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 15 + var(--qni-semantic-size-qpu-operation-base-½) * 14
  );
  --qni-semantic-size-qpu-operation-16qubit: calc(
    var(--qni-semantic-size-qpu-operation-base) * 16 + var(--qni-semantic-size-qpu-operation-base-½) * 15
  );
  /* Spacing */
  --qni-semantic-spacing-outline-gap: 0.125rem;
  --qni-semantic-spacing-element-overlap: calc(-1 * 0.5rem);
  /* Color */
  --qni-semantic-color-primary: #10b981;
  --qni-semantic-fill-color-primary: var(--qni-semantic-color-primary);
  --qni-semantic-color-intermediate: #a855f7;
  --qni-semantic-color-intermediate-light: #c084fc;
  --qni-semantic-border-color-intermediate: var(--qni-semantic-color-intermediate);
  --qni-semantic-fill-color-intermediate: var(--qni-semantic-color-intermediate);
  --qni-semantic-color-on: #0ea5e9;
  --qni-semantic-fill-color-on: var(--qni-semantic-color-on);
  --qni-semantic-color-off: #ef4444;
  --qni-semantic-fill-color-disabled: #71717a;
  --qni-semantic-border-color-hover: #d4d4d8;
  --qni-semantic-color-active: var(--qni-semantic-color-on);
  --qni-semantic-border-color-active: var(--qni-semantic-color-active);
  --qni-semantic-color-icon-inverse: #fff;
  /* Border radius */
  --qni-semantic-radius-default: 0.25rem;
  --qni-semantic-radius-outline: 0.375rem;
  --qni-semantic-radius-circular: 9999px;
  /* Border width */
  --qni-semantic-border-width-0: 0px;
  --qni-semantic-border-width-outline: 2px;
}

.tippy-box{
  border:1px transparent
}

.tippy-box[data-placement^=top]>.tippy-arrow:after{
  border-top-color:inherit;
  border-width:8px 8px 0;
  bottom:-8px;
  left:0
}

.tippy-box[data-placement^=bottom]>.tippy-arrow:after{
  border-bottom-color:inherit;
  border-width:0 8px 8px;
  top:-8px;
  left:0
}

.tippy-box[data-placement^=left]>.tippy-arrow:after{
  border-left-color:inherit;
  border-width:8px 0 8px 8px;
  right:-8px;
  top:0
}

.tippy-box[data-placement^=right]>.tippy-arrow:after{
  border-width:8px 8px 8px 0;
  left:-8px;
  top:0;
  border-right-color:inherit
}

.tippy-box[data-placement^=top]>.tippy-svg-arrow>svg:first-child:not(:last-child){
  top:17px
}

.tippy-box[data-placement^=bottom]>.tippy-svg-arrow>svg:first-child:not(:last-child){
  bottom:17px
}

.tippy-box[data-placement^=left]>.tippy-svg-arrow>svg:first-child:not(:last-child){
  left:12px
}

.tippy-box[data-placement^=right]>.tippy-svg-arrow>svg:first-child:not(:last-child){
  right:12px
}

.tippy-arrow{
  border-color:inherit
}

.tippy-arrow:after{
  content:"";
  z-index:-1;
  position:absolute;
  border-color:transparent;
  border-style:solid
}

.tippy-box[data-placement^=top]>.tippy-svg-arrow{
  bottom:0
}

.tippy-box[data-placement^=top]>.tippy-svg-arrow:after,.tippy-box[data-placement^=top]>.tippy-svg-arrow>svg{
  top:16px;
  transform:rotate(180deg)
}

.tippy-box[data-placement^=bottom]>.tippy-svg-arrow{
  top:0
}

.tippy-box[data-placement^=bottom]>.tippy-svg-arrow>svg{
  bottom:16px
}

.tippy-box[data-placement^=left]>.tippy-svg-arrow{
  right:0
}

.tippy-box[data-placement^=left]>.tippy-svg-arrow:after,.tippy-box[data-placement^=left]>.tippy-svg-arrow>svg{
  transform:rotate(90deg);
  top:calc(50% - 3px);
  left:11px
}

.tippy-box[data-placement^=right]>.tippy-svg-arrow{
  left:0
}

.tippy-box[data-placement^=right]>.tippy-svg-arrow:after,.tippy-box[data-placement^=right]>.tippy-svg-arrow>svg{
  transform:rotate(-90deg);
  top:calc(50% - 3px);
  right:11px
}

.tippy-svg-arrow{
  width:16px;
  height:16px;
  fill:#333;
  text-align:left;
  text-align:initial
}

.tippy-svg-arrow,.tippy-svg-arrow>svg{
  position:absolute
}

.tippy-box[data-animation=fade][data-state=hidden]{
  opacity:0
}

[data-tippy-root]{
  max-width:calc(100vw - 10px)
}

.tippy-box{
  position:relative;
  background-color:#333;
  color:#fff;
  border-radius:4px;
  font-size:14px;
  line-height:1.4;
  white-space:normal;
  outline:0;
  transition-property:transform,visibility,opacity
}

.tippy-box[data-placement^=top]>.tippy-arrow{
  bottom:0
}

.tippy-box[data-placement^=top]>.tippy-arrow:before{
  bottom:-7px;
  left:0;
  border-width:8px 8px 0;
  border-top-color:currentColor;
  border-top-color:initial;
  transform-origin:center top
}

.tippy-box[data-placement^=bottom]>.tippy-arrow{
  top:0
}

.tippy-box[data-placement^=bottom]>.tippy-arrow:before{
  top:-7px;
  left:0;
  border-width:0 8px 8px;
  border-bottom-color:currentColor;
  border-bottom-color:initial;
  transform-origin:center bottom
}

.tippy-box[data-placement^=left]>.tippy-arrow{
  right:0
}

.tippy-box[data-placement^=left]>.tippy-arrow:before{
  border-width:8px 0 8px 8px;
  border-left-color:currentColor;
  border-left-color:initial;
  right:-7px;
  transform-origin:center left
}

.tippy-box[data-placement^=right]>.tippy-arrow{
  left:0
}

.tippy-box[data-placement^=right]>.tippy-arrow:before{
  left:-7px;
  border-width:8px 8px 8px 0;
  border-right-color:currentColor;
  border-right-color:initial;
  transform-origin:center right
}

.tippy-box[data-inertia][data-state=visible]{
  transition-timing-function:cubic-bezier(.54,1.5,.38,1.11)
}

.tippy-arrow{
  width:16px;
  height:16px;
  color:#333
}

.tippy-arrow:before{
  content:"";
  position:absolute;
  border-color:transparent;
  border-style:solid
}

.tippy-content{
  position:relative;
  padding:5px 9px;
  z-index:1
}

.tippy-box[data-theme~='qni'] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / 1);
  border-width: 2px;
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / 1);
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / 1);
  font-size: 0.75rem;
  line-height: 1rem;
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='qni'] {
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    border-color: rgb(107 114 128 / var(--tw-border-opacity));
    color: rgb(55 65 81 / var(--tw-text-opacity));
  }
}

@media (min-width: 640px) {
  .tippy-box[data-theme~='qni'] {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

/* The border */

.tippy-box[data-theme~='qni'] .tippy-svg-arrow > svg:first-child {
  fill: #6b7280;
}

/* The fill */

.tippy-box[data-theme~='qni'] .tippy-svg-arrow > svg:last-child {
  fill: #fff;
}

.tippy-box[data-theme~='qni'][data-placement^='top'] > .tippy-svg-arrow svg:first-child {
  top: 18px;
}

.tippy-box[data-theme~='qni'][data-placement^='bottom'] > .tippy-svg-arrow svg:first-child {
  bottom: 18px;
}

.tippy-box[data-theme~='qni'][data-placement^='left'] > .tippy-svg-arrow svg:first-child {
  left: 13px;
}

.tippy-box[data-theme~='qni'][data-placement^='right'] > .tippy-svg-arrow svg:first-child {
  right: 13px;
}

.tippy-box[data-theme~='qni'] header p {
  line-height: 1.25;
}

.tippy-box[data-theme~='operation-menu'] {
  background-color: transparent;
}

.tippy-box[data-theme~='operation-inspector'] {
  border-radius: 1rem;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / 1);
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='operation-inspector'] {
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }
}

angle-slider {
  height: 0.25rem;
  width: 100%;
  margin: 0.5rem;
  border-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  angle-slider {
    background-color: rgb(212 212 212 / var(--tw-bg-opacity));
  }
}

/* the slider handle */

angle-slider::before {
  height: 1rem;
  width: 1rem;
  margin-top: -0.625rem;
  margin-left: -0.75rem;
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / 1);
  border-radius: 9999px;
  background-clip: padding-box;
  box-sizing: content-box;
  border-width: 4px;
  border-color: rgb(23 23 23 / 0.1);
  --tw-border-opacity: 0.1;
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  angle-slider::before {
    background-color: rgb(59 130 246 / var(--tw-bg-opacity));
    border-color: rgb(23 23 23 / var(--tw-border-opacity));
  }
}

angle-slider:hover::before {
  --tw-border-opacity: 0.2;
}

operation-inspector[data-conditional-gate-pane-disabled] #conditional-gate-pane h1 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  operation-inspector[data-conditional-gate-pane-disabled] #conditional-gate-pane h1 {
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }
}

operation-inspector[data-conditional-gate-pane-disabled] #conditional-gate-pane .pane-body {
  display: none;
}

operation-inspector[data-angle-pane-disabled] #angle-pane h1 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  operation-inspector[data-angle-pane-disabled] #angle-pane h1 {
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }
}

operation-inspector[data-angle-pane-disabled] #angle-pane .pane-body {
  display: none;
}

operation-inspector[data-conditional-flag-pane-disabled] #conditional-flag-pane h1 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  operation-inspector[data-conditional-flag-pane-disabled] #conditional-flag-pane h1 {
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }
}

operation-inspector[data-conditional-flag-pane-disabled] #conditional-flag-pane .pane-body {
  display: none;
}

.operation-menu button:disabled {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .operation-menu button:disabled {
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }
}

.operation-menu button:disabled:hover {
  background-color: transparent;
}

run-circuit-button {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

run-circuit-button[data-running] {
  cursor: wait;
}

run-circuit-button::part(body) {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: 9999px;
}

run-circuit-button::part(reload-icon),
  run-circuit-button::part(tail-spin-icon) {
  height: 1rem;
  width: 1rem;
}

@media (min-width: 640px) {
  run-circuit-button::part(reload-icon),
  run-circuit-button::part(tail-spin-icon) {
    height: 2rem;
    width: 2rem;
  }
}

run-circuit-button::part(tail-spin-icon) {
  display: none;
  stroke: currentColor;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  run-circuit-button::part(tail-spin-icon) {
    color: rgb(55 65 81 / var(--tw-text-opacity));
  }
}

@media (min-width: 640px) {
  run-circuit-button::part(tail-spin-icon) {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / 1);
  }

  @supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
    run-circuit-button::part(tail-spin-icon) {
      color: rgb(255 255 255 / var(--tw-text-opacity));
    }
  }
}

run-circuit-button[data-running] run-circuit-button::part(reload-icon) {
  display: none;
}

run-circuit-button[data-running] run-circuit-button::part(tail-spin-icon) {
  display: block;
}

/* ripple */

run-circuit-button::part(ripple) {
  background-color: rgb(255 255 255 / 0.7);
}

run-circuit-button.run-circuit-button--mobile::part(ripple) {
  background-color: rgb(168 85 247 / 0.7);
}

.tippy-box[data-theme~='tooltip'] {
  --tw-bg-opacity: 1;
  background-color: rgb(24 24 27 / 1);
  border-radius: 0.5rem;
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'] {
    background-color: rgb(24 24 27 / var(--tw-bg-opacity));
  }
}

.tippy-box[data-theme~='tooltip'] .tippy-content {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.tippy-box[data-theme~='tooltip'][data-placement^='top'] > .tippy-arrow::before {
  --tw-border-opacity: 1;
  border-top-color: rgb(24 24 27 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'][data-placement^='top'] > .tippy-arrow::before {
    border-top-color: rgb(24 24 27 / var(--tw-border-opacity));
  }
}

.tippy-box[data-theme~='tooltip'][data-placement^='bottom'] > .tippy-arrow::before {
  --tw-border-opacity: 1;
  border-bottom-color: rgb(24 24 27 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'][data-placement^='bottom'] > .tippy-arrow::before {
    border-bottom-color: rgb(24 24 27 / var(--tw-border-opacity));
  }
}

.tippy-box[data-theme~='tooltip'][data-placement^='left'] > .tippy-arrow::before {
  --tw-border-opacity: 1;
  border-left-color: rgb(24 24 27 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'][data-placement^='left'] > .tippy-arrow::before {
    border-left-color: rgb(24 24 27 / var(--tw-border-opacity));
  }
}

.tippy-box[data-theme~='tooltip'][data-placement^='right'] > .tippy-arrow::before {
  --tw-border-opacity: 1;
  border-right-color: rgb(24 24 27 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'][data-placement^='right'] > .tippy-arrow::before {
    border-right-color: rgb(24 24 27 / var(--tw-border-opacity));
  }
}

.tippy-box[data-theme~='tooltip'] header h1 {
  font-weight: 700;
  line-height: 1 !important;
  font-size: 1.125rem;
  line-height: 1.75rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'] header h1 {
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

.tippy-box[data-theme~='tooltip'] header p {
  line-height: 1 !important;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(228 228 231 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  .tippy-box[data-theme~='tooltip'] header p {
    color: rgb(228 228 231 / var(--tw-text-opacity));
  }
}

.tippy-box[data-theme~='tooltip'] header p:first-of-type {
  margin-top: 0.25rem;
}

.tippy-box[data-theme~='tooltip'] header p:nth-of-type(n + 2) {
  margin-top: 0.125rem;
}

.tippy-box[data-theme~='tooltip'] .body {
  margin-top: 1rem;
}

anti-control-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

anti-control-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

anti-control-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone anti-control-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) anti-control-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

anti-control-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

anti-control-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
}

anti-control-gate[data-grabbed] {
  cursor: grabbing;
}

anti-control-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

anti-control-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

anti-control-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

anti-control-gate[data-grabbed]::part(outline) {
  display: none;
}

anti-control-gate {
  touch-action: none;
}

circuit-editor palette-dropzone anti-control-gate,
    circuit-editor quantum-circuit:not([data-editing]) anti-control-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) anti-control-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone anti-control-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

anti-control-gate::part(icon) {
  color: #10b981;
  color: var(--qni-semantic-fill-color-primary);
}

anti-control-gate[data-disabled]:not([data-grabbed])::part(icon) {
  color: #71717a;
  color: var(--qni-semantic-fill-color-disabled);
}

bloch-display {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

bloch-display::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

bloch-display::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone bloch-display[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) bloch-display[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

bloch-display[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

bloch-display[data-grabbed] {
  cursor: grabbing;
}

bloch-display[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

bloch-display[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

bloch-display[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

bloch-display[data-grabbed]::part(outline) {
  display: none;
}

bloch-display {
  touch-action: none;
}

circuit-editor palette-dropzone bloch-display,
    circuit-editor quantum-circuit:not([data-editing]) bloch-display {
  cursor: grab;
}

quantum-circuit([data-editing]) bloch-display:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone bloch-display:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

/* 3D perspective */

bloch-display[data-size='xs']::part(perspective) {
  perspective: 2rem;
}

bloch-display[data-size='sm']::part(perspective) {
  perspective: 3rem;
}

bloch-display::part(perspective),
  bloch-display[data-size='base']::part(perspective) {
  perspective: 4rem;
}

bloch-display[data-size='lg']::part(perspective) {
  perspective: 5rem;
}

bloch-display[data-size='xl']::part(perspective) {
  perspective: 6rem;
}

/* Bloch sphere lines */

bloch-display::part(sphere-border) {
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(156 163 175 / 1);
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  bloch-display::part(sphere-border) {
    border-color: rgb(156 163 175 / var(--tw-border-opacity));
    background-color: rgb(240 253 244 / var(--tw-bg-opacity));
  }
}

bloch-display[data-grabbed]::part(sphere-border) {
  --tw-border-opacity: 1;
  border-color: rgb(168 85 247 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  bloch-display[data-grabbed]::part(sphere-border) {
    border-color: rgb(168 85 247 / var(--tw-border-opacity));
  }
}

bloch-display::part(sphere-lines) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  bloch-display::part(sphere-lines) {
    color: rgb(156 163 175 / var(--tw-text-opacity));
  }
}

bloch-display::part(vector-line-rect) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  bloch-display::part(vector-line-rect) {
    background-color: rgb(17 24 39 / var(--tw-bg-opacity));
  }
}

/* Bloch vector end */

bloch-display::part(vector-end-circle) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  bloch-display::part(vector-end-circle) {
    background-color: rgb(239 68 68 / var(--tw-bg-opacity));
  }
}

bloch-display[data-d='0']::part(vector-end-circle) {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  bloch-display[data-d='0']::part(vector-end-circle) {
    background-color: rgb(59 130 246 / var(--tw-bg-opacity));
  }
}

bloch-display::part(vector-end-circle) {
  height: 6px;
  width: 6px;
}

bloch-display[data-size='xs']::part(vector-end-circle) {
  height: 4px;
  width: 4px;
}

bloch-display[data-size='lg']::part(vector-end-circle),
  bloch-display[data-size='xl']::part(vector-end-circle) {
  height: 8px;
  width: 8px;
}

circle-notation.animate {
  animation: 0.4s ease-out 0s 1 normal forwards running circle-notation-slide-in;
}

@media (min-width: 640px) {
  circle-notation.animate {
    animation-name: none
  }
}

@keyframes circle-notation-slide-in {
  0% {
    transform: translateY(0px);
  }

  50% {
    transform: translateY(256px);
  }

  100% {
    transform: translateY(240px);
  }
}

circuit-dropzone {
  /* Size */
  height: 3rem;
  width: 2rem;
}

@media (min-width: 640px) {
  circuit-dropzone {
    height: 2rem;
    width: 3rem;
  }
}

circuit-dropzone::part(body) {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-direction: row-reverse;
}

@media (min-width: 640px) {
  circuit-dropzone::part(body) {
    flex-direction: column;
  }
}

/* Wires */

circuit-dropzone::part(wires) {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  height: 100%;
  width: 100%;
  overflow: visible;
  transform-origin: center;
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  circuit-dropzone::part(wires) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

circuit-step.no-rotation circuit-dropzone::part(wires) {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

circuit-dropzone[data-shadow]::part(wires) {
  display: none;
}

circuit-dropzone::part(connect-top),
  circuit-dropzone::part(connect-bottom) {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  circuit-dropzone::part(connect-top),
  circuit-dropzone::part(connect-bottom) {
    color: rgb(16 185 129 / var(--tw-text-opacity));
  }
}

circuit-dropzone::part(wire-input),
  circuit-dropzone::part(wire-output) {
  --tw-text-opacity: 1;
  color: rgb(229 229 229 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  circuit-dropzone::part(wire-input),
  circuit-dropzone::part(wire-output) {
    color: rgb(229 229 229 / var(--tw-text-opacity));
  }
}

circuit-dropzone::part(wire-input) {
  transform: translateX(-25%) scaleX(1.5);
  transform-origin: left;
}

circuit-dropzone::part(wire-output) {
  transform: translateX(25%) scaleX(1.5);
  transform-origin: right;
}

@media (min-width: 640px) {
  circuit-dropzone::part(wire-input),
    circuit-dropzone::part(wire-output) {
    transform: none;
  }
}

circuit-dropzone[data-connect-top]::part(connect-top) {
  transform-origin: center;
  transform: scaleY(1.8);
}

circuit-dropzone[data-connect-bottom]::part(connect-bottom) {
  transform-origin: center;
  transform: scaleY(1.8);
}

circuit-dropzone[data-input-wire-quantum]::part(wire-input),
  circuit-dropzone[data-output-wire-quantum]::part(wire-output) {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  circuit-dropzone[data-input-wire-quantum]::part(wire-input),
  circuit-dropzone[data-output-wire-quantum]::part(wire-output) {
    color: rgb(23 23 23 / var(--tw-text-opacity));
  }
}

circuit-dropzone[data-operation-name='write-gate']::part(wire-input),
  circuit-dropzone[data-operation-name='measurement-gate']::part(wire-input) {
  transform: scaleX(0.75) translateX(-33.3%);
}

@media (min-width: 640px) {
  circuit-dropzone[data-operation-name='write-gate']::part(wire-input),
  circuit-dropzone[data-operation-name='measurement-gate']::part(wire-input) {
    transform: scaleX(0.33) translateX(0)
  }
}

circuit-dropzone[data-operation-name='write-gate']::part(wire-output),
  circuit-dropzone[data-operation-name='measurement-gate']::part(wire-output) {
  transform: scaleX(0.75) translateX(33.3%);
}

@media (min-width: 640px) {
  circuit-dropzone[data-operation-name='write-gate']::part(wire-output),
  circuit-dropzone[data-operation-name='measurement-gate']::part(wire-output) {
    transform: scaleX(0.33) translateX(0)
  }
}

circuit-dropzone[data-operation-name='spacer-gate']::part(wire-input),
  circuit-dropzone[data-operation-name='spacer-gate']::part(wire-output) {
  display: none;
}

circuit-editor {
  display: inline-block;
}

circuit-step {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: row-reverse;
}

@media (min-width: 640px) {
  circuit-step {
    flex-direction: column;
  }
}

circuit-step > :not([hidden]) ~ :not([hidden]) {
  margin-right: calc(1rem * 1);
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - 1));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  --tw-space-y-reverse: 0;
  margin-top: calc(0px * calc(1 - 0));
  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0px * 0);
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
  --tw-space-x-reverse: 1;
}

@media (min-width: 640px) {
  circuit-step > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0px * 0);
    margin-right: calc(0px * var(--tw-space-x-reverse));
    margin-left: calc(0px * calc(1 - 0));
    margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - 0));
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * 0);
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
  }
}

circuit-step {
  padding-top: 0px;
  padding-bottom: 0px;
  padding-left: 2rem;
  padding-right: 2rem;
}

@media (min-width: 640px) {
  circuit-step {
    padding-top: 2rem;
    padding-bottom: 2rem;
    padding-left: 0px;
    padding-right: 0px;
  }
}

circuit-step.no-rotation {
  flex-direction: column;
  align-items: flex-start;
}

circuit-step.no-rotation > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0px * 0);
  margin-right: calc(0px * var(--tw-space-x-reverse));
  margin-left: calc(0px * calc(1 - 0));
  margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}

circuit-step.no-rotation {
  padding: 0px;
}

circuit-step[data-shadow] {
  height: 0px;
}

@media (min-width: 640px) {
  circuit-step[data-shadow] {
    height: auto;
    width: 0px;
  }
}

circuit-step[data-shadow]::after {
  margin-bottom: -1.5rem;
}

@media (min-width: 640px) {
  circuit-step[data-shadow]::after {
    margin-bottom: 0px;
  }
}

circuit-step[data-shadow]::after {
  margin-right: 0px;
}

@media (min-width: 640px) {
  circuit-step[data-shadow]::after {
    margin-right: -1.5rem;
  }
}

circuit-step::after {
  background-color: #0ea5e9;
  background-color: var(--qni-semantic-fill-color-on);
  position: absolute;
  z-index: 10;
  opacity: 0;
  left: 0px;
}

@media (min-width: 640px) {
  circuit-step::after {
    left: auto;
    top: 0px;
  }
}

circuit-step::after {
  bottom: -0.125rem;
}

@media (min-width: 640px) {
  circuit-step::after {
    bottom: 0px;
  }
}

circuit-step::after {
  right: 0px;
}

@media (min-width: 640px) {
  circuit-step::after {
    right: -0.125rem;
  }
}

circuit-step::after {
  width: 100%;
}

@media (min-width: 640px) {
  circuit-step::after {
    width: 0.25rem;
  }
}

circuit-step::after {
  height: 0.25rem;
}

@media (min-width: 640px) {
  circuit-step::after {
    height: 100%;
  }
}

circuit-step::after {
  content: '';
}

circuit-step[data-active]::after {
  opacity: 0.3;
}

circuit-step[data-breakpoint]::after {
  opacity: 1;
}

control-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

control-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

control-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone control-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) control-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

control-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

control-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
}

control-gate[data-grabbed] {
  cursor: grabbing;
}

control-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

control-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

control-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

control-gate[data-grabbed]::part(outline) {
  display: none;
}

control-gate {
  touch-action: none;
}

circuit-editor palette-dropzone control-gate,
    circuit-editor quantum-circuit:not([data-editing]) control-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) control-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone control-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

control-gate::part(icon) {
  color: #10b981;
  color: var(--qni-semantic-fill-color-primary);
}

control-gate[data-disabled]:not([data-grabbed])::part(icon) {
  color: #71717a;
  color: var(--qni-semantic-fill-color-disabled);
}

h-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

h-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

h-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone h-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) h-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

h-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

h-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

h-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

h-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

h-gate[data-grabbed] {
  cursor: grabbing;
}

h-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

h-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

h-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

h-gate[data-grabbed]::part(outline) {
  display: none;
}

h-gate {
  touch-action: none;
}

circuit-editor palette-dropzone h-gate,
    circuit-editor quantum-circuit:not([data-editing]) h-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) h-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone h-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

h-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone h-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone h-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) h-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] h-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) h-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

html[data-grabbing] {
  cursor: grabbing;
}

html[data-resizing] {
  cursor: ns-resize;
}

measurement-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

measurement-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

measurement-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone measurement-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) measurement-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

measurement-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

measurement-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
}

measurement-gate[data-grabbed] {
  cursor: grabbing;
}

measurement-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

measurement-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

measurement-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

measurement-gate[data-grabbed]::part(outline) {
  display: none;
}

measurement-gate {
  touch-action: none;
}

circuit-editor palette-dropzone measurement-gate,
    circuit-editor quantum-circuit:not([data-editing]) measurement-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) measurement-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone measurement-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

measurement-gate[data-flag]::before {
  display: none;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  position: absolute;
}

circuit-dropzone measurement-gate[data-flag]:not([data-flag=''])::before {
  display: flex;
  justify-content: center;
  content: attr(data-flag) '';
}

circuit-dropzone:not([data-connect-top]) measurement-gate[data-flag]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] measurement-gate[data-flag]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
      -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) measurement-gate[data-flag]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

measurement-gate::part(icon) {
  color: #a855f7;
  color: var(--qni-semantic-color-intermediate);
}

circuit-dropzone measurement-gate[data-snapped]::part(icon) {
  transform-origin: center;
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  circuit-dropzone measurement-gate[data-snapped]::part(icon) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

measurement-gate[data-value='0']::part(icon),
  measurement-gate[data-value='1']::part(icon) {
  --tw-text-opacity: 1;
  color: rgb(228 228 231 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  measurement-gate[data-value='0']::part(icon),
  measurement-gate[data-value='1']::part(icon) {
    color: rgb(228 228 231 / var(--tw-text-opacity));
  }
}

measurement-gate::part(value) {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

circuit-dropzone measurement-gate[data-snapped]::part(value) {
  transform-origin: center;
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  circuit-dropzone measurement-gate[data-snapped]::part(value) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

measurement-gate::part(value)::after {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

measurement-gate[data-value='0']::part(value)::after {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / 1);
  content: '0';
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  measurement-gate[data-value='0']::part(value)::after {
    color: rgb(239 68 68 / var(--tw-text-opacity));
  }
}

measurement-gate[data-value='1']::part(value)::after {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / 1);
  content: '1';
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  measurement-gate[data-value='1']::part(value)::after {
    color: rgb(59 130 246 / var(--tw-text-opacity));
  }
}

/* data-grabbed */

measurement-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

measurement-gate[data-grabbed]::part(icon) {
  --tw-text-opacity: 1;
  color: rgb(192 132 252 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  measurement-gate[data-grabbed]::part(icon) {
    color: rgb(192 132 252 / var(--tw-text-opacity));
  }
}

measurement-gate[data-grabbed]::part(value)::after {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  measurement-gate[data-grabbed]::part(value)::after {
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

palette-dropzone {
  height: 2rem;
  width: 2rem;
  display: inline-block;
  position: static;
}

phase-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

phase-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

phase-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone phase-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) phase-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

phase-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

phase-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

phase-gate::part(body) {
  border-radius: 9999px;
  border-radius: var(--qni-semantic-radius-circular);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

phase-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

phase-gate[data-grabbed] {
  cursor: grabbing;
}

phase-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

phase-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

phase-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

phase-gate[data-grabbed]::part(outline) {
  display: none;
}

phase-gate[data-angle]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: 1rem;
  line-height: 1;
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

phase-gate:not([data-reduced-angle=''])::before {
  content: attr(data-reduced-angle) '';
}

phase-gate[data-reduced-angle='']:not([data-angle=''])::before {
  content: attr(data-angle) '';
}

phase-gate.angle-hidden::before,
    palette-dropzone phase-gate::before {
  display: none !important;
}

phase-gate[data-angle][data-size='sm']::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone:not([data-connect-top]) phase-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] phase-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) phase-gate[data-angle]::before {
  top: auto;
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.75rem;
}

phase-gate {
  touch-action: none;
}

circuit-editor palette-dropzone phase-gate,
    circuit-editor quantum-circuit:not([data-editing]) phase-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) phase-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone phase-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

phase-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone phase-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone phase-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) phase-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] phase-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) phase-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

qft-dagger-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

qft-dagger-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

qft-dagger-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone qft-dagger-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) qft-dagger-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

qft-dagger-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

qft-dagger-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

qft-dagger-gate {
  --qni-component-resize-handle-width: var(--qni-semantic-size-qpu-operation-base);
  --qni-component-resize-handle-height: var(--qni-semantic-size-qpu-operation-base-¾);
  --qni-component-resize-handle-overlap: var(--qni-semantic-spacing-element-overlap);
  --qni-component-resize-handle-fill-color: var(--qni-semantic-color-intermediate-light);
  --qni-component-resize-handle-fill-color-hovered: var(--qni-semantic-color-intermediate);
  --qni-component-resize-handle-icon-color: var(--qni-semantic-color-icon-inverse);
  --qni-component-resize-handle-radius: var(--qni-semantic-radius-default);
}

qft-dagger-gate[data-span='2'] {
  width: calc(
    2rem * 2 + 1rem
  );
  width: var(--qni-semantic-size-qpu-operation-2qubit);
}

qft-dagger-gate[data-span='2']::part(body) {
  width: calc(
    2rem * 2 + 1rem
  );
  width: var(--qni-semantic-size-qpu-operation-2qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='2'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit)
  }

  qft-dagger-gate[data-span='2']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit);
  }

  qft-dagger-gate[data-span='2'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit)
  }

  qft-dagger-gate[data-span='2']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit);
  }
}

qft-dagger-gate[data-span='3'] {
  width: calc(
    2rem * 3 + 1rem * 2
  );
  width: var(--qni-semantic-size-qpu-operation-3qubit);
}

qft-dagger-gate[data-span='3']::part(body) {
  width: calc(
    2rem * 3 + 1rem * 2
  );
  width: var(--qni-semantic-size-qpu-operation-3qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='3'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit)
  }

  qft-dagger-gate[data-span='3']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit);
  }

  qft-dagger-gate[data-span='3'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit)
  }

  qft-dagger-gate[data-span='3']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit);
  }
}

qft-dagger-gate[data-span='4'] {
  width: calc(
    2rem * 4 + 1rem * 3
  );
  width: var(--qni-semantic-size-qpu-operation-4qubit);
}

qft-dagger-gate[data-span='4']::part(body) {
  width: calc(
    2rem * 4 + 1rem * 3
  );
  width: var(--qni-semantic-size-qpu-operation-4qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='4'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit)
  }

  qft-dagger-gate[data-span='4']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit);
  }

  qft-dagger-gate[data-span='4'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit)
  }

  qft-dagger-gate[data-span='4']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit);
  }
}

qft-dagger-gate[data-span='5'] {
  width: calc(
    2rem * 5 + 1rem * 4
  );
  width: var(--qni-semantic-size-qpu-operation-5qubit);
}

qft-dagger-gate[data-span='5']::part(body) {
  width: calc(
    2rem * 5 + 1rem * 4
  );
  width: var(--qni-semantic-size-qpu-operation-5qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='5'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit)
  }

  qft-dagger-gate[data-span='5']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit);
  }

  qft-dagger-gate[data-span='5'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit)
  }

  qft-dagger-gate[data-span='5']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit);
  }
}

qft-dagger-gate[data-span='6'] {
  width: calc(
    2rem * 6 + 1rem * 5
  );
  width: var(--qni-semantic-size-qpu-operation-6qubit);
}

qft-dagger-gate[data-span='6']::part(body) {
  width: calc(
    2rem * 6 + 1rem * 5
  );
  width: var(--qni-semantic-size-qpu-operation-6qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='6'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit)
  }

  qft-dagger-gate[data-span='6']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit);
  }

  qft-dagger-gate[data-span='6'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit)
  }

  qft-dagger-gate[data-span='6']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit);
  }
}

qft-dagger-gate[data-span='7'] {
  width: calc(
    2rem * 7 + 1rem * 6
  );
  width: var(--qni-semantic-size-qpu-operation-7qubit);
}

qft-dagger-gate[data-span='7']::part(body) {
  width: calc(
    2rem * 7 + 1rem * 6
  );
  width: var(--qni-semantic-size-qpu-operation-7qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='7'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit)
  }

  qft-dagger-gate[data-span='7']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit);
  }

  qft-dagger-gate[data-span='7'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit)
  }

  qft-dagger-gate[data-span='7']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit);
  }
}

qft-dagger-gate[data-span='8'] {
  width: calc(
    2rem * 8 + 1rem * 7
  );
  width: var(--qni-semantic-size-qpu-operation-8qubit);
}

qft-dagger-gate[data-span='8']::part(body) {
  width: calc(
    2rem * 8 + 1rem * 7
  );
  width: var(--qni-semantic-size-qpu-operation-8qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='8'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit)
  }

  qft-dagger-gate[data-span='8']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit);
  }

  qft-dagger-gate[data-span='8'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit)
  }

  qft-dagger-gate[data-span='8']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit);
  }
}

qft-dagger-gate[data-span='9'] {
  width: calc(
    2rem * 9 + 1rem * 8
  );
  width: var(--qni-semantic-size-qpu-operation-9qubit);
}

qft-dagger-gate[data-span='9']::part(body) {
  width: calc(
    2rem * 9 + 1rem * 8
  );
  width: var(--qni-semantic-size-qpu-operation-9qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='9'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit)
  }

  qft-dagger-gate[data-span='9']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit);
  }

  qft-dagger-gate[data-span='9'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit)
  }

  qft-dagger-gate[data-span='9']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit);
  }
}

qft-dagger-gate[data-span='10'] {
  width: calc(
    2rem * 10 + 1rem * 9
  );
  width: var(--qni-semantic-size-qpu-operation-10qubit);
}

qft-dagger-gate[data-span='10']::part(body) {
  width: calc(
    2rem * 10 + 1rem * 9
  );
  width: var(--qni-semantic-size-qpu-operation-10qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='10'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit)
  }

  qft-dagger-gate[data-span='10']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit);
  }

  qft-dagger-gate[data-span='10'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit)
  }

  qft-dagger-gate[data-span='10']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit);
  }
}

qft-dagger-gate[data-span='11'] {
  width: calc(
    2rem * 11 + 1rem * 10
  );
  width: var(--qni-semantic-size-qpu-operation-11qubit);
}

qft-dagger-gate[data-span='11']::part(body) {
  width: calc(
    2rem * 11 + 1rem * 10
  );
  width: var(--qni-semantic-size-qpu-operation-11qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='11'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit)
  }

  qft-dagger-gate[data-span='11']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit);
  }

  qft-dagger-gate[data-span='11'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit)
  }

  qft-dagger-gate[data-span='11']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit);
  }
}

qft-dagger-gate[data-span='12'] {
  width: calc(
    2rem * 12 + 1rem * 11
  );
  width: var(--qni-semantic-size-qpu-operation-12qubit);
}

qft-dagger-gate[data-span='12']::part(body) {
  width: calc(
    2rem * 12 + 1rem * 11
  );
  width: var(--qni-semantic-size-qpu-operation-12qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='12'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit)
  }

  qft-dagger-gate[data-span='12']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit);
  }

  qft-dagger-gate[data-span='12'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit)
  }

  qft-dagger-gate[data-span='12']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit);
  }
}

qft-dagger-gate[data-span='13'] {
  width: calc(
    2rem * 13 + 1rem * 12
  );
  width: var(--qni-semantic-size-qpu-operation-13qubit);
}

qft-dagger-gate[data-span='13']::part(body) {
  width: calc(
    2rem * 13 + 1rem * 12
  );
  width: var(--qni-semantic-size-qpu-operation-13qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='13'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit)
  }

  qft-dagger-gate[data-span='13']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit);
  }

  qft-dagger-gate[data-span='13'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit)
  }

  qft-dagger-gate[data-span='13']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit);
  }
}

qft-dagger-gate[data-span='14'] {
  width: calc(
    2rem * 14 + 1rem * 13
  );
  width: var(--qni-semantic-size-qpu-operation-14qubit);
}

qft-dagger-gate[data-span='14']::part(body) {
  width: calc(
    2rem * 14 + 1rem * 13
  );
  width: var(--qni-semantic-size-qpu-operation-14qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='14'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit)
  }

  qft-dagger-gate[data-span='14']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit);
  }

  qft-dagger-gate[data-span='14'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit)
  }

  qft-dagger-gate[data-span='14']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit);
  }
}

qft-dagger-gate[data-span='15'] {
  width: calc(
    2rem * 15 + 1rem * 14
  );
  width: var(--qni-semantic-size-qpu-operation-15qubit);
}

qft-dagger-gate[data-span='15']::part(body) {
  width: calc(
    2rem * 15 + 1rem * 14
  );
  width: var(--qni-semantic-size-qpu-operation-15qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='15'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit)
  }

  qft-dagger-gate[data-span='15']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit);
  }

  qft-dagger-gate[data-span='15'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit)
  }

  qft-dagger-gate[data-span='15']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit);
  }
}

qft-dagger-gate[data-span='16'] {
  width: calc(
    2rem * 16 + 1rem * 15
  );
  width: var(--qni-semantic-size-qpu-operation-16qubit);
}

qft-dagger-gate[data-span='16']::part(body) {
  width: calc(
    2rem * 16 + 1rem * 15
  );
  width: var(--qni-semantic-size-qpu-operation-16qubit);
}

@media (min-width: 640px) {
  qft-dagger-gate[data-span='16'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit)
  }

  qft-dagger-gate[data-span='16']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit);
  }

  qft-dagger-gate[data-span='16'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit)
  }

  qft-dagger-gate[data-span='16']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit);
  }
}

qft-dagger-gate[data-resizing]::part(outline) {
  display: block;
  outline: 2px solid #a855f7;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-intermediate);
}

qft-dagger-gate::part(layout) {
  display: flex;
  flex-direction: row-reverse;
}

@media (min-width: 640px) {
  qft-dagger-gate::part(layout) {
    flex-direction: column;
  }
}

qft-dagger-gate::part(resize-handle) {
  color: var(--qni-component-resize-handle-icon-color);
  background-color: var(--qni-component-resize-handle-fill-color);
  border-radius: var(--qni-component-resize-handle-radius);
  width: var(--qni-component-resize-handle-height);
  height: var(--qni-component-resize-handle-width);
  margin-right: var(--qni-component-resize-handle-overlap);
  flex-shrink: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  cursor: ns-resize;
  z-index: 10;
}

@media (min-width: 640px) {
  qft-dagger-gate::part(resize-handle) {
    width: var(--qni-component-resize-handle-width);
    height: var(--qni-component-resize-handle-height);
    margin-right: 0;
    margin-top: var(--qni-component-resize-handle-overlap);
    flex-direction: column
  }
}

qft-dagger-gate::part(resize-handle):hover,qft-dagger-gate[data-resizing]::part(resize-handle) {
  background-color: var(--qni-component-resize-handle-fill-color-hovered);
}

qft-dagger-gate::part(resize-handle) {
  visibility: hidden;
}

quantum-circuit:not([data-editing]) circuit-dropzone qft-dagger-gate:not([data-grabbed]):hover::part(resize-handle),qft-dagger-gate[data-resizing]::part(resize-handle) {
  visibility: visible;
}

qft-dagger-gate::part(resize-handle-icon) {
  height: 100%;
  width: 100%;
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  qft-dagger-gate::part(resize-handle-icon) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

qft-dagger-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

qft-dagger-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

qft-dagger-gate[data-grabbed] {
  cursor: grabbing;
}

qft-dagger-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

qft-dagger-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

qft-dagger-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

qft-dagger-gate[data-grabbed]::part(outline) {
  display: none;
}

qft-dagger-gate {
  touch-action: none;
}

circuit-editor palette-dropzone qft-dagger-gate,
    circuit-editor quantum-circuit:not([data-editing]) qft-dagger-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) qft-dagger-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone qft-dagger-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

qft-dagger-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone qft-dagger-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone qft-dagger-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) qft-dagger-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] qft-dagger-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) qft-dagger-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

qft-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

qft-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

qft-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

qft-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone qft-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) qft-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

qft-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

qft-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

qft-gate {
  --qni-component-resize-handle-width: var(--qni-semantic-size-qpu-operation-base);
  --qni-component-resize-handle-height: var(--qni-semantic-size-qpu-operation-base-¾);
  --qni-component-resize-handle-overlap: var(--qni-semantic-spacing-element-overlap);
  --qni-component-resize-handle-fill-color: var(--qni-semantic-color-intermediate-light);
  --qni-component-resize-handle-fill-color-hovered: var(--qni-semantic-color-intermediate);
  --qni-component-resize-handle-icon-color: var(--qni-semantic-color-icon-inverse);
  --qni-component-resize-handle-radius: var(--qni-semantic-radius-default);
}

qft-gate[data-span='2'] {
  width: calc(
    2rem * 2 + 1rem
  );
  width: var(--qni-semantic-size-qpu-operation-2qubit);
}

qft-gate[data-span='2']::part(body) {
  width: calc(
    2rem * 2 + 1rem
  );
  width: var(--qni-semantic-size-qpu-operation-2qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='2'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit)
  }

  qft-gate[data-span='2']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit);
  }

  qft-gate[data-span='2'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit)
  }

  qft-gate[data-span='2']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 2 + 1rem
  );
    height: var(--qni-semantic-size-qpu-operation-2qubit);
  }
}

qft-gate[data-span='3'] {
  width: calc(
    2rem * 3 + 1rem * 2
  );
  width: var(--qni-semantic-size-qpu-operation-3qubit);
}

qft-gate[data-span='3']::part(body) {
  width: calc(
    2rem * 3 + 1rem * 2
  );
  width: var(--qni-semantic-size-qpu-operation-3qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='3'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit)
  }

  qft-gate[data-span='3']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit);
  }

  qft-gate[data-span='3'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit)
  }

  qft-gate[data-span='3']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 3 + 1rem * 2
  );
    height: var(--qni-semantic-size-qpu-operation-3qubit);
  }
}

qft-gate[data-span='4'] {
  width: calc(
    2rem * 4 + 1rem * 3
  );
  width: var(--qni-semantic-size-qpu-operation-4qubit);
}

qft-gate[data-span='4']::part(body) {
  width: calc(
    2rem * 4 + 1rem * 3
  );
  width: var(--qni-semantic-size-qpu-operation-4qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='4'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit)
  }

  qft-gate[data-span='4']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit);
  }

  qft-gate[data-span='4'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit)
  }

  qft-gate[data-span='4']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 4 + 1rem * 3
  );
    height: var(--qni-semantic-size-qpu-operation-4qubit);
  }
}

qft-gate[data-span='5'] {
  width: calc(
    2rem * 5 + 1rem * 4
  );
  width: var(--qni-semantic-size-qpu-operation-5qubit);
}

qft-gate[data-span='5']::part(body) {
  width: calc(
    2rem * 5 + 1rem * 4
  );
  width: var(--qni-semantic-size-qpu-operation-5qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='5'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit)
  }

  qft-gate[data-span='5']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit);
  }

  qft-gate[data-span='5'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit)
  }

  qft-gate[data-span='5']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 5 + 1rem * 4
  );
    height: var(--qni-semantic-size-qpu-operation-5qubit);
  }
}

qft-gate[data-span='6'] {
  width: calc(
    2rem * 6 + 1rem * 5
  );
  width: var(--qni-semantic-size-qpu-operation-6qubit);
}

qft-gate[data-span='6']::part(body) {
  width: calc(
    2rem * 6 + 1rem * 5
  );
  width: var(--qni-semantic-size-qpu-operation-6qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='6'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit)
  }

  qft-gate[data-span='6']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit);
  }

  qft-gate[data-span='6'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit)
  }

  qft-gate[data-span='6']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 6 + 1rem * 5
  );
    height: var(--qni-semantic-size-qpu-operation-6qubit);
  }
}

qft-gate[data-span='7'] {
  width: calc(
    2rem * 7 + 1rem * 6
  );
  width: var(--qni-semantic-size-qpu-operation-7qubit);
}

qft-gate[data-span='7']::part(body) {
  width: calc(
    2rem * 7 + 1rem * 6
  );
  width: var(--qni-semantic-size-qpu-operation-7qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='7'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit)
  }

  qft-gate[data-span='7']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit);
  }

  qft-gate[data-span='7'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit)
  }

  qft-gate[data-span='7']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 7 + 1rem * 6
  );
    height: var(--qni-semantic-size-qpu-operation-7qubit);
  }
}

qft-gate[data-span='8'] {
  width: calc(
    2rem * 8 + 1rem * 7
  );
  width: var(--qni-semantic-size-qpu-operation-8qubit);
}

qft-gate[data-span='8']::part(body) {
  width: calc(
    2rem * 8 + 1rem * 7
  );
  width: var(--qni-semantic-size-qpu-operation-8qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='8'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit)
  }

  qft-gate[data-span='8']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit);
  }

  qft-gate[data-span='8'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit)
  }

  qft-gate[data-span='8']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 8 + 1rem * 7
  );
    height: var(--qni-semantic-size-qpu-operation-8qubit);
  }
}

qft-gate[data-span='9'] {
  width: calc(
    2rem * 9 + 1rem * 8
  );
  width: var(--qni-semantic-size-qpu-operation-9qubit);
}

qft-gate[data-span='9']::part(body) {
  width: calc(
    2rem * 9 + 1rem * 8
  );
  width: var(--qni-semantic-size-qpu-operation-9qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='9'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit)
  }

  qft-gate[data-span='9']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit);
  }

  qft-gate[data-span='9'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit)
  }

  qft-gate[data-span='9']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 9 + 1rem * 8
  );
    height: var(--qni-semantic-size-qpu-operation-9qubit);
  }
}

qft-gate[data-span='10'] {
  width: calc(
    2rem * 10 + 1rem * 9
  );
  width: var(--qni-semantic-size-qpu-operation-10qubit);
}

qft-gate[data-span='10']::part(body) {
  width: calc(
    2rem * 10 + 1rem * 9
  );
  width: var(--qni-semantic-size-qpu-operation-10qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='10'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit)
  }

  qft-gate[data-span='10']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit);
  }

  qft-gate[data-span='10'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit)
  }

  qft-gate[data-span='10']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 10 + 1rem * 9
  );
    height: var(--qni-semantic-size-qpu-operation-10qubit);
  }
}

qft-gate[data-span='11'] {
  width: calc(
    2rem * 11 + 1rem * 10
  );
  width: var(--qni-semantic-size-qpu-operation-11qubit);
}

qft-gate[data-span='11']::part(body) {
  width: calc(
    2rem * 11 + 1rem * 10
  );
  width: var(--qni-semantic-size-qpu-operation-11qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='11'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit)
  }

  qft-gate[data-span='11']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit);
  }

  qft-gate[data-span='11'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit)
  }

  qft-gate[data-span='11']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 11 + 1rem * 10
  );
    height: var(--qni-semantic-size-qpu-operation-11qubit);
  }
}

qft-gate[data-span='12'] {
  width: calc(
    2rem * 12 + 1rem * 11
  );
  width: var(--qni-semantic-size-qpu-operation-12qubit);
}

qft-gate[data-span='12']::part(body) {
  width: calc(
    2rem * 12 + 1rem * 11
  );
  width: var(--qni-semantic-size-qpu-operation-12qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='12'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit)
  }

  qft-gate[data-span='12']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit);
  }

  qft-gate[data-span='12'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit)
  }

  qft-gate[data-span='12']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 12 + 1rem * 11
  );
    height: var(--qni-semantic-size-qpu-operation-12qubit);
  }
}

qft-gate[data-span='13'] {
  width: calc(
    2rem * 13 + 1rem * 12
  );
  width: var(--qni-semantic-size-qpu-operation-13qubit);
}

qft-gate[data-span='13']::part(body) {
  width: calc(
    2rem * 13 + 1rem * 12
  );
  width: var(--qni-semantic-size-qpu-operation-13qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='13'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit)
  }

  qft-gate[data-span='13']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit);
  }

  qft-gate[data-span='13'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit)
  }

  qft-gate[data-span='13']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 13 + 1rem * 12
  );
    height: var(--qni-semantic-size-qpu-operation-13qubit);
  }
}

qft-gate[data-span='14'] {
  width: calc(
    2rem * 14 + 1rem * 13
  );
  width: var(--qni-semantic-size-qpu-operation-14qubit);
}

qft-gate[data-span='14']::part(body) {
  width: calc(
    2rem * 14 + 1rem * 13
  );
  width: var(--qni-semantic-size-qpu-operation-14qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='14'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit)
  }

  qft-gate[data-span='14']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit);
  }

  qft-gate[data-span='14'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit)
  }

  qft-gate[data-span='14']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 14 + 1rem * 13
  );
    height: var(--qni-semantic-size-qpu-operation-14qubit);
  }
}

qft-gate[data-span='15'] {
  width: calc(
    2rem * 15 + 1rem * 14
  );
  width: var(--qni-semantic-size-qpu-operation-15qubit);
}

qft-gate[data-span='15']::part(body) {
  width: calc(
    2rem * 15 + 1rem * 14
  );
  width: var(--qni-semantic-size-qpu-operation-15qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='15'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit)
  }

  qft-gate[data-span='15']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit);
  }

  qft-gate[data-span='15'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit)
  }

  qft-gate[data-span='15']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 15 + 1rem * 14
  );
    height: var(--qni-semantic-size-qpu-operation-15qubit);
  }
}

qft-gate[data-span='16'] {
  width: calc(
    2rem * 16 + 1rem * 15
  );
  width: var(--qni-semantic-size-qpu-operation-16qubit);
}

qft-gate[data-span='16']::part(body) {
  width: calc(
    2rem * 16 + 1rem * 15
  );
  width: var(--qni-semantic-size-qpu-operation-16qubit);
}

@media (min-width: 640px) {
  qft-gate[data-span='16'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit)
  }

  qft-gate[data-span='16']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit);
  }

  qft-gate[data-span='16'] {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit)
  }

  qft-gate[data-span='16']::part(body) {
    width: 2rem;
    width: var(--qni-semantic-size-qpu-operation-1qubit);
    height: calc(
    2rem * 16 + 1rem * 15
  );
    height: var(--qni-semantic-size-qpu-operation-16qubit);
  }
}

qft-gate[data-resizing]::part(outline) {
  display: block;
  outline: 2px solid #a855f7;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-intermediate);
}

qft-gate::part(layout) {
  display: flex;
  flex-direction: row-reverse;
}

@media (min-width: 640px) {
  qft-gate::part(layout) {
    flex-direction: column;
  }
}

qft-gate::part(resize-handle) {
  color: var(--qni-component-resize-handle-icon-color);
  background-color: var(--qni-component-resize-handle-fill-color);
  border-radius: var(--qni-component-resize-handle-radius);
  width: var(--qni-component-resize-handle-height);
  height: var(--qni-component-resize-handle-width);
  margin-right: var(--qni-component-resize-handle-overlap);
  flex-shrink: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  cursor: ns-resize;
  z-index: 10;
}

@media (min-width: 640px) {
  qft-gate::part(resize-handle) {
    width: var(--qni-component-resize-handle-width);
    height: var(--qni-component-resize-handle-height);
    margin-right: 0;
    margin-top: var(--qni-component-resize-handle-overlap);
    flex-direction: column
  }
}

qft-gate::part(resize-handle):hover,qft-gate[data-resizing]::part(resize-handle) {
  background-color: var(--qni-component-resize-handle-fill-color-hovered);
}

qft-gate::part(resize-handle) {
  visibility: hidden;
}

quantum-circuit:not([data-editing]) circuit-dropzone qft-gate:not([data-grabbed]):hover::part(resize-handle),qft-gate[data-resizing]::part(resize-handle) {
  visibility: visible;
}

qft-gate::part(resize-handle-icon) {
  height: 100%;
  width: 100%;
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  qft-gate::part(resize-handle-icon) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

qft-gate[data-grabbed] {
  cursor: grabbing;
}

qft-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

qft-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

qft-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

qft-gate[data-grabbed]::part(outline) {
  display: none;
}

qft-gate {
  touch-action: none;
}

circuit-editor palette-dropzone qft-gate,
    circuit-editor quantum-circuit:not([data-editing]) qft-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) qft-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone qft-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

qft-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone qft-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone qft-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) qft-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] qft-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) qft-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

quantum-circuit {
  display: flex;
  flex-direction: column;
}

@media (min-width: 640px) {
  quantum-circuit {
    flex-direction: row;
  }
}

quantum-circuit {
  align-items: center;
  width: -moz-min-content;
  width: min-content;
}

rnot-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

rnot-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

rnot-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone rnot-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) rnot-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

rnot-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

rnot-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

rnot-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

rnot-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

rnot-gate[data-grabbed] {
  cursor: grabbing;
}

rnot-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

rnot-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

rnot-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

rnot-gate[data-grabbed]::part(outline) {
  display: none;
}

rnot-gate {
  touch-action: none;
}

circuit-editor palette-dropzone rnot-gate,
    circuit-editor quantum-circuit:not([data-editing]) rnot-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) rnot-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone rnot-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

rnot-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone rnot-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone rnot-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) rnot-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] rnot-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) rnot-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

rx-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

rx-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

rx-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone rx-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) rx-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

rx-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

rx-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

rx-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

rx-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

rx-gate[data-grabbed] {
  cursor: grabbing;
}

rx-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

rx-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

rx-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

rx-gate[data-grabbed]::part(outline) {
  display: none;
}

rx-gate[data-angle]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: 1rem;
  line-height: 1;
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

rx-gate:not([data-reduced-angle=''])::before {
  content: attr(data-reduced-angle) '';
}

rx-gate[data-reduced-angle='']:not([data-angle=''])::before {
  content: attr(data-angle) '';
}

rx-gate.angle-hidden::before,
    palette-dropzone rx-gate::before {
  display: none !important;
}

rx-gate[data-angle][data-size='sm']::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone:not([data-connect-top]) rx-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] rx-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) rx-gate[data-angle]::before {
  top: auto;
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.75rem;
}

rx-gate {
  touch-action: none;
}

circuit-editor palette-dropzone rx-gate,
    circuit-editor quantum-circuit:not([data-editing]) rx-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) rx-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone rx-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

rx-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone rx-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone rx-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) rx-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] rx-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) rx-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

ry-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

ry-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

ry-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone ry-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) ry-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

ry-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

ry-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

ry-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

ry-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

ry-gate[data-grabbed] {
  cursor: grabbing;
}

ry-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

ry-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

ry-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

ry-gate[data-grabbed]::part(outline) {
  display: none;
}

ry-gate[data-angle]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: 1rem;
  line-height: 1;
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

ry-gate:not([data-reduced-angle=''])::before {
  content: attr(data-reduced-angle) '';
}

ry-gate[data-reduced-angle='']:not([data-angle=''])::before {
  content: attr(data-angle) '';
}

ry-gate.angle-hidden::before,
    palette-dropzone ry-gate::before {
  display: none !important;
}

ry-gate[data-angle][data-size='sm']::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone:not([data-connect-top]) ry-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] ry-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) ry-gate[data-angle]::before {
  top: auto;
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.75rem;
}

ry-gate {
  touch-action: none;
}

circuit-editor palette-dropzone ry-gate,
    circuit-editor quantum-circuit:not([data-editing]) ry-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) ry-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone ry-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

ry-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone ry-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone ry-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) ry-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] ry-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) ry-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

rz-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

rz-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

rz-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone rz-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) rz-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

rz-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

rz-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

rz-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

rz-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

rz-gate[data-grabbed] {
  cursor: grabbing;
}

rz-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

rz-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

rz-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

rz-gate[data-grabbed]::part(outline) {
  display: none;
}

rz-gate[data-angle]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: 1rem;
  line-height: 1;
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

rz-gate:not([data-reduced-angle=''])::before {
  content: attr(data-reduced-angle) '';
}

rz-gate[data-reduced-angle='']:not([data-angle=''])::before {
  content: attr(data-angle) '';
}

rz-gate.angle-hidden::before,
    palette-dropzone rz-gate::before {
  display: none !important;
}

rz-gate[data-angle][data-size='sm']::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone:not([data-connect-top]) rz-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] rz-gate[data-angle]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.75rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) rz-gate[data-angle]::before {
  top: auto;
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.75rem;
}

rz-gate {
  touch-action: none;
}

circuit-editor palette-dropzone rz-gate,
    circuit-editor quantum-circuit:not([data-editing]) rz-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) rz-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone rz-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

rz-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone rz-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone rz-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) rz-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] rz-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) rz-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

s-dagger-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

s-dagger-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

s-dagger-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone s-dagger-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) s-dagger-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

s-dagger-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

s-dagger-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

s-dagger-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

s-dagger-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

s-dagger-gate[data-grabbed] {
  cursor: grabbing;
}

s-dagger-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

s-dagger-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

s-dagger-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

s-dagger-gate[data-grabbed]::part(outline) {
  display: none;
}

s-dagger-gate {
  touch-action: none;
}

circuit-editor palette-dropzone s-dagger-gate,
    circuit-editor quantum-circuit:not([data-editing]) s-dagger-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) s-dagger-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone s-dagger-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

s-dagger-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone s-dagger-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone s-dagger-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) s-dagger-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] s-dagger-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) s-dagger-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

s-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

s-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

s-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone s-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) s-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

s-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

s-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

s-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

s-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

s-gate[data-grabbed] {
  cursor: grabbing;
}

s-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

s-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

s-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

s-gate[data-grabbed]::part(outline) {
  display: none;
}

s-gate {
  touch-action: none;
}

circuit-editor palette-dropzone s-gate,
    circuit-editor quantum-circuit:not([data-editing]) s-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) s-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone s-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

s-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone s-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone s-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) s-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] s-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) s-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

spacer-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

spacer-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

spacer-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone spacer-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) spacer-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

spacer-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

spacer-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

spacer-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
}

spacer-gate[data-grabbed] {
  cursor: grabbing;
}

spacer-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

spacer-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

spacer-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

spacer-gate[data-grabbed]::part(outline) {
  display: none;
}

spacer-gate {
  touch-action: none;
}

circuit-editor palette-dropzone spacer-gate,
    circuit-editor quantum-circuit:not([data-editing]) spacer-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) spacer-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone spacer-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

spacer-gate::part(icon) {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / 1);
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  spacer-gate::part(icon) {
    color: rgb(23 23 23 / var(--tw-text-opacity));
  }
}

@media (min-width: 640px) {
  spacer-gate::part(icon) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

swap-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

swap-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

swap-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone swap-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) swap-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

swap-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

swap-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
}

swap-gate[data-grabbed] {
  cursor: grabbing;
}

swap-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

swap-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

swap-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

swap-gate[data-grabbed]::part(outline) {
  display: none;
}

swap-gate {
  touch-action: none;
}

circuit-editor palette-dropzone swap-gate,
    circuit-editor quantum-circuit:not([data-editing]) swap-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) swap-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone swap-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

swap-gate::part(icon) {
  color: #10b981;
  color: var(--qni-semantic-fill-color-primary);
}

swap-gate[data-disabled]:not([data-grabbed])::part(icon) {
  color: #71717a;
  color: var(--qni-semantic-fill-color-disabled);
}

t-dagger-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

t-dagger-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

t-dagger-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone t-dagger-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) t-dagger-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

t-dagger-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

t-dagger-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

t-dagger-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

t-dagger-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

t-dagger-gate[data-grabbed] {
  cursor: grabbing;
}

t-dagger-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

t-dagger-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

t-dagger-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

t-dagger-gate[data-grabbed]::part(outline) {
  display: none;
}

t-dagger-gate {
  touch-action: none;
}

circuit-editor palette-dropzone t-dagger-gate,
    circuit-editor quantum-circuit:not([data-editing]) t-dagger-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) t-dagger-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone t-dagger-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

t-dagger-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone t-dagger-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone t-dagger-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) t-dagger-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] t-dagger-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) t-dagger-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

t-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

t-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

t-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone t-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) t-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

t-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

t-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

t-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

t-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

t-gate[data-grabbed] {
  cursor: grabbing;
}

t-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

t-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

t-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

t-gate[data-grabbed]::part(outline) {
  display: none;
}

t-gate {
  touch-action: none;
}

circuit-editor palette-dropzone t-gate,
    circuit-editor quantum-circuit:not([data-editing]) t-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) t-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone t-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

t-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone t-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone t-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) t-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] t-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) t-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

write-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

write-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

write-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone write-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) write-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

write-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

write-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
}

write-gate[data-grabbed] {
  cursor: grabbing;
}

write-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

write-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

write-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

write-gate[data-grabbed]::part(outline) {
  display: none;
}

write-gate {
  touch-action: none;
}

circuit-editor palette-dropzone write-gate,
    circuit-editor quantum-circuit:not([data-editing]) write-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) write-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone write-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

write-gate::part(icon) {
  color: #71717a;
  color: var(--qni-semantic-fill-color-disabled);
}

write-gate[data-dark-mode]::part(icon) {
  --tw-text-opacity: 1;
  color: rgb(228 228 231 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  write-gate[data-dark-mode]::part(icon) {
    color: rgb(228 228 231 / var(--tw-text-opacity));
  }
}

circuit-dropzone write-gate[data-snapped]::part(icon) {
  transform-origin: center;
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  circuit-dropzone write-gate[data-snapped]::part(icon) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

write-gate::part(value) {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

circuit-dropzone write-gate[data-snapped]::part(value) {
  transform-origin: center;
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 640px) {
  circuit-dropzone write-gate[data-snapped]::part(value) {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(0deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

write-gate::part(value)::after {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

write-gate[data-value='0']::part(value)::after {
  color: #ef4444;
  color: var(--qni-semantic-color-off);
  content: '0';
}

write-gate[data-value='1']::part(value)::after {
  color: #0ea5e9;
  color: var(--qni-semantic-color-on);
  content: '1';
}

write-gate.qpu-operation-xs::part(value)::after {
  font-size: 0.75rem;
  line-height: 1rem;
}

write-gate.qpu-operation-sm::part(value)::after {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

write-gate.qpu-operation-base::part(value)::after {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

write-gate.qpu-operation-lg::part(value)::after {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

write-gate.qpu-operation-xl::part(value)::after {
  font-size: 1.5rem;
  line-height: 2rem;
}

write-gate.qpu-operation-2xl::part(value)::after {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

/* data-grabbed */

write-gate[data-grabbed]::part(icon) {
  --tw-text-opacity: 1;
  color: rgb(192 132 252 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  write-gate[data-grabbed]::part(icon) {
    color: rgb(192 132 252 / var(--tw-text-opacity));
  }
}

write-gate[data-grabbed][data-value='0']::part(value)::after {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  write-gate[data-grabbed][data-value='0']::part(value)::after {
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

write-gate[data-grabbed][data-value='1']::part(value)::after {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
  write-gate[data-grabbed][data-value='1']::part(value)::after {
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

x-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

x-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

x-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone x-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) x-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

x-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

x-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

x-gate::part(body) {
  border-radius: 9999px;
  border-radius: var(--qni-semantic-radius-circular);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

x-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

x-gate[data-grabbed] {
  cursor: grabbing;
}

x-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

x-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

x-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

x-gate[data-grabbed]::part(outline) {
  display: none;
}

x-gate {
  touch-action: none;
}

circuit-editor palette-dropzone x-gate,
    circuit-editor quantum-circuit:not([data-editing]) x-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) x-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone x-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

x-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone x-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone x-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) x-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] x-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) x-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

y-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

y-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

y-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone y-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) y-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

y-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

y-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

y-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

y-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

y-gate[data-grabbed] {
  cursor: grabbing;
}

y-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

y-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

y-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

y-gate[data-grabbed]::part(outline) {
  display: none;
}

y-gate {
  touch-action: none;
}

circuit-editor palette-dropzone y-gate,
    circuit-editor quantum-circuit:not([data-editing]) y-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) y-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone y-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

y-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone y-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone y-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) y-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] y-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) y-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

z-gate {
  display: inline-block;
  position: relative;
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

z-gate::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
  flex-shrink: 0;
}

z-gate::part(outline) {
  position: absolute;
  display: none;
  top: calc(-1 * (0.125rem));
  top: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  right: calc(-1 * (0.125rem));
  right: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  bottom: calc(-1 * (0.125rem));
  bottom: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  left: calc(-1 * (0.125rem));
  left: calc(-1 * (var(--qni-semantic-spacing-outline-gap)));
  border-radius: 0.375rem;
  border-radius: var(--qni-semantic-radius-outline);
}

palette-dropzone z-gate[data-hoverable]:not([data-grabbed]):hover::part(outline),
    quantum-circuit:not([data-editing]) z-gate[data-hoverable]:not([data-active]):not([data-resizing]):hover::part(outline) {
  display: block;
  outline: 2px solid #d4d4d8;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-hover);
}

z-gate[data-active]::part(outline) {
  display: block;
  outline: 2px solid #0ea5e9;
  outline: var(--qni-semantic-border-width-outline) solid var(--qni-semantic-border-color-active);
}

z-gate[data-disabled]::part(body) {
  background-color: #71717a;
  background-color: var(--qni-semantic-fill-color-disabled);
}

z-gate::part(body) {
  border-radius: 0.25rem;
  border-radius: var(--qni-semantic-radius-default);
  background-color: #10b981;
  background-color: var(--qni-semantic-fill-color-primary);
}

z-gate::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

z-gate[data-grabbed] {
  cursor: grabbing;
}

z-gate[data-grabbed]:not([data-snapped]) {
  z-index: 40;
}

z-gate[data-grabbed]::part(body) {
  background-color: #a855f7;
  background-color: var(--qni-semantic-fill-color-intermediate);
}

z-gate[data-grabbed]::part(icon) {
  color: #fff;
  color: var(--qni-semantic-color-icon-inverse);
}

z-gate[data-grabbed]::part(outline) {
  display: none;
}

z-gate {
  touch-action: none;
}

circuit-editor palette-dropzone z-gate,
    circuit-editor quantum-circuit:not([data-editing]) z-gate {
  cursor: grab;
}

quantum-circuit([data-editing]) z-gate:not([data-operation-x='0']):not([data-operation-y='0']):hover::after {
  --tw-border-opacity: 1;
}

circuit-dropzone z-gate:not([data-snapped])::part(body)::before {
  position: absolute;
  top: -0.625rem;
  right: -0.625rem;
  height: 1.5rem;
  width: 1.5rem;
  z-index: 10;
  content: '';
  background-image: url('data:image/svg+xml;utf8,<svg fill="none" viewBox="0 0 24 24" stroke="%23111827" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" style="fill-rule:nonzero;fill:rgb(255, 255, 255)"/></svg>');
}

z-gate[data-if]::before {
  position: absolute;
  display: flex;
  justify-content: center;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  letter-spacing: -0.05em;
  font-size: 0.75rem;
  line-height: .75rem;
  white-space: nowrap;
}

circuit-dropzone z-gate[data-if]:not([data-if=''])::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  content: 'if\2009'attr(data-if);
}

circuit-dropzone z-gate[data-angle][data-if]:not([data-angle='']):not([data-if=''])::before {
  content: attr(data-angle) '\2009if\2009'attr(data-if);
}

circuit-dropzone:not([data-connect-top]) z-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
}

circuit-dropzone[data-connect-top][data-connect-bottom] z-gate[data-if]::before {
  top: 0px;
  left: 0px;
  right: 0px;
  margin-top: -0.875rem;
  text-shadow: 1px 1px 0 #fff, -1px -1px 0 #fff, -1px 1px 0 #fff, 1px -1px 0 #fff, 0px 1px 0 #fff, 0-1px 0 #fff,
        -1px 0 0 #fff, 1px 0 0 #fff;
}

circuit-dropzone[data-connect-top]:not([data-connect-bottom]) z-gate[data-if]::before {
  bottom: 0px;
  left: 0px;
  right: 0px;
  margin-bottom: -0.875rem;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.resize {
  resize: both;
}

.border {
  border-width: 1px;
}

.font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.font-bold {
  font-weight: 700;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: 0 0 #0000, 0 0 #0000, 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

/* operation shapes */

/* QPU operation outline */

/* data-grabbed */

/* data-disabled */

/* Show resize-handle only when hovering the mouse pointer */

/*
     * Do not display resize-handle
     * - on palette
     * - while dragging
     */

/* grabbable cursor style */

/* show trash icon */

/* top label */

/* top label over wire */

/* bottom label */

/* Size */

.qpu-operation-xs {
  width: 1rem;
  width: var(--qni-semantic-size-qpu-operation-xs);
  height: 1rem;
  height: var(--qni-semantic-size-qpu-operation-xs);
}

.qpu-operation-xs::part(body) {
  width: 1rem;
  width: var(--qni-semantic-size-qpu-operation-xs);
  height: 1rem;
  height: var(--qni-semantic-size-qpu-operation-xs);
}

.qpu-operation-sm {
  width: 1.5rem;
  width: var(--qni-semantic-size-qpu-operation-sm);
  height: 1.5rem;
  height: var(--qni-semantic-size-qpu-operation-sm);
}

.qpu-operation-sm::part(body) {
  width: 1.5rem;
  width: var(--qni-semantic-size-qpu-operation-sm);
  height: 1.5rem;
  height: var(--qni-semantic-size-qpu-operation-sm);
}

.qpu-operation-base {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

.qpu-operation-base::part(body) {
  width: 2rem;
  width: var(--qni-semantic-size-qpu-operation-base);
  height: 2rem;
  height: var(--qni-semantic-size-qpu-operation-base);
}

.qpu-operation-lg {
  width: 2.5rem;
  width: var(--qni-semantic-size-qpu-operation-lg);
  height: 2.5rem;
  height: var(--qni-semantic-size-qpu-operation-lg);
}

.qpu-operation-lg::part(body) {
  width: 2.5rem;
  width: var(--qni-semantic-size-qpu-operation-lg);
  height: 2.5rem;
  height: var(--qni-semantic-size-qpu-operation-lg);
}

.qpu-operation-xl {
  width: 3rem;
  width: var(--qni-semantic-size-qpu-operation-xl);
  height: 3rem;
  height: var(--qni-semantic-size-qpu-operation-xl);
}

.qpu-operation-xl::part(body) {
  width: 3rem;
  width: var(--qni-semantic-size-qpu-operation-xl);
  height: 3rem;
  height: var(--qni-semantic-size-qpu-operation-xl);
}

.qpu-operation-2xl {
  width: 4rem;
  width: var(--qni-semantic-size-qpu-operation-2xl);
  height: 4rem;
  height: var(--qni-semantic-size-qpu-operation-2xl);
}

.qpu-operation-2xl::part(body) {
  width: 4rem;
  width: var(--qni-semantic-size-qpu-operation-2xl);
  height: 4rem;
  height: var(--qni-semantic-size-qpu-operation-2xl);
}

/* tooltip */

@media (min-width: 768px) {
  .content-with-margin .mini-qni,
.content-with-margin > p,
.content-with-margin figure,
.content-with-margin orbit-reviewarea,
.content-with-margin ul,
.content-with-margin footer {
    margin-right: auto;
    width: 58.333333%;
  }
}

body {
  counter-reset: margin-note-counter;
}

.margin-note {
  position: relative;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / 1);
  display: none;
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.margin-note {
  color: rgb(113 113 122 / var(--tw-text-opacity));
}
}

@media (min-width: 640px) {
  .margin-note {
    display: block;
  }
}

.margin-note {
  vertical-align: baseline;
}

@media (min-width: 640px) {
  .margin-note {
    vertical-align: middle;
  }
}

.margin-note {
  float: left;
}

@media (min-width: 640px) {
  .margin-note {
    float: right;
  }
}

.margin-note {
  clear: both;
}

@media (min-width: 640px) {
  .margin-note {
    clear: right;
  }
}

.margin-note {
  margin: 1rem;
}

@media (min-width: 640px) {
  .margin-note {
    margin: 0px;
    margin-bottom: 1.25rem;
    padding-left: 3rem;
  }
}

.margin-note {
  width: 91.666667%;
}

@media (min-width: 640px) {
  .margin-note {
    width: 50%;
  }
}

.margin-note--numbered {
  counter-increment: margin-note-counter;
}

.margin-note__toggle:checked + .margin-note {
  display: block;
}

.margin-note__toggle:after {
  position: relative;
  font-size: 0.875rem;
  line-height: 1.25rem;
  border-radius: 0.25rem;
  padding-left: 0.125rem;
  padding-right: 0.125rem;
}

@media (min-width: 640px) {
  .margin-note__toggle:after {
    padding-left: 0px;
    padding-right: 0px;
  }
}

.margin-note__toggle:after {
  --tw-bg-opacity: 1;
  background-color: rgb(224 242 254 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.margin-note__toggle:after {
  background-color: rgb(224 242 254 / var(--tw-bg-opacity));
}
}

@media (min-width: 640px) {
  .margin-note__toggle:after {
    background-color: transparent;
  }
}

.margin-note__toggle:after {
  top: -0.5rem;
  vertical-align: baseline;
  content: '…';
}

.margin-note__toggle.margin-note--numbered:after {
  content: counter(margin-note-counter);
}

@media (min-width: 640px) {
  .margin-note {
    margin-right: -50%;
  }
}

label.margin-note--numbered + input.margin-note__toggle + .margin-note::before {
  position: relative;
  top: -0.5rem;
  padding-right: 0.25rem;
  content: counter(margin-note-counter);
}

.mini-qni {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / 1);
  overflow: hidden;
  padding: 2rem;
  position: relative;
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(14 165 233 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.mini-qni {
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
  border-color: rgb(14 165 233 / var(--tw-border-opacity));
}
}

qubit-circle.magnitude-lime::part(magnitude) {
  --tw-bg-opacity: 1;
  background-color: rgb(132 204 22 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
qubit-circle.magnitude-lime::part(magnitude) {
  background-color: rgb(132 204 22 / var(--tw-bg-opacity));
}
}

qubit-circle.magnitude-emerald::part(magnitude) {
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
qubit-circle.magnitude-emerald::part(magnitude) {
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
}
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.top-px {
  top: 1px;
}

.right-px {
  right: 1px;
}

.left-0 {
  left: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.top-0 {
  top: 0px;
}

.right-0 {
  right: 0px;
}

.top-0\.5 {
  top: 0.125rem;
}

.z-40 {
  z-index: 40;
}

.z-30 {
  z-index: 30;
}

.z-\[200\] {
  z-index: 200;
}

.z-\[100\] {
  z-index: 100;
}

.m-auto {
  margin: auto;
}

.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.-mt-2\.5 {
  margin-top: -0.625rem;
}

.-mt-2 {
  margin-top: -0.5rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mt-12 {
  margin-top: 3rem;
}

.mb-40 {
  margin-bottom: 10rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mr-8 {
  margin-right: 2rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mr-4 {
  margin-right: 1rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mr-3 {
  margin-right: 0.75rem;
}

.ml-auto {
  margin-left: auto;
}

.ml-3 {
  margin-left: 0.75rem;
}

.-mr-12 {
  margin-right: -3rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.ml-0\.5 {
  margin-left: 0.125rem;
}

.ml-0 {
  margin-left: 0px;
}

.mb-0 {
  margin-bottom: 0px;
}

.ml-4 {
  margin-left: 1rem;
}

.mr-1 {
  margin-right: 0.25rem;
}

.mr-6 {
  margin-right: 1.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-12 {
  height: 3rem;
}

.h-10 {
  height: 2.5rem;
}

.h-full {
  height: 100%;
}

.h-4 {
  height: 1rem;
}

.h-6 {
  height: 1.5rem;
}

.h-auto {
  height: auto;
}

.h-8 {
  height: 2rem;
}

.h-32 {
  height: 8rem;
}

.h-7 {
  height: 1.75rem;
}

.h-0 {
  height: 0px;
}

.h-5 {
  height: 1.25rem;
}

.h-16 {
  height: 4rem;
}

.w-20 {
  width: 5rem;
}

.w-12 {
  width: 3rem;
}

.w-11 {
  width: 2.75rem;
}

.w-10 {
  width: 2.5rem;
}

.w-full {
  width: 100%;
}

.w-4 {
  width: 1rem;
}

.w-min {
  width: -moz-min-content;
  width: min-content;
}

.w-6 {
  width: 1.5rem;
}

.w-16 {
  width: 4rem;
}

.w-8 {
  width: 2rem;
}

.\!w-full {
  width: 100% !important;
}

.\!w-auto {
  width: auto !important;
}

.w-auto {
  width: auto;
}

.w-7 {
  width: 1.75rem;
}

.w-14 {
  width: 3.5rem;
}

.w-60 {
  width: 15rem;
}

.w-5 {
  width: 1.25rem;
}

.min-w-0 {
  min-width: 0px;
}

.max-w-xs {
  max-width: 20rem;
}

.max-w-none {
  max-width: none;
}

.max-w-7xl {
  max-width: 80rem;
}

.flex-1 {
  flex: 1 1;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.basis-1\/4 {
  flex-basis: 25%;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.list-decimal {
  list-style-type: decimal;
}

.list-disc {
  list-style-type: disc;
}

.list-none {
  list-style-type: none;
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-rows-1 {
  grid-template-rows: repeat(1, minmax(0, 1fr));
}

.grid-rows-3 {
  grid-template-rows: repeat(3, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: 0.5rem;
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * 0);
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - 0));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * 0);
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - 0));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - 0));
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * 0);
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * 0);
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - 0));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - 0));
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * 0);
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - 0));
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * 0);
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - 0));
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * 0);
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - 0));
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * 0);
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.self-center {
  align-self: center;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-visible {
  overflow: visible;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-b-md {
  border-bottom-right-radius: 0.375rem;
  border-bottom-left-radius: 0.375rem;
}

.rounded-bl-2xl {
  border-bottom-left-radius: 1rem;
}

.rounded-tr-md {
  border-top-right-radius: 0.375rem;
}

.border-2 {
  border-width: 2px;
}

.border {
  border-width: 1px;
}

.border-0 {
  border-width: 0px;
}

.border-b-4 {
  border-bottom-width: 4px;
}

.border-l-4 {
  border-left-width: 4px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.border-gray-200 {
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}
}

.border-neutral-300 {
  --tw-border-opacity: 1;
  border-color: rgb(212 212 212 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.border-neutral-300 {
  border-color: rgb(212 212 212 / var(--tw-border-opacity));
}
}

.border-neutral-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 229 229 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.border-neutral-200 {
  border-color: rgb(229 229 229 / var(--tw-border-opacity));
}
}

.border-blue-400 {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.border-blue-400 {
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}
}

.border-transparent {
  border-color: transparent;
}

.border-slate-900\/10 {
  border-color: rgb(15 23 42 / 0.1);
}

.border-zinc-900\/10 {
  border-color: rgb(24 24 27 / 0.1);
}

.border-zinc-200 {
  --tw-border-opacity: 1;
  border-color: rgb(228 228 231 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.border-zinc-200 {
  border-color: rgb(228 228 231 / var(--tw-border-opacity));
}
}

.bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-neutral-50 {
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-white {
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
}

.bg-emerald-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-emerald-500 {
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
}
}

.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-gray-50 {
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}
}

.bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-blue-50 {
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}
}

.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-blue-100 {
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-green-100 {
  background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}
}

.bg-gray-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-gray-600 {
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-neutral-100 {
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}
}

.bg-purple-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(168 85 247 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-purple-500 {
  background-color: rgb(168 85 247 / var(--tw-bg-opacity));
}
}

.bg-white\/95 {
  background-color: rgb(255 255 255 / 0.95);
}

.bg-sky-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(14 165 233 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.bg-sky-500 {
  background-color: rgb(14 165 233 / var(--tw-bg-opacity));
}
}

.bg-opacity-75 {
  --tw-bg-opacity: 0.75;
}

.fill-current {
  fill: currentColor;
}

.p-8 {
  padding: 2rem;
}

.p-1 {
  padding: 0.25rem;
}

.p-0 {
  padding: 0px;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.\!py-4 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.\!pb-0 {
  padding-bottom: 0px !important;
}

.pr-2 {
  padding-right: 0.5rem;
}

.pb-14 {
  padding-bottom: 3.5rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pt-5 {
  padding-top: 1.25rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pr-1 {
  padding-right: 0.25rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pb-10 {
  padding-bottom: 2.5rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.align-middle {
  vertical-align: middle;
}

.font-sans {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.font-extrabold {
  font-weight: 800;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.leading-6 {
  line-height: 1.5rem;
}

.tracking-wide {
  letter-spacing: 0.025em;
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.tracking-tighter {
  letter-spacing: -0.05em;
}

.tracking-tight {
  letter-spacing: -0.025em;
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-gray-700 {
  color: rgb(55 65 81 / var(--tw-text-opacity));
}
}

.text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-neutral-700 {
  color: rgb(64 64 64 / var(--tw-text-opacity));
}
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-gray-400 {
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
}

.text-neutral-400 {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-neutral-400 {
  color: rgb(163 163 163 / var(--tw-text-opacity));
}
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-white {
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
}

.text-zinc-300 {
  --tw-text-opacity: 1;
  color: rgb(212 212 216 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-zinc-300 {
  color: rgb(212 212 216 / var(--tw-text-opacity));
}
}

.text-purple-500 {
  --tw-text-opacity: 1;
  color: rgb(168 85 247 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-purple-500 {
  color: rgb(168 85 247 / var(--tw-text-opacity));
}
}

.text-purple-600 {
  --tw-text-opacity: 1;
  color: rgb(147 51 234 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-purple-600 {
  color: rgb(147 51 234 / var(--tw-text-opacity));
}
}

.text-slate-700 {
  --tw-text-opacity: 1;
  color: rgb(51 65 85 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-slate-700 {
  color: rgb(51 65 85 / var(--tw-text-opacity));
}
}

.text-slate-400 {
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-slate-400 {
  color: rgb(148 163 184 / var(--tw-text-opacity));
}
}

.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-blue-600 {
  color: rgb(37 99 235 / var(--tw-text-opacity));
}
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-gray-900 {
  color: rgb(17 24 39 / var(--tw-text-opacity));
}
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-gray-500 {
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
}

.text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-green-800 {
  color: rgb(22 101 52 / var(--tw-text-opacity));
}
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-neutral-900 {
  color: rgb(23 23 23 / var(--tw-text-opacity));
}
}

.text-blue-400 {
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-blue-400 {
  color: rgb(96 165 250 / var(--tw-text-opacity));
}
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-neutral-500 {
  color: rgb(115 115 115 / var(--tw-text-opacity));
}
}

.text-yellow-600 {
  --tw-text-opacity: 1;
  color: rgb(202 138 4 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-yellow-600 {
  color: rgb(202 138 4 / var(--tw-text-opacity));
}
}

.text-indigo-600 {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-indigo-600 {
  color: rgb(79 70 229 / var(--tw-text-opacity));
}
}

.text-zinc-500 {
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-zinc-500 {
  color: rgb(113 113 122 / var(--tw-text-opacity));
}
}

.text-zinc-400 {
  --tw-text-opacity: 1;
  color: rgb(161 161 170 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-zinc-400 {
  color: rgb(161 161 170 / var(--tw-text-opacity));
}
}

.text-sky-600 {
  --tw-text-opacity: 1;
  color: rgb(2 132 199 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-sky-600 {
  color: rgb(2 132 199 / var(--tw-text-opacity));
}
}

.text-zinc-900 {
  --tw-text-opacity: 1;
  color: rgb(24 24 27 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-zinc-900 {
  color: rgb(24 24 27 / var(--tw-text-opacity));
}
}

.text-zinc-700 {
  --tw-text-opacity: 1;
  color: rgb(63 63 70 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.text-zinc-700 {
  color: rgb(63 63 70 / var(--tw-text-opacity));
}
}

.underline {
  text-decoration-line: underline;
}

.no-underline {
  text-decoration-line: none;
}

.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: 0 0 #0000, 0 0 #0000, 0 1px 2px 0 rgb(0 0 0 / 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: 0 0 #0000, 0 0 #0000, 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.drop-shadow-xl {
  --tw-drop-shadow: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-md {
  --tw-drop-shadow: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-lg {
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-2xl {
  --tw-drop-shadow: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: blur(8px) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: blur(8px) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:bg-gray-200:hover {
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}
}

.hover\:bg-neutral-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:bg-neutral-200:hover {
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}
}

.hover\:bg-blue-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:bg-blue-50:hover {
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}
}

.hover\:bg-red-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 202 202 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:bg-red-200:hover {
  background-color: rgb(254 202 202 / var(--tw-bg-opacity));
}
}

.hover\:bg-zinc-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(228 228 231 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:bg-zinc-200:hover {
  background-color: rgb(228 228 231 / var(--tw-bg-opacity));
}
}

.hover\:text-slate-900:hover {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:text-slate-900:hover {
  color: rgb(15 23 42 / var(--tw-text-opacity));
}
}

.hover\:text-gray-900:hover {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:text-gray-900:hover {
  color: rgb(17 24 39 / var(--tw-text-opacity));
}
}

.hover\:text-zinc-500:hover {
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.hover\:text-zinc-500:hover {
  color: rgb(113 113 122 / var(--tw-text-opacity));
}
}

.focus\:border-indigo-500:focus {
  --tw-border-opacity: 1;
  border-color: rgb(99 102 241 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.focus\:border-indigo-500:focus {
  border-color: rgb(99 102 241 / var(--tw-border-opacity));
}
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color), 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-inset:focus {
  --tw-ring-inset: inset;
}

.focus\:ring-white:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.focus\:ring-indigo-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity));
}

.group:hover .group-hover\:bg-green-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.group:hover .group-hover\:bg-green-200 {
  background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}
}

.group:hover .group-hover\:text-slate-600 {
  --tw-text-opacity: 1;
  color: rgb(71 85 105 / 1);
}

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.group:hover .group-hover\:text-slate-600 {
  color: rgb(71 85 105 / var(--tw-text-opacity));
}
}

@media (prefers-color-scheme: dark) {
  .dark\:text-slate-200 {
    --tw-text-opacity: 1;
    color: rgb(226 232 240 / 1);
  }

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.dark\:text-slate-200 {
    color: rgb(226 232 240 / var(--tw-text-opacity));
  }
}

  .dark\:hover\:text-white:hover {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / 1);
  }

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.dark\:hover\:text-white:hover {
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

  .dark\:hover\:text-zinc-300:hover {
    --tw-text-opacity: 1;
    color: rgb(212 212 216 / 1);
  }

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.dark\:hover\:text-zinc-300:hover {
    color: rgb(212 212 216 / var(--tw-text-opacity));
  }
}

  .group:hover .dark\:group-hover\:text-slate-300 {
    --tw-text-opacity: 1;
    color: rgb(203 213 225 / 1);
  }

@supports (color: rgb(0 0 0 / 0)) and (top: var(--f)) {
.group:hover .dark\:group-hover\:text-slate-300 {
    color: rgb(203 213 225 / var(--tw-text-opacity));
  }
}
}

@media (min-width: 640px) {
  .sm\:mb-12 {
    margin-bottom: 3rem;
  }

  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .sm\:after\:hidden::after {
    content: var(--tw-content);
    display: none;
  }
}

@media (min-width: 768px) {
  .md\:fixed {
    position: fixed;
  }

  .md\:inset-y-0 {
    top: 0px;
    bottom: 0px;
  }

  .md\:mr-auto {
    margin-right: auto;
  }

  .md\:mt-0 {
    margin-top: 0px;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-auto {
    height: auto;
  }

  .md\:w-7\/12 {
    width: 58.333333%;
  }

  .md\:w-64 {
    width: 16rem;
  }

  .md\:flex-col {
    flex-direction: column;
  }

  .md\:self-start {
    align-self: flex-start;
  }

  .md\:rounded-2xl {
    border-radius: 1rem;
  }

  .md\:border-b {
    border-bottom-width: 1px;
  }

  .md\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .md\:py-6 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
  }

  .md\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .md\:pb-0 {
    padding-bottom: 0px;
  }

  .md\:pl-64 {
    padding-left: 16rem;
  }

  .md\:shadow-none {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: 0 0 #0000, 0 0 #0000, 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (min-width: 1024px) {
  .lg\:mb-16 {
    margin-bottom: 4rem;
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:items-center {
    align-items: center;
  }

  .lg\:justify-start {
    justify-content: flex-start;
  }

  .lg\:justify-center {
    justify-content: center;
  }

  .lg\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - 0));
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * 0);
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}
