<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
  <ul class="my-14">
    <li>
      <%=
        link_to 'Random bit',
                circuit_path(json: '{"cols":[["|0>"],["H"],["Measure"]]}'),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Random byte',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>","|0>","|0>","|0>","|0>","|0>","|0>"],["H","H","H","H","H","H","H","H"],["Measure","Measure","Measure","Measure","Measure","Measure","Measure","Measure"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Root-of-not',
                circuit_path(
                  json:
                    '{"cols":[["|0>"],["{RNOT"],["H"],["P(-Ï€_2)"],["H"],["}"],[1],["{RNOT"],["H"],["P(-Ï€_2)"],["H"],["}"],[1],["{Built-in RNOT"],["X^Â½"],["X^Â½"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Quantum Spy Hunter',
                circuit_path(
                  json:
                    '{"cols":[["{get two random bits"],["|0>"],["H"],["Measure>alice_h"],["|0>"],["H"],["Measure>alice_v"],["}"],["|0>"],["{set value"],["X<alice_v"],["}"],[1],["{apply H"],["H<alice_h"],["}"],["Swap","Swap"],["{ðŸ•¶spy"],[1,"H"],[1,"Measure>eve_v"],[1,"|0>"],[1,"X<eve_v"],[1,"H"],["}"],[1,1,"|0>"],[1,1,"H"],[1,1,"Measure>bob_h"],[1,"Swap","Swap"],["{apply H"],[1,1,"H<bob_h"],["}"],["{readout"],[1,1,"Measure"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Separable qubits',
                circuit_path(json: '{"cols":[["|0>","|0>","|0>"],[1,"H"],[1,1,"H"]]}'),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Entangled qubits',
                circuit_path(
                  json: '{"cols":[["{entangle"],["|0>","|0>"],["H"],["â€¢","X"],["}"],["Measure"],[1,"Measure"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Phase kickback',
                circuit_path(
                  json: '{"cols":[["|0>","|0>"],[1,1,"|1>"],["H","H",1],["P(Ï€_4)",1,"P(Ï€_4)"],[1,"P(Ï€_2)","P(Ï€_2)"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Swap test',
                circuit_path(
                  json:
                    '{"cols":[["{initialize"],["|0>",1,1],[1,"|0>",1],["}"],[1],["{swap test"],[1,1,"|0>"],[1,1,"H"],["Swap","Swap","â€¢"],[1,1,"H"],[1,1,"X"],[1,1,"Measure"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Custom conditional-phase',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>"],["H","H"],[1,"P(Ï€_4)"],["â€¢","X"],[1,"P(-Ï€_4)"],["â€¢","X"],["P(Ï€_4)",1],["P(Ï€_2)","P(Ï€_2)"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Remote-controlled randomness',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>"],["H",1],[1,"H"],[1,"P(Ï€_4)"],[1,"H"],["â€¢","X"],["Measure",1],[1,"Measure"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Basic teleportation',
                circuit_path(
                  json:
                    '{"cols":[[1,"|0>","|0>"],["{entangle"],[1,"H",1],[1,"â€¢","X"],["}"],["|0>",1,1],["{prep payload"],["Rx(11Ï€_8)",1,1],["Bloch",1,1],["}"],[1,1,1],["{send"],["â€¢","X",1],["H",1,1],["Measure",1,1],[1,"Measure",1],["}"],[1,1,1],["{receive"],[1,"â€¢","X"],["â€¢",1,"â€¢"],["}"],[1,1,1],["{verify"],[1,1,"Bloch"],[1,1,"Measure"],["}"],[1,1,1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Increment and decrement',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|1>","|0>","|0>","|0>"],[1,1,"H",1],[1,1,"P(Ï€_4)",1],["}"],[1],["{increment"],["â€¢","â€¢","â€¢","X"],["â€¢","â€¢","X",1],["â€¢","X",1,1],["X",1,1,1],["}"],[1],["{decrement"],["X",1,1,1],["â€¢","X",1,1],["â€¢","â€¢","X",1],["â€¢","â€¢","â€¢","X"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Adding two quantum integers',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|1>","|0>","|0>","|0>",1,1],[1,1,"H",1,1,1],[1,1,"P(Ï€_4)",1,1,1],[1,1,1,1,"|1>","|0>"],[1,1,1,1,1,"H"],[1,1,1,1,1,"P(Ï€_2)"],["}"],[1],["{a += b"],["â€¢","â€¢","â€¢","X","â€¢",1],["â€¢","â€¢","X",1,"â€¢",1],["â€¢","X",1,1,"â€¢",1],["X",1,1,1,"â€¢",1],[1,"â€¢","â€¢","X",1,"â€¢"],[1,"â€¢","X",1,1,"â€¢"],[1,"X",1,1,1,"â€¢"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Add-squared',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|1>","|0>","|0>","|0>",1,1],[1,1,"H",1,1,1],[1,1,"P(Ï€_4)",1,1,1],[1,1,1,1,"|1>","|0>"],[1,1,1,1,1,"H"],[1,1,1,1,1,"P(Ï€_2)"],["}"],[1],["{a *= b"],["â€¢","â€¢","â€¢","X","â€¢",1],["â€¢","â€¢","X",1,"â€¢",1],["â€¢","X",1,1,"â€¢",1],["X",1,1,1,"â€¢",1],[1,"â€¢","â€¢","X",1,"â€¢"],[1,"â€¢","X",1,1,"â€¢"],[1,"X",1,1,1,"â€¢"],[1,"â€¢","â€¢","X",1,"â€¢"],[1,"â€¢","X",1,1,"â€¢"],[1,"X",1,1,1,"â€¢"],[1,1,"â€¢","X",1,"â€¢"],[1,1,"X",1,1,"â€¢"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Quantum conditional execution',
                circuit_path(
                  json:
                    '{"cols":[["{a=(1,5)"],["|1>","|0>","|0>",1,1,1],[1,1,"H",1,1,1],["}"],[1],["{b=(1,3)"],[1,1,1,"|1>","|0>","|0>"],[1,1,1,1,"H",1],[1,1,1,1,"P(Ï€_4)",1],["}"],[1],["{a-=3"],[1,"X",1,1,1,1],[1,"â€¢","X",1,1,1],["X",1,1,1,1,1],["â€¢","X",1,1,1,1],["â€¢","â€¢","X",1,1,1],["}"],[1],["{if (a<0) then b++"],[1,1,"â€¢","â€¢","â€¢","X"],[1,1,"â€¢","â€¢","X",1],[1,1,"â€¢","X",1,1],["}"],[1],["{a+=3"],["â€¢","â€¢","X",1,1,1],["â€¢","X",1,1,1,1],["X",1,1,1,1,1],[1,"â€¢","X",1,1,1],[1,"X",1,1,1,1],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Quantum conditional phase flip',
                circuit_path(
                  json:
                    '{"cols":[["{a=0,1,2,3"],["|0>","|0>","|0>",1,1],["H","H",1,1,1],["}"],[1],["{b=1,3"],[1,1,1,"|1>","|0>"],[1,1,1,1,"H"],["}"],[1],["{a-=3"],[1,"X",1,1,1],[1,"â€¢","X",1,1],["X",1,1,1,1],["â€¢","X",1,1,1],["â€¢","â€¢","X",1,1],["}"],[1],["{flip if (a<0 && b==1)"],[1,1,1,1,"X"],[1,1,"â€¢","â€¢","â€¢"],[1,1,1,1,"X"],["}"],[1],["{a+=3"],["â€¢","â€¢","X",1,1],["â€¢","X",1,1,1],["X",1,1,1,1],[1,"â€¢","X",1,1],[1,"X",1,1,1],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'CNOT logic',
                circuit_path(
                  json:
                    '{"cols":[[1,1,"|0>"],[1,1,"X"],[1,1,"Measure"],[1,"|1>",1],[1,1,"|0>"],[1,"â€¢","X"],[1,"Measure",1],[1,1,"Measure"],["|1>","|1>","|0>"],["â€¢","â€¢","X"],["Measure","Measure","Measure"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Apply mirror to flipped phase',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>","|0>","|0>"],["H","H","H","H"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Grover',
                circuit_path(
                  json:
                    '{"cols":[["[prep"],["|0>","|0>","|0>","|0>"],["H","H","H","H"],["]"],[1],["[oracle"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["]"],[1],["[Grover iter #1"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["]"],[1],["[oracle"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["]"],[1],["[Grover iter #2"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["]"],[1],["[oracle"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["]"],[1],["[Grover iter #3"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["]"],[1],["[oracle"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["]"],[1],["[Grover iter #4"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["]"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Repeated iterations',
                circuit_path(
                  json:
                    '{"cols":[["{prep"],["|0>","|0>","|0>","|0>"],["H","H","H","H"],["}"],[1],["{Amplitude Amplification"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["}"],[1],["{Amplitude Amplification"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["}"],[1],["{Amplitude Amplification"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["}"],[1],["{Amplitude Amplification"],[1,1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'Multiple flipped entries',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>","|0>","|0>"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],[1,"X","X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,"X","X","X"],["X",1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],["X",1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],[1,"X","X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,"X","X","X"],["X",1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],["X",1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],[1,"X","X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,"X","X","X"],["X",1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],["X",1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],[1,"X","X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,"X","X","X"],["X",1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],["X",1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],[1,"X","X","X"],["â€¢","â€¢","â€¢","â€¢"],[1,"X","X","X"],["X",1,"X","X"],["â€¢","â€¢","â€¢","â€¢"],["X",1,"X","X"],["H","H","H","H"],["X","X","X","X"],["â€¢","â€¢","â€¢","â€¢"],["X","X","X","X"],["H","H","H","H"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT to distinguish 3 states',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|0>","|0>","|0>","|0>"],["H","H","H","H"],["P(Ï€)",1,1,1],["}"],[1],["{QFT"],[1,1,1,"H"],[1,1,"P(-Ï€_2)","P(-Ï€_2)"],[1,"P(-Ï€_4)",1,"P(-Ï€_4)"],["P(-Ï€_8)",1,1,"P(-Ï€_8)"],[1,1,"H",1],[1,"P(-Ï€_2)","P(-Ï€_2)",1],["P(-Ï€_4)",1,"P(-Ï€_4)",1],[1,"H",1,1],["P(-Ï€_2)","P(-Ï€_2)",1,1],["H",1,1,1],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT of simple QPU signal',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|0>","|0>","|0>","|0>"],["H","H","H","H"],["P(Ï€_4)",1,1,1],[1,"P(Ï€_2)",1,1],[1,1,"P(Ï€)",1],["}"],[1],["{QFT"],[1,1,1,"H"],[1,1,"P(-Ï€_2)","P(-Ï€_2)"],[1,"P(-Ï€_4)",1,"P(-Ï€_4)"],["P(-Ï€_8)",1,1,"P(-Ï€_8)"],[1,1,"H",1],[1,"P(-Ï€_2)","P(-Ï€_2)",1],["P(-Ï€_4)",1,"P(-Ï€_4)",1],[1,"H",1,1],["P(-Ï€_2)","P(-Ï€_2)",1,1],["H",1,1,1],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT square wave',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|0>","|0>","|0>","|0>"],["H","H","H","H"],[1,"P(Ï€)",1,1],["}"],[1],["{QFT"],[1,1,1,"H"],[1,1,"P(-Ï€_2)","P(-Ï€_2)"],[1,"P(-Ï€_4)",1,"P(-Ï€_4)"],["P(-Ï€_8)",1,1,"P(-Ï€_8)"],[1,1,"H",1],[1,"P(-Ï€_2)","P(-Ï€_2)",1],["P(-Ï€_4)",1,"P(-Ï€_4)",1],[1,"H",1,1],["P(-Ï€_2)","P(-Ï€_2)",1,1],["H",1,1,1],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT big square wave',
                circuit_path(
                  json:
                    '{"cols":[["{prepare"],["|0>","|0>","|0>","|0>","|0>","|0>","|0>","|0>"],["H","H","H","H","H","H","H","H"],[1,1,1,1,"P(Ï€)",1,1,1],["}"],[1],["{QFT"],[1,1,1,1,1,1,1,"H"],[1,1,1,1,1,1,"P(-Ï€_2)","P(-Ï€_2)"],[1,1,1,1,1,"P(-Ï€_4)",1,"P(-Ï€_4)"],[1,1,1,1,"P(-Ï€_8)",1,1,"P(-Ï€_8)"],[1,1,1,"P(-Ï€_16)",1,1,1,"P(-Ï€_16)"],[1,1,"P(-Ï€_32)",1,1,1,1,"P(-Ï€_32)"],[1,"P(-Ï€_64)",1,1,1,1,1,"P(-Ï€_64)"],["P(-Ï€_128)",1,1,1,1,1,1,"P(-Ï€_128)"],[1,1,1,1,1,1,"H",1],[1,1,1,1,1,"P(-Ï€_2)","P(-Ï€_2)",1],[1,1,1,1,"P(-Ï€_4)",1,"P(-Ï€_4)",1],[1,1,1,"P(-Ï€_8)",1,1,"P(-Ï€_8)",1],[1,1,"P(-Ï€_16)",1,1,1,"P(-Ï€_16)",1],[1,"P(-Ï€_32)",1,1,1,1,"P(-Ï€_32)",1],["P(-Ï€_64)",1,1,1,1,1,"P(-Ï€_64)",1],[1,1,1,1,1,"H",1,1],[1,1,1,1,"P(-Ï€_2)","P(-Ï€_2)",1,1],[1,1,1,"P(-Ï€_4)",1,"P(-Ï€_4)",1,1],[1,1,"P(-Ï€_8)",1,1,"P(-Ï€_8)",1,1],[1,"P(-Ï€_16)",1,1,1,"P(-Ï€_16)",1,1],["P(-Ï€_32)",1,1,1,1,"P(-Ï€_32)",1,1],[1,1,1,1,"H",1,1,1],[1,1,1,"P(-Ï€_2)","P(-Ï€_2)",1,1,1],[1,1,"P(-Ï€_4)",1,"P(-Ï€_4)",1,1,1],[1,"P(-Ï€_8)",1,1,"P(-Ï€_8)",1,1,1],["P(-Ï€_16)",1,1,1,"P(-Ï€_16)",1,1,1],[1,1,1,"H",1,1,1,1],[1,1,"P(-Ï€_2)","P(-Ï€_2)",1,1,1,1],[1,"P(-Ï€_4)",1,"P(-Ï€_4)",1,1,1,1],["P(-Ï€_8)",1,1,"P(-Ï€_8)",1,1,1,1],[1,1,"H",1,1,1,1,1],[1,"P(-Ï€_2)","P(-Ï€_2)",1,1,1,1,1],["P(-Ï€_4)",1,"P(-Ï€_4)",1,1,1,1,1],[1,"H",1,1,1,1,1,1],["P(-Ï€_2)","P(-Ï€_2)",1,1,1,1,1,1],["H",1,1,1,1,1,1,1],["Swap",1,1,1,1,1,1,"Swap"],[1,"Swap",1,1,1,1,"Swap",1],[1,1,"Swap",1,1,"Swap",1,1],[1,1,1,"Swap","Swap",1,1,1],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT Frequency to state',
                circuit_path(
                  json:
                    '{"cols":[["{write freq"],["|1>","|1>","|0>","|0>"],["}"],[1],["{invQFT"],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["H",1,1,1],["P(Ï€_2)","P(Ï€_2)",1,1],["P(Ï€_4)",1,"P(Ï€_4)",1],["P(Ï€_8)",1,1,"P(Ï€_8)"],[1,"H",1,1],[1,"P(Ï€_2)","P(Ï€_2)",1],[1,"P(Ï€_4)",1,"P(Ï€_4)"],[1,1,"H",1],[1,1,"P(Ï€_2)","P(Ï€_2)"],[1,1,1,"H"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT Prepare a state',
                circuit_path(
                  json:
                    '{"cols":[["{write freq"],["|0>","|0>","|0>","|0>"],["H",1,1,1],["â€¢","X","X","X"],[1,"X",1,1],["X","â€¢",1,1],[1,"X",1,1],["}"],[1],["{invQFT"],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["H",1,1,1],["P(Ï€_2)","P(Ï€_2)",1,1],["P(Ï€_4)",1,"P(Ï€_4)",1],["P(Ï€_8)",1,1,"P(Ï€_8)"],[1,"H",1,1],[1,"P(Ï€_2)","P(Ï€_2)",1],[1,"P(Ï€_4)",1,"P(Ï€_4)"],[1,1,"H",1],[1,1,"P(Ï€_2)","P(Ï€_2)"],[1,1,1,"H"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT frequency manipulation',
                circuit_path(
                  json:
                    '{"cols":[["{prep sinusoidal input signal"],["|0>","|1>","|0>","|0>"],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["H",1,1,1],["P(Ï€_2)","P(Ï€_2)",1,1],["P(Ï€_4)",1,"P(Ï€_4)",1],["P(Ï€_8)",1,1,"P(Ï€_8)"],[1,"H",1,1],[1,"P(Ï€_2)","P(Ï€_2)",1],[1,"P(Ï€_4)",1,"P(Ï€_4)"],[1,1,"H",1],[1,1,"P(Ï€_2)","P(Ï€_2)"],[1,1,1,"H"],["}"],[1],["{QFT"],[1,1,1,"H"],[1,1,"P(-Ï€_2)","P(-Ï€_2)"],[1,1,"H",1],[1,"P(-Ï€_4)",1,"P(-Ï€_4)"],[1,"P(-Ï€_2)","P(-Ï€_2)",1],[1,"H",1,1],["P(-Ï€_8)",1,1,"P(-Ï€_8)"],["P(-Ï€_4)",1,"P(-Ï€_4)",1],["P(-Ï€_2)","P(-Ï€_2)",1,1],["H",1,1,1],[1,"Swap","Swap",1],["Swap",1,1,"Swap"],["}"],[1],["{add one"],["â€¢","â€¢","â€¢","X"],["â€¢","â€¢","X",1],["â€¢","X",1,1],["X",1,1,1],["}"],[1],["{invQFT"],["Swap",1,1,"Swap"],[1,"Swap","Swap",1],["H",1,1,1],["P(Ï€_2)","P(Ï€_2)",1,1],["P(Ï€_4)",1,"P(Ï€_4)",1],["P(Ï€_8)",1,1,"P(Ï€_8)"],[1,"H",1,1],[1,"P(Ï€_2)","P(Ï€_2)",1],[1,"P(Ï€_4)",1,"P(Ï€_4)"],[1,1,"H",1],[1,1,"P(Ï€_2)","P(Ï€_2)"],[1,1,1,"H"],["}"],[1]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT rotating phases',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>","|0>","|0>"],["H","H","H","H"],["P(Ï€_9)",1,1,1],[1,"P(Ï€_9)",1,1],[1,"P(Ï€_9)",1,1],[1,1,"P(Ï€_9)",1],[1,1,"P(Ï€_9)",1],[1,1,"P(Ï€_9)",1],[1,1,"P(Ï€_9)",1],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"],[1,1,1,"P(Ï€_9)"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
    <li>
      <%=
        link_to 'QFT without the bit reversal step',
                circuit_path(
                  json:
                    '{"cols":[["|0>","|0>","|0>","|0>","|0>","|0>","|0>","|0>","|0>","|0>"],["H",1,1,1,1,1,1,1,1,1],["P(Ï€_2)","â€¢",1,1,1,1,1,1,1,1],[1,"H",1,1,1,1,1,1,1,1],["P(Ï€_4)","P(Ï€_2)","â€¢",1,1,1,1,1,1,1],[1,1,"H",1,1,1,1,1,1,1],["P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢",1,1,1,1,1,1],[1,1,1,"H",1,1,1,1,1,1],["P(Ï€_16)","P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢",1,1,1,1,1],[1,1,1,1,"H",1,1,1,1,1],["P(Ï€_32)","P(Ï€_16)","P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢",1,1,1,1],[1,1,1,1,1,"H",1,1,1,1],["P(Ï€_64)","P(Ï€_32)","P(Ï€_16)","P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢",1,1,1],[1,1,1,1,1,1,"H",1,1,1],["P(Ï€_128)","P(Ï€_64)","P(Ï€_32)","P(Ï€_16)","P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢",1,1],[1,1,1,1,1,1,1,"H",1,1],["P(Ï€_256)","P(Ï€_128)","P(Ï€_64)","P(Ï€_32)","P(Ï€_16)","P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢",1],[1,1,1,1,1,1,1,1,"H",1],["P(Ï€_512)","P(Ï€_256)","P(Ï€_128)","P(Ï€_64)","P(Ï€_32)","P(Ï€_16)","P(Ï€_8)","P(Ï€_4)","P(Ï€_2)","â€¢"],[1,1,1,1,1,1,1,1,1,"H"]]}'
                ),
                class: 'text-eel opacity-75 hover:opacity-100'
      %>
    </li>
  </ul>
</div>
